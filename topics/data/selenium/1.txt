['oh.. both actually. even though leaving the receive box makes this testable from selenium... hm..!', 'hmmm- its crashing selenium for some reasonyou can see if your changes work by doing `npm test` before deploying (or just `npm run test-browserify` to test the web stuff that seems to be breaking)', "ok so as this currently is it's not doing anything differently except for correctly failing the tests instead of pretending to succeed.", "so what's the relationship between this and #1230?", 'ok the relation is that this was my first idea. but i was talking to daleharvey on irc and he felt strongly in webdriver so #1230 is my attempt to fix selenium/webdriver', 'so am i right in thinking that the tests have never worked in browser on travis. and have just been reporting success the whole time? if so thats fairly embarrassing. apologies', 'but if that is so. then good for merging this. and disabling the browser tests on travis until they are passing. the swap to wd looks good. slightly confused about how the execute script thing is working but will look into it more. its working locally. if it could be cleaned up a bit with the console.logs etc would be goodworking on getting it passing today. thanks for all this', 'yes i can clean up the console logs. but i think we should leave in a log of tests run passed failed. a good sanity check', 'ok ping daleharvey nolanlawson this one has been de nitted', 'closing this for now', 'npm run test-browsers run in parallel. they shouldnt do that. bug with how we start selenium', 'it would be nice if there was a better way to do this. but couldnt see  a particularly obvious one', 'merged', 'you wouldnt install level binaries. npm install would become npm rebuildthe problems are mostly due to selenium. so it could be a matter of installing that seperately (or replacing it)', 'unable to npm install due to selenium', '(#1311) - included selenium binary', 'awesome thanks. can sort out the overall test discussion in the other thread', "it looks like maybe you don't have the test server running at all. have you run `npm start` to start the test server before running the suite?do you have a selenium server running at localhost:4444?", "nop. i didn't and i haven't. hehe.i thought that npm test ran all the necessary things to test protracto.firma automatica:mail enviado desde mi telefono movil. disculpe los errores y el formato.> el 20/4/2015. a las 18:50. julie ralph notificationsgithub.com escribio:> > it looks like maybe you don't have the test server running at all. have you run npm start to start the test server before running the suite?> > do you have a selenium server running at localhost:4444?> > --> reply to this email directly or view it on github.", 'cerdman did you fix the size of the screen for each test? sometimes that can happen because the ci servers have a different screen size and scrollto has a different result from what you can see on your local machine.', 'isn\'t it "seleniumserverjar" parameter?', 'onabort event. is there any way i can detect user exited protractor tests manually using os options. i think `oncomplete`. `oncleanup` does not work for for this case.it will be useful incase if user is adding few things on launch and want to clear them on exit. when user closes it. protractor or selenium closes all the open browser windows. at that context if onabort event is fired. it helps a lot to clean up thingsthanks', '`afterlaunch` is not called when it exited.', "can you provide your set up? if you put a console.log in afterlaunch it doesn't print?", 'hankduan afterlaunch is working when protractor itself has closed after everything is completed. but when user explicitly closed using cmd + c or some other command or using close button. it is closing all browser windows but afterlaunch is not executed. i am afraid if this is a limitation.', "probably the best thing to do would be to include `selenium-webdriver` as a `devdependency` in your project and do something more like:``` jsremote = require('selenium-webdriver/remote');browser.driver.setfiledetector(new remote.filedetector());```unfortunately we can't integrate every feature in selenium directly into protractor.  is there some sort of documentation which would have been useful for you?", 'expectedconditions.elementtobeclickable doesn\'t account for other elements covering the target. in the following:```var element = $(\'#div\');browser.wait(protractor.expectedconditions.elementtobeclickable(element). 5000. \'element not clickable\');element.click();```if `$(\'#div\')` is covered by another element `element.click()` results in a selenium error:> unknown error: element is not clickable at point (10. 10). other element would receive the click: <div id="cover">...</div>even through `browser.wait(protractor.expectedconditions.elementtobeclickable(element). 5000. \'element not clickable\')` does not result in an error.', "correct. right now `elementtobeclickable` just checks that it's visible and enabled.", 'jloveland i\'m experiencing issues with running `grunt test:e2e` the tests are failing about 50% of the time for me. to reproduce. just run this grunt task. after it\'s completed run it again. and repeat the process. the selenium server is running each time. but the test complains about "element is not clickable.."i\'m wondering if there\'s an issue with the webdriver process staying open. or something along those lines. can you test this on your end?', "point back to grunt-protractor-runner. the option to automatically update the selenium drivers got merged into grunt-protractor-runner so i'm pointing back to the original repo.", 'stf grid. i have 2 linux machine and each has more than 10 devices. could i start one instance  on sft and have access to all devices? like selenium grid', 'hey guys.i did try using the selenium standalone server apparently i still see the timeout issue. could you please provide your suggestion?-dennis', "i'm also experiencing this issue.  it only happens on windows and the only solution i've found is to set `keepalive` to true.  the downside with that solution is that it leaves the selenium process running.", '(#55) - add firefox/phantom to allowed failures. something changed recently so selenium is not working in travis.  i have no idea what it is. but all the tests recently are failing with "unable to connect to selenium."  the node tests are good enough. especially since pouchdb tests everything else anyway. so i think this is fine.', 'ah crap. but now selenium is busted.', 'timebombed', 'this is different from your original issue. so it might be more convenient to open a new issue.in the new issue. please post the appium server logs. as well as what system you are trying to use.just for reference. a lot of the gesture actions do not work on ios 7', "i think robot framework probably needs to be updated so that it can work with the selenium 3 protocol. maybe someone can make an appium extension to robot framework.the only workaround i can suggest right now is patching the driver object you get with robot framework to include the context commands. you can take a look at the appium-client code to see how that's done.", 'added selenium-webdriver bridge sample', 'appium is not a grid hub. you need to run selenium grid as the hub.', 'changes for screwdriver:start browser on remote selenium host and reuse session', 'use different selenium as a workaround before the blocker is remoted', 'disable selenium tests for travis. enable travis for server unit tests. until we get the selenium thing resolved..', 'switch to sd default selenium']