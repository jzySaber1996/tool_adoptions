['just bumping this bug ticket up. since my team is encountering this bug as well running our selenium tests. my teammate was able to switch to using a chrome driver. but would definitely appreciate a fix/patch for this!', "> glepretre not really. i want to split up my tests across several machines so that i can get a quicker result. multicapabilities allows you to do that across browsers. but i want to split up my tests even if i'm just using one browser.+1 paolodm", 'i think this is now a dupe of #569 - until that gets implemented. i would start up selenium using `webdriver-manager` once. and then concurrently run protractor against it with different configuration files pointing at the same `seleniumaddress`.', "silence here for a while. so i'm assuming that the sad answer to the original question is no. no way to run without the java runtime. closing.", "selenium doesn't work on linux. execvp(): no such file or directoryseleniumprocess.pid: 26186events.js:72        throw er; // unhandled 'error' event              ^error: spawn enoent    at errnoexception (child_process.js:988:11)    at process.childprocess._handle.onexit (child_process.js:779:34)", 'sorry about that. the site was not running locally', 'protractor is a little slower on linux. browser is not opened fast enough. and so the test fails. is there a general solution for this.', 'hi.thanks for looking into this. i agree that the situation as it stands can be confusing. i think you\'re right that `get/first/last` would make more sense if they return elementfinders. i\'m not sure about `map` and `each` - these imply "now i\'m doing something with the elements". and i think it makes sense for them to be talking immediately to selenium. i\'m also not quite sure what you mean by wrapping elements returned from `findelement` - once you\'ve talked to selenium. you can\'t go back.', "sorry to be a little confusing on that.by wrapping i meant to make the interface consistent i.e. any element(or set of elements) returned(regardless of whether it is deferred or returned from selenium) via protractor layer always provides elementsfinder(or elementsfinderarray) interface.this wouldn't make sense if there needs to be a clear distinction from the finders that will defer the operations.", 'what is the syntax to specify `maxsessions`? is it documented yet?', "this question might be better for stack overflow. where you could tag with selenium - it's a general selenium/webdriver setup question. not really anything specific to protractor.", "sorry i misunderstood your issue; this particular feature isn't available yet. reopening", 'selenium ide formatter. it would be really cool if we had a formatter to export directly from the selenium ide to node.is this reasonably easy / has it been done yet?', 'i am having the same issue. running protractor directly works. but from grunt it does not.installing chromedriver package and pointing to it in grunt gets past this error. then it complains about no selenium. when i do the same for selenium as for chromedriver. it still complains but with a different error. that new error is the same one i get when i run protractor on its own with seleniumserverjar. chromedriver or seleniumaddress with any value (to get protractor working i had to leave these values blank).wish i could be of more help. only been using protractor for a couple of hours.', 'i amended my commit to fix an issue with the name of the "postinstall" script that is responsible for installing selenium and chromedriver dependencies. s/post_install/postinstall', "nice one :+1: it's definitely easier than have to restart appium to re-register with the grid.", "it looks good to me. i don't know much about grid either. /cc jlipps", "also. we typically define functions as variables instead of doing `function foo()`. but since i didn't catch this the first time. i'll let it slide :-)bonus points for rewriting the function definition style in this file!", "calls to window_handles crash appium when remote debugger not online. it shouldn't fail. but should return a selenium error or an empty list of handles instead.", 'support .isselected() for switch elements. in ios. a "uiaswitch" object is an on/off toggle switch. trying the isselected() method on these elements isn\'t supported in ios (seems to work in selendroid. though)java example:driver.findelement(by.name("example").isselected())returns:org.openqa.selenium.webdriverexception: not implemented in this context. try switching into or out of a web view (warning: the server did not provide any stacktrace information)technically. .gettext() on a switch returns "1" or "0" for on/off respectively. so there is a workaround.', 'in android there is a field selected for some toggle controls. so this isselected() can work cross platform. i wonder if there is a .select() method in appium already?', 'additionally. for android. element.attribute("selected") will return the value.', "there are already selenium methods for changing the device orientation. this shouldn't go in mobilecmdmap.", "if methods for changing orientation in java don't exist. those should be contributed to the java selenium bindings. methods exist already in python. wd.js. etc...", 'where can i find an example of that selenium method to rotate?', 'implement set and get orientation. currently java and python selenium does not support setting orientation. python selenium only has the get option.  it would be good to add the get and set orientation to the mobilecmdmap so it can be called using the javascript executor "mobile: xxx" until java implements the rotation since it is already available in the controller.js.if possible. add these to controller.js. setorientation : exports.setorientation. getorientation : exports.getorientation', 'implement full screenshot support for mobile safari and mobile chrome. being able to take full screenshots (entire webpage. below the browser view port) on mobile devices with selenium would be a huge enhancement!', 'alert handling is not implemented for android. alert alert = driver.switchto().alert();system.out.println("alert text: "+alert.gettext());when i run the above code in android + windows + appium. the exception is.org.openqa.selenium.webdriverexception: not yet implemented. please help us:  (warning: the server did not provide any stacktrace information)command duration or timeout: 5 milliseconds', "i don'y believe switch().alert() is implemented on android. and if it is not implemented it would be equally not implemented between windows and mac"]