['this lgtm. lukasolson one more set of eyes?', 'lgtm!', 'wait for one second to make sure attachmediastream worked. also move common selenium stuff to a modulekaptenjansson', 'add munge-sdp and trickle-ice selenium tests. tests for my favorite demos. comments inline...', "(i think i'll make a new pr once i'm done figuring out the issues here... it works like charm locally but seems really flaky on travis...)", 'add selenium tests for munge-sdp and trickle ice pages. basically #574 without all the commits trying to figure out what went wrong.- fixes the shared profile issue created by moving stuff to the lib- adds tests for munge-sdp and trickle-ice- makes the gum demo not wait for one second but until window.stream is defined (i think this polls every 500ms)', '"the ""fix"" in the last commit is odd. why is this only a problem with the last test run?!"', 'lgtm', '"add basic datachannel and pc1 tests. i wish there was a ""slowdown"" mode for selenium where it delays actions for 1 second so one can watch this... :-)"', 'trying to merge this and pray to the selenium and firefox gods ;).', "i'm no selenium expert. so i may be missing something. but why is this needed? if selenium can synchronously get us back a promise from getstats. isn't that sufficient?", 'tried adding all the build() firefox logic in selenium-lib.js to the test file directly but i get the same result. that rules out some import issues.', "switch to using testem. selenium has stopped bother to download which. combined with the the fact that the tests fail in firefox due to #1215 but the tests don't actually catch it means we need a new approach. this switches out selenium for testem and fixes a few test.", "the problem isn't with any tests in particular its that it doesn't know it's done. (and yes i will squash. i just can't test locally as it's an issue with travis in particular)", 'is testem actually launching firefox (/real browsers)? if so then thats ok. i want to get towards testing more real browsers / environments. not lesskinda confused at how testem can work. as far as i know you either need deep integration into the test framework via a server. or to be controlling it with a driverif this is down to issues with selenium downloads. we can just embed them?', 'fix selenium. possibly instead of #1227', '"i think that i\'ve found the problem.apparently. the chromedriver file i\'m using in master was corrupted.also. my code is dependant on the ""selenium-driver"" node module."', 'i think this is obsolete.', 'i am saying that it work with selenium started as `java -jar with -dwebdriver.ie.driver=<path to iedriverserver>` (side note) but the `error - unable to start a webdriver session.` for automaicaly started wd session is still valid.', "not sure what to say - we can't reproduce the problem. it's an issue with chromedriver. chrome. or the selenium standalone server. can you try reinstalling them?i'm going to close this issue sine it's not a general problem. but we can keep discussing here.", "fyi. the api names are make consistent with the java/python selenium expected conditions (although i think some could sound a little weird)closing this issue since it's already addressed and released.", '$http.jsonp not work. i have few `http.jsonp` to request data from another site after my page loaded. it loads normally when open with browser manually. but it does not get executed in selenium browser. it seems to be that jsonp request was never issued by browser. could you please have a check on this?', "please ignore this. my problem is not actaully http.jsonp was not executed. but it's another function which at the upper invocation chain of http.jsonp not get executed.", "i'm going to close this issue since i haven't seen any other reproducible reports of this. and i cannot provide a reproducible example to selenium.", "from what i could see all tests fail in the event of a console error. don't you think would be great to check console changes after each test in order to find out which interaction caused the error?right now we have a website with a lot of fields not localized yet so we have a lot of info entries in console. it gets so huge that i'm getting java heap space errors when the plugin tries to print it. maybe a parameter to avoid the print...```[launcher] error: unknownerror: java heap space    at new bot.error (c:\\users\\user\\appdata\\roaming\\npm\\node_modules\\protractor\\node_modules\\selenium-webdriver\\lib\\atoms\\error.js:113:18)    at object.bot.response.checkresponse (c:\\users\\user\\appdata\\roaming\\npm\\node_modules\\protractor\\node_modules\\selenium-webdriver\\lib\\atoms\\response.js:106:9)    at c:\\users\\user\\appdata\\roaming\\npm\\node_modules\\protractor\\node_modules\\selenium-webdriver\\lib\\webdriver\\webdriver.js:377:20    at [object object].promise.controlflow.runinframe_ (c:\\users\\user\\appdata\\roaming\\npm\\node_modules\\protractor\\node_modules\\selenium-webdriver\\lib\\webdriver\\promise.js:1877:20)    at [object object].promise.callback_.goog.defineclass.notify (c:\\users\\cstein\\appdata\\roaming\\npm\\node_modules\\protractor\\node_modules\\selenium-webdriver\\lib\\webdriver\\promise.js:2464:25)    at [object object].promise.promise.notify_ (c:\\users\\user\\appdata\\roaming\\npm\\node_modules\\protractor\\node_modules\\selenium-webdriver\\lib\\webdriver\\promise.js:563:12)    at array.foreach (native)    at object.goog.array.foreach (c:\\users\\user\\appdata\\roaming\\npm\\node_modules\\protractor\\node_modules\\selenium-webdriver\\lib\\goog\\array\\array.js:203:43)    at [object object].promise.promise.notifyall_ (c:\\users\\user\\appdata\\roaming\\npm\\node_modules\\protractor\\node_modules\\selenium-webdriver\\lib\\webdriver\\promise.js:552:16)    at goog.async.run.processworkqueue (c:\\users\\user\\appdata\\roaming\\npm\\node_modules\\protractor\\node_modules\\selenium-webdriver\\lib\\goog\\async\\run.js:125:21)[launcher] process exited with error code 100```", "not sure what's going on - this works fine for me against latest chrome. sounds like this isn't a protractor issue. probably something with webdriver on your machine - can you open a question on stack overflow or the selenium repo?", "the config you posted does not seem to have a `seleniumaddress`. you're correct that it doesn't seem to be using that - you should turn of `directconnect` and only use `seleniumaddress`.i'm going to close this issue since it looks like it's not a general problem with protractor. but a specific setup question. please continue discussion on closed issue or. preferably. move to stack overflow. which is better suited for support-style questions. thanks!", "best practice to avoid non deterministic results?. too many times i get non deterministic results.are there any best practice to follow to avoid them?is there any way to understand when it can be a network problem?as an example. i run my test on selenium grid with 3 node instances. 2 are ok. 1 fails.furthermore: shouldn't be scrollintoview() method automatically executed before each click? any click needs that action. so why any developer have to execute that line of code every time for example?", 'could you modify the protractor.conf.js file to point to a local selenium instance for your local dev?', "fix grunt-protractor-runner dependency. i've added an option to grunt-protractor-runner to install the selenium drivers during the protractor task instead of always installing with grunt-protractor-runner. i added this option for situations where a user would not want to install the drivers in the ci environment.", ':+1:', 'lgtm', "creating unit tests in browser. we've been using a selenium driver to test code in the browser. but this comes at the cost of complexity and unreliability.use a test runner and mocha to put tests in the browser and pull out the results. this is for unit testing only. as we cannot manipulate the browser itself. only the code therein. this is a library. so no end-to-end testing is actually needed as no user input actually takes place. hence the move towards unit testing.", "ponelat thanks. i should have done this to begin with. i set up selenium because that's what swagger-ui was using. but you are correct. that is better for e2e testing.", "mrhanlon we really appreciate the efforts that drove us here. i managed to port over the test your wrote. just let me know if i'm hitting the right spots :d", '"vm.exec() with multiline is broken?!?. i\'m work on a updated selenium unitests... but it seems that multiline code will not work anymore.e.g.:```vm.exec(\'print ""one""\\nprint ""two""\');```will result in:```debug: operationerror:debug:  operror-type: syntaxerrordebug:  operror-value: (\'eol while scanning string literal\'. (\'c callback\'. 1. 6. \'exec \\\'print ""one""\\n\'. 0))>>>```next try:```vm.exec(\'print ""one""\\\\nprint ""two""\');```result:```debug: operationerror:debug:  operror-type: syntaxerrordebug:  operror-value: (\'unknown character\'. (\'<string>\'. 1. 12. \'print ""one""\\\\nprint ""two""\\n\'. 0))>>> ```this has been worked yesterday. isn\'t it?"', '"should i use `vm._execute_source()` ???edit: one difference is:```vm._execute_source(""print __name__"") -> __builtin__vm.exec(""print __name__"") -> __main__```is that ok?"', 'reduce overhead of creating multiple pypyjs instances. is there a way to reset the vm ?this would be helpful for fast. atomic selenium unitests...', 'whoops. looks like i broke then when i split up the functionality into `exec` and `exec`.  working on a fix now...', "not easily.  we could fake it by clearing the scope that code runs in. but that wouldn't help for modules that have global state.a better option would be to create a fresh vm for every test with `new pypyjs()` but this is currently very expensive. as it loads and parses `pypy.vm.js` each time.  so i think the best way forward may be to refactor the constructor so you can call `new pypyjs()` multiple times without so much overhead.", '"> should i use vm._execute_source()btw the short answer to this is ""no""; that one\'s only really for intenal use since it runs in the raw global scope rather than a carefully managed namespace for user code."', '> so i think the best way forward may be to refactor the constructor so you can call new pypyjs() multiple times without so much overhead.:+1:', '"> should i explicit test if vm._execute_source(""print __name__"") will return **main**. too?no. that\'s not part of the public api so i don\'t want to commit to any particulars of how it should behave."', '"one final request. please `git commit --amend` to put a single commit message like ""add selenium tests for interactive console"" rather than the squashed commit history.these tests will be really valuable. especially with travis integration.  thanks jedie!"', "i was thinking of just running them directly in the spidermonkey command-line shell. i.e. plain javascript tests without a python runner around them.  but it's probably too much hassle to be worth setting that up. and a combination of running under nodejs shell and in a browser via selenium will give pretty solid coverage.", 'when i schedule for 5 runs . only first run will be success for next runs it fails mentioning time out.this happens only in red hat . in mac it works excellent. can i know the procedure how to run with selenium jar ? this would help me a lot.', 'doanduyhai i guess we could check on this - if it has become a frequent problem we could get travis to retry tests. i have not seen this much. on the other hand. selenium test failures seem to be more frequent.', 'looks good', 'merging today if no more comments', 'error:```09:55:34.147 error org.apache.zeppelin.integration.zeppelinit:257 - exception in zeppelinit while testsparkinterpreterdependencyloading org.openqa.selenium.timeoutexception: timed out after 60 seconds waiting for org.apache.zeppelin.abstractzeppelinit$13d56054b```could you check?', '"ci fails with a strange error: ```caused by: org.openqa.selenium.nosuchelementexception: unable to locate element: {""method"":""partial link text"".""selector"":""create new note""}command duration or timeout: 8 milliseconds```any idea?"', 'to clarify: you use the programmatic interface to start multiple selenium instances and thus hit the event emitter leak?lgtm otherwise.', "wrapping selenium-standalone to grunt task. i'm into wrap this module in a grunt task just to start and stop the server.do you know how i can kill the server using javascript?do i need to get the pid manually to do it or the function `kill()` available in the module do it for me?", '"i guess this is an npm/node.js windows related bug rather than a selenium-standalone bug. i am sorry i cannot help your further.you should look for `npm ""is not a valid win32 application""` and `node.js ""is not a valid win32 application""`.and use the npm and node.js github repositories. i am sur there\'s some valuable information.let me know"', "i'm making a module which is a grunt plugin to start and stop the server.i'll expose two tasks `selenium:start` and `selenium:stop`. the project uses as dependence `grunt-continue` module to force the stop task to run if the test fails.so:the task `selenium:start` actually is two tasks `selenium-standalone:start` and  `continueon`. in that order.same way `selenium:stop` but `continueoff` and `selenium-standalone:stop` in that order.because of that if any task after `selenium:start` fail the `selenium:stop` will be executed any way.i'll publish it soon", '"bug with long press  with drag and drop. i am try to long press with drag and drop with the below code webelement we = driver.findelement(by.name(""internet""));new touchactions(driver).longpress(we).movebyoffset(130. 140).build().perform();but above code give an exception ava.lang.nullpointerexception    at org.openqa.selenium.interactions.movetooffsetaction.perform(movetooffsetaction.java:37)    at org.openqa.selenium.interactions.compositeaction.perform(compositeaction.java:31)so how we long press with drag and drop using appium"', '"yes. there\'s an issue for this already on the java-client.there\'s also a pull request i\'ve sent to the selenium java client. to make it easier to add custom errors in a cleaner manner.i think there might be a way to access the ""original error"" or ""inner error""? want to take a look at the code. perhaps submit a pull request?"', "i'm using selenium python client ...but now i'm going to try with appium one. by the can you please clarify how to do with selenium one too...thanks for helping..", "do we still need this? it looks like it's fully implemented for native ios now.", "been thinking about this for a while; i don't think there's any way to take a screenshot using javascript. all we can do from the native side is get what's currently in the app window.", 'the right way is not to use the old selenium touch api but instead the new one. which client are you using?', '"is this a performance issue between using `driver.findbyid(""q"")` vs `driver.find(by.id(""q""))?if so. it\'s totally the selenium java implementations fault. i think the `by` functions involve a bunch of extra function calls. possible involving reflection."', 'closing unless omerobaid is still experiencing trouble.', "i am using this:this.browser                .elementbyname('section2row3')                .then(function (el) {                    var action = new wd.touchaction(browser2);                    action                        .press({el: el});                    return action.perform();                })                .elementbyname('section1row2')                .then(function(el) {                    var action = new wd.touchaction(browser2);                    action                        .moveto({el: el});                    return action.perform();                })                .then(function() {                    var action = new wd.touchaction(browser2);                    action                        .release();                    return action.perform();                })also cannot scroll. i think it has something to do with apple's own framework. i think..", "ankit9568 you should be using the new touchaction methods with the appium java-client.```new touchaction(driver).longpress(we).moveto(we. 130. 140).perform();```make sure to read the documentation for `.moveto()` since it's actually an offset from the upper left corner of the `we` object.", 'travis has errors ff/selenium unrelated', "the error (last i saw) is from selenium. not from the web server itself. it's not possible for us to test the response code (and other things) through selenium."]