["looks like firefox beta doesn't like selenium-webdriver anymore :-/", "one thing to note though: since har creation. connection throttling etc. depends on a local proxy. those features won't be available when running a remote browser. you'd have to pass the --noproxy option when running with a remote selenium server.", 'put in retry logic in connections to selenium', '(#2761) - increase retries for selenium server connection', "you're doing god's work. man.", 'more like +1000', 'get console from running saucelabs / selenium instances. admc / sourishkrout any ideas about this? a large percentage of our failures are onliy via saucelabs and its fairly hard to debug from one side', 'nicktomlin did you have chance to try it?', 'the selenium issue you linked does not seem to be the same thing we are asking for. people in that thread are asking to be able to **test response headers** going to protractor. we are asking to be able to **set request headers** coming from protractor to the server at the start of the test. this functionality is to do things like simulate a logged in or "cookied" user w/o having to take the extra step of explicitly logging in every time. also in our case it could be used to bypass an annoying resource-consuming overlay which sets a cookie when the user closes it - telling it to not to show up the next time the page is loaded. as a workaround we have created dummy pages to set these cookies. but it slows the tests down when protractor first has to hit these dummy pages before every test.we also use a wurfl-based tool called scientia which sets a header to indicate the make. model. browser and os of the various devices we support. it would be nice to be able to spoof this to test different device-specific behaviors.', 'ping sjelin :)', "sorry!  i'll merge a bunch of stuff in today", 'merged in with f533341', "dnozay i've tried with the latest selenium (from the master branch) - same issue. note that it also fails with `directconnect` - meaning that it is most likely the firefox-specific issue..thanks!", "protractor not running. we i run comannd `protractor conf.js` it return error```[launcher] process exited with error code 1undefined:1190    vlog(2. () => this + ' scheduling notifications'. this);             ^syntaxerror: unexpected token )    at goog.loadmodulefromsource_ (c:\\users\\mundha\\appdata\\roaming\\npm\\node_modules\\protractor\\node_modules\\selenium-webdriver\\lib\\goog\\base.js:1123:19)    at object.goog.loadmodule (c:\\users\\mundha\\appdata\\roaming\\npm\\node_modules\\protractor\\node_modules\\selenium-webdriver\\lib\\goog\\base.js:1085:46)    at c:\\users\\mundha\\appdata\\roaming\\npm\\node_modules\\protractor\\node_modules\\selenium-webdriver\\lib\\webdriver\\promise.js:1:6    at object.exports.runincontext (vm.js:64:17)    at object.context.closure.goog.retrieveandexecmodule_ (c:\\users\\mundha\\appdata\\roaming\\npm\\node_modules\\protractor\\node_modules\\selenium-webdriver\\_base.js:135:8)    at <anonymous>:1:6    at object.exports.runincontext (vm.js:64:17)    at context.closure.closure.vm.createcontext.closure_import_script (c:\\users\\mundha\\appdata\\roaming\\npm\\node_modules\\protractor\\node_modules\\selenium-webdriver\\_base.js:104:12)    at object.goog.importscript_ (c:\\users\\mundha\\appdata\\roaming\\npm\\node_modules\\protractor\\node_modules\\selenium-webdriver\\lib\\goog\\base.js:879:9)    at object.goog.importmodule_ (c:\\users\\mundha\\appdata\\roaming\\npm\\node_modules\\protractor\\node_modules\\selenium-webdriver\\lib\\goog\\base.js:900:14)```i am not able to run e2e testing using this tool", 'ukyomatterport please see the selenium issues referenced or ask a question on stackoverflow. thanks!', 'cgoldberg "some of the assets may be blocked" means that the site and sitespeed.io run in china where many things such as tracking/social are blocked. i suspect that the site works ok for the user as they\'re loaded async etc. but if browsertime/selenium has to wait for all assets to finish loading. i will never get the results. finding which assets exactly are timing out is quite difficult as they\'re often dynamic.ideally. i\'d like to get a report from sitespeed for what was loaded until a custom set timeout occurs. in other words. i\'d be fine with sitespeed reporting it took for example 200ms for backend. 1s to start painting etc with the full page render being equal to my custom set timeout.', 'tested locally and solves the issue with import. lgtm! ci failure is irrelevant with selenium profile flaky test below:```tests in error:   paragraphactionsit.testeditondoubleclick:443 >> elementnotvisible element is no...```', 'i see i think the iedriver download path should default to the selenium one if not specified. do you think you can do a pr?', 'both can you setup runable example or add a failing test so that we can iterate on this. thanks', "> in lib/start.js...is there a reason the buffers need to be flushed?> > // add empty handler to stdout and stderr so the buffers can be flushed>     if (selenium.stdout && selenium.stderr) {>       selenium.stdout.on('data'. noop);>       selenium.stderr.on('data'. noop);>     }does that triggers a bad thing for you?", 'the more i think about it the more i thinkg that we should throw/error in the case a selenium server is already running.otherwise this selenium instance would be unusable right?', "michaelbenin please provide a detailed issue explanation on the issue you are facing. right now i see babel/selenium issues rather than selenium standalone.selenium standalone is only a launcher. if you have selenium/webdriver issues that's another problem.", 'strange google chrome is not working. try to get the relevant selenium log maybe.', "michaelbenin it runs on a mac but not on your machine. so try the regular selenium project wihtout using my module and see if it works. if it does not then it's a selenium issue maybe related to the way google chrome is installed.", 'so you have a running selenium you start another one but then you still use the first instance?', "> sometimes it crashes when an error occurs and doesn't shut down selenium at all.so this is the real issue then?", "there is no issue with my scenario. it's justified when the other gulp task crashes - it can happen and is not related to this issue. all i am saying is that the selenium child process is still running and not cleaned up which can happen in my scenario.", 'maybe a software upgrade broke selenium?', 'ok. i got it working again. happens always after reboot. i start it:`xvfb-run --server-args="-screen 1. 1366x768x24" selenium-standalone start`then stop it with `ctrl+c`then `killall java` then start it again. and it seems to work... no idea why...', "the unable to connect to selenium comes from lib/check-started.js:17:10 in this repo. could you have a look to see what's wrong?basically this will do a get on the computed url for your selenium instance.it's pretty straightforward to add a simple console.log() to see what's the computed url and see why the get doesn't works.that would help us a lot mbitson thanks", 'hybrid app: dynamic element locator unable to find at running time. hi friends.i am working on android hybrid mobile app. dev side they are using jquery with backbone. in all pages elements are loading dynamically. using uiautomatorviewer i am able to find the elements xpath value.same xpath value written in code.at the time of running time i am getting "org.openqa.selenium.nosuchelementexception: an element could not be located on the page using the given search parameters. (warning: the server did not provide any stacktrace information)command duration or timeout: 222 milliseconds"  please help me....', 'luonglne bootstraponline jlipps i got an email reply from the ceo. a very. very. good email reply. they actually did it. they reimplemented uiautomation for windows. osx. linux from ios4 to present. multiple devices controlled from a single host. currently in private-beta. they plan to announce it later on this year.', 'cc jonahss', "is there any way for one of the appium devs to join the private beta? it'd be awesome if appium could support this in time for the launch announcement.", "is libimobiledevice open source?  if it's free. do we know it will remain free?", 'it\'s open source. if their instruments support is in "private beta" it probably won\'t be free?', 'somewhere along the way i got the impression that only parts of the project are open source.  that could be totally wrong tho.', 'yeah. i think it was a confabulation.', 'jonahss correct. i was told there will be licensing fees.bootstraponline i asked to be notified of any updates. i suppose saucelabs could formally introduce themselves to the company and request some kind of partnership and/or private-beta admission.', "won't do appium much good. though. except for using the open source bits.", "0x1mason i think it's worth sauce talking with them to find out the details. maybe they'd be willing to work something out.", "0x1mason i dunno. assuming the fee isn't astronomical i would think buying a couple of license for say 25 linux boxes with 4 devices each might not be too bad? do a little beta with customers. experiment with pricing. if their linux-instrument-client works well i feel like the profits would be higher than the license costs. everyone wants to test on mobile. nobody wants to deal with setting up the infrastructure. take it from me. i spent nearly 2 years trying to get that stuff to work in my office. eventually it did work. but my time would have been better spent just writing tests and sending selenium commands to saucelabs.", "tokunbo it certainly sounds like it could help sauce. just don't see how a licensed product could be worked into appium.  bootstraponline agree that we should definitely find out more.", "0x1mason oh. true. the appium of this github repo won't have linuxtruments(yup. that's what i'm saying now). the users of this repo would have to stick to single devices on a macosx hardware. maybe instructions on how to add the licensed linuxtruments after git cloning would be included.", 'hi everyone.i am new to mobile automation and i had to perform android mobile automation can any of you pls provide the full doc so that i can start.i dint understood how to perform device rooted.can you pls provide me a simple program like opening google.com in android mobile app using selenium automation.i am using appium. selenium. testng.please do the needful.thanks in advance.', '+1', 'tokunbo we would like to talk to the libimobiledevice developers but have never been able to contact them. could you try connecting us?', 'ankit4aug saikrishna321 i sent an email to the company.  . specifically the tech-support email listed there. i asked if i could get the software. they replied they have it in private beta; which i took for _"we\'re not going to give it you just yet."_ i did tell them to let me know if there\'s ever a chance for me to try out the software.jonahss i was never able to contact libimobiledevice people either. i only tried the url that was listed for "instruments". which sent me to mirell.com. which got me that email reply that the software exists and is in use by some limited people somewhere.i don\'t want to be too troublesome for them. i assume if they were going to give me the software they would have the first time i asked for it. i do plan on asking again after some respectful time has passed. maybe 3 weeks to a month. looking at my original github comment talking about the reply it looks like 12 days have passed since then.... so probably this friday march 6th. or friday march 13th i\'ll send another email.', 'jonahss ah. the libimobiledevice folks are different from the instruments company. i could actually try them now....', 'were you able to figure this out?', 'add support webelement.rect.  be nice to implement this. in uiautomation we get it out of the box with `rect()`.', 'closing. may be reopened if needed.', "jonahss when searching through webview contexts we use the selenium atoms. so this code isn't touched at all. the issue here is that jeffscaturro-wf is trying to run a native command on a webview element. but these are in separate worlds. the frustrating thing from his perspective is that the element _is_ actually accessible in native mode (uiautomation does give native access to some webview elements). so he should be able to do this. but because uiautomation gives access to these elements. sometimes there are so many (say in the case of a big webpage). that we rule them out from search to make searches take a reasonable amount of time.i think that the only solution here is to provide a capability that turns searching through webviews natively back on. it will make people's tests slower but it will allow them to have native access to certain webview elements.in general this isn't something we want to support. however; theoretically there should be a way to use the atoms to do pretty much anything you'd want to do with an element while in the webview context.", '`org.openqa.selenium.interactions.touch.touchactions` is the old. unsupported selenium implementation of the touch actions. it is unrelated to the commands that run on appium.', 'dependencies: selenium-webdriver (upgrade)', 'add command option to choose selenium host to run test with different browser']