['already did. trying to get some more information also here. thxis there a way to run protractor without selenium. are you giving some thought on this for the future?', "fix(webdriver-manager): use follow-redirects instead of http. google changed selenium-server-standalone.jar's location and is returning 302http module does not follow redirectscloses #826", ':+1:', 'sweet. thanks cesarandreu', "only problem is it doesn't seem to break out of the update script properly now. it just hangs (even though the chromedriver zip file was successfully unzipped).", 'just noticed this by running it in my ci. looking into it now :(.', "you're referring to the script hanging. right?", "i get the same. it just never breaks out and puts me back in the console. after ctrl+c'ing it's fine. because the files are cached at that point. so subsequent runs will succeed.", "fix(webdriver-manager): use request module instead of http. google changed selenium-server-standalone.jar's location and is returning 302http module does not follow redirectscloses #826", 'awesome. much appreciated.edit: verified the fix. thanks!', "verified working with circleci. my builds are now proceeding as expected. they're not public though.", "i don't like selenium. it is really buggy. and special browsers need special drivers. that don't work on all platforms. i would like to create a runner. that will open browsers and close them when the test (running/done). nodejs has this child_process library. and it can be done with this.", "replace webdriver(selenium). i don't like selenium. it is really buggy. and special browsers need special drivers. that don't work on all platforms. and then configuring them takes time and its painfull.i would like to create a runner. that will open browsers and close them when the test are running/done. nodejs has this child_process library. and it can be done with this.", 'sorry. protractor is based pretty heavily on top of webdriver and there is a lot of infrastructure around webdriver such as saucelabs and many companies internal setup. selenium does more than open browsers and close them. it takes care of all communication between the test and the browser.', 'verified that this hangs. closing in favor of #830', "sigh. it makes me super sad to have to muddy the dependencies with request and all of its sub-dependencies. but since follow-redirects isn't working. this seems preferable to re-writing the redirect following wheel. i'll fix up the style to be consistent and commit.", "there's also dealing with things like infinite redirects - i'm surprised this isn't natively part of the http module. oh well.", 'merged as 6249efe57109d238044394636d623e0bd93dd4ad', 'ok. thxis there maybe a library that will allow me the following.i would like to have a server. where my app is running and all the tests are. then i have some virtual machines that are running e2e with protractor and are connected to the server running the app. i would like that server tells the clients(other machines) that the tests and/or app changed. and that they need to run the (new) tests again. something like karma does with socket.io. does anyone know if someone is already working on something like that.', "output is `[launcher] chrome passed` when i close the browser. if a test is running and i accidentally close the browser or selenium goes down protractor test exit code is 1. which is fine. but the output doesn't suggest the test errored:```[launcher] chrome passed```branch: master", 'protractor parallel test using selenium grid. hi all.i have read the #111 post (closed). where the last question raised was very relevant:"glepretre ... i want to split up my tests across several machines so that i can get a quicker result. multicapabilities allows you to do that across browsers. but i want to split up my tests even if i\'m just using one browser."does anyone knows if there was any progress in that direction?many thanks.omer', 'yay. they added it to selenium!', "do something like this: ```specs: [    './*_spec.js'].splittestsbetweencapabilities: true.  multicapabilities: [{    'browsername': chrome.    count: 10}].```note however. that keyword 'count' might be replaced with the keyword 'maxinstances' soon. also. this feature is in master right now and not yet released.", "i have tried this. but i saw it doesn't run in parallel but run all the tests on the same browser ten times.", "you need this flag:```splittestsbetweencapabilities: true.```also. like i said. this feature isn't released yet. you need to grab it from master if you want it now. or you can wait for the next release.", 'any output from the selenium standalone?', 'test(selenium): add a mock driver provider for integration testing. with `mockselenium: true` in the config. an instance of webdriver using afake executor will be used. this executor returns a successful test responsefor any command. and never connects to a real browser.', 'hankduan quick look?', 'merged into master', 'looks good', 'merged as ad33da8ecc76322cee36a7344042a52ff33c280c', 'iedriver also available at  - added it to the link description. fixed the platforms link.', 'how to run a standalone selenium server?', 'the getting started instructions page explains - look at the webdriver-manager command in your node command prompt. then set the seleniumurl in your config and set chromeonly=false.', 'huh. same thing seems to work for me. have you updated selenium standalone and chromedriver?', "tested today and... it's working perfectly as expected! :) thanks a lot hankduan and the rest of the team. keep up the good work.", "protractor is limited by the features available in selenium/webdriver. so there is no better way to close the print dialog. you might be able to do the same as the solution you linked (sending the escape key. which would look like ```     browser.actions().     sendkeys(protractor.key.escape).     perform();```i haven't tried this yet though.", "the problem is that you're specifying a port for the selenium server to be started on. and then trying to start two instances of it. the first one uses up the port and the second tries to get the same port `4444` and causes an error. you could fix the issue by not specifying `seleniumport` and letting the server pick an unused port. then. two servers will start in parallel and everything should work.there are a couple things protractor could do to make this experience better. we could have only one server start and provide both browsers. but that breaks our underlying structure of what's owned by the launcher and what's owned by an individual runner instance. we could also just provide a better warning if you attempt to use `seleniumport` and more than one capability.", "can you share your configuration (or at least. how you're setting up the selenium server)? i tried this and can't reproduce the error.", "ok thanks for your answer. it makes sense and it's pretty obvious...i got confused because the default `protractor.conf.js` that i had seemed to imply that specifying a `seleniumport` was compulsory to let protractor manage its own server. closing this.", "you're right. the error is in not starting chrome. can you post the logs from the selenium stand-alone server?", "```http error: 500</h2><pre>org.openqa.selenium.webdriverexception: java.lang.nullpointerexcept```check your selenium  server log.btw you can run this just to rerun the cookie test:```mocha test/local/per-method-test.js -g 'comp|cookie'```", 'always install selenium', 'appium setup. just started to use appium for mobile web app automation in ios and android.i download appium.dmg and ran the appium app. i already have a webdriver-testng framework using java with maven. i want to understand whether i need to use any appium jar file or put any maven dependency (appium server dependency like selenium server) in pom.xml ?', 'guys - any solve for this yet??i have been trying for two days but not able to run multiple instruments on one machine- did any one gave this a try??', 'all tests pass.the purpose of this patch is to ensure appium responds to pending queries made by the selenium driver during an instruments shutdown.  this patch does _not_ handle the case where there are no pending queries and instruments dies.  in other words. when testing. you can\'t kill instruments any time. it has to be during a selenium call.a good test would be to take one of the test apps and set "application does not run in background" to yes in it\'s plist.  then. in a test. send the app to to the background via "mobile: background" and verify that selenium doesn\'t hang on the command for 60 seconds when the app and instruments die.thoughts?', "> cannot set the selection endi've never seen this before. what are you trying to do? also. someone on irc #selenium might know more about what this error means.", "document that protractor requires jdk. the error message resulting from a missing jdk is somewhat cryptic:```------------------------------------pid: 20518 (capability: chrome #1)------------------------------------starting selenium standalone server...events.js:72         throw er; // unhandled 'error' event          ^error: spawn enoent    at errnoexception (child_process.js:998:11)    at process.childprocess._handle.onexit (child_process.js:789:34)[launcher] runner process exited with error code: 8```it appears that i'm not the only person that's run into this (#200). it would be helpful to mention the jdk requirement in the docs.", 'jrothenbuhler - do you fancy putting together a pr on the readme for this?', "yeah no problem. i'll take a stab at it."]