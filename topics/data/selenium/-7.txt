["it's not strictly a callback as it's not for notification. but people understand the notion of a callback. it's really a predicate function.i guess the block term comes from another language (probably ruby in this case) that uses them for waiting logic.samccone not sure if i'm in the same wavelength as you here. but i've seen this done in ruby selenium tests before.", "attach `driver` to environment.. this issue was discovered while trying to send keys which are held in the `driver.key` object.in pioneer's current state. i would need to require `selenium-webdriver`. this would also require adding `selenium-webdriver` to my project's package.json.it would be great if i could just use `this.driver.key.shift`.will be more than happy to send a pr...", 'done!', 'correct. the url field was getting set properly prior to the latest chrome update. i initially noticed a discrepancy between running the tests using the config to specify the location of the chrome driver. and launching the driver manually and specifying the seleniumaddress instead. launching the driver via config would cause the url to get set incorrectly. while the manual approach would be more reliable. however. after the last update. neither of these works.', "what are you trying to do? are you just trying to solve #1221? i think that's an issue with the way the protractor launcher is starting up selenium. not your fault.the way that the drivers work is more like:selenium standalone server ---> chromedriver ---> chromeselenium standalone server ---> iedriver ---> ieselenium standalone server ---> firefoxdriver ---> firefoxfirefoxdriver comes with the selenium standalone server. so you don't need a separate binary for it. but everything goes through the selenium standalone server. in #1221. the issue is that multiple instances of that are trying to use the same port.", 'is it possible to modify your workflow so that before starting protractor. you start up the selenium server (e.g. using `webdriver-manager start`). and then use `seleniumaddress` in the config? that would avoid the port-race-condition. and also would make your tests run faster because the selenium server only needs to be started once.', "to clarify - when a new selenium server is started. it _should_ be picking itself an unused port automatically. you do not need to set anything up to make the ports different. the issue seems to be that this isn't working 100% of the time.", "whelp that's not good. your selenium server is not being started up correctly.can you try re-downloading and starting it again?", "hi. thanks a lot for your response. yap i understand this is something beyond protractor may be issue at webdriver. i've also posted same on appium/selenium as well but no response - may be some expert on webdriver can help me on it. not able to find any so far.let say if there are 10 elements on page i am able to click on 6 out of 10. rest are not. not able to understand what is the problem.", "iedriver not being downloaded by default is working as intended (many users are on linux/mac and iedriver isn't usable there).my first impression is that it's not a good idea to go around changing the system path for the user - but we should have better docs on how to get iedriver set up. chromedriver is not actually added to the path - instead. its location is passed to the selenium server explicitly.", "what about just having an explicit option to require the user to say if they need to turn off strict ssl? that way we don't need to introduce more dependencies and wrap existing code.", 'merged as 2204bf1efcdd46a7d478857e22e22cf91143915e', "or perhaps we could support both approaches? i.e. cli argument and strict-ssl npm setting?feel free to let me know how you'd like this done.", "i have a strong preference for avoiding adding more dependencies. so i'd like to just use the cli argument. i don't know if there is a strong precedent pattern of using the strict-ssl setting though (you mention one other package) - if this is a node.js wide best practice then i'd consider it.", "i honestly do not know if there's a general pattern of using the strict-ssl setting for this kind of thing. because i saw that it was used in karma. which is after all another google project. i assumed that it would be something consistent with this current project.anyway. i'll make the necessary changes to use it with a cli option only.", 'internet explorer is actually still in the top 3 most used browsers according to the majority of statistics on the web. which means that every project that aims to get maximum exposure should support it. the days of `<!--[if lte ie 8]>` might be over. but ie 10+ is still a factor. and wine seems to allow linux users to test internet explorer.that said. i do understand why it is not set as default. this was more of an issue that i had to investigate and spend effort on circumventing than anything else.> chromedriver is not actually added to the path - instead. its location is passed to the selenium server explicitly.is it possible to implement similar functionality for the iedriver?', "if anyone needs to pass it via grunt-shell like me. you need to bump max buffer size. my config:``` jsshell: {    webdriverupdate: {        options: {            execoptions: {                maxbuffer: 1024 * 1024 * 64.            }.        }.        command: './bin/selenium.sh install'.    }.}.```", 'multiple seleniumaddresses?. is it possible to use multiple seleniumaddressess (in connection with `multicapabilities`)? i would like to share the same config for a browser `x` on selenium address `y` and browser `a` on selenium address `b`.', 'thanks! i definitely prefer the explicit cli only way for now.', 'nope. this is not currently supported.', "i've now modified my code to use a cli option named `ignore_ssl`.having said that. the travis build failed but i'm not sure that it's related to my change...", 'thanks! merged as ee82f9e3d0656b3c88f041f0115743352bc08941', 'cheers!', 'assigning specific ports to selenium server when using multi capabilities. hi.we are using protractor as testing framework for our web product.our coverage includes 3 browsers: chrome. firefox and ie. current configuration includes multi capabilities and the ports for selenium server instances are chosen randomly.the problem is that sometimes selenium server choose the same port for two instance which fails one of test instances.is there any way to add port assignment per browser. such that each selenium instance will work on specific predefined port?thanks.munir', "this is a bug with selenium's port finder. i believe.closing issue as a dupe of #1221", 'hm - at some point. if you want to customize a ton. i feel like you should just download the binaries and run the standalone server yourself. `webdriver-manager` is intended to work for the simple use case. not to replicate every single option available. if you actually had to specify all those download urls and the hub option. would using `webdriver-manager` really be adding any value to you over just running `java -jar selenium-standalone.jar`?', 'sorry julie - i asked the question but due to changes to the account i haven\'t got the answer notification.i will explain what i meant:i wrote a library for selenium webdriver that wraps the driver instances and the web element instances. this way - the user can use her existing tests and i keep track of the "user actions" (i.e. mouse clicks. keyboard input using sendkeys - etc.). this is a small part of what i\'m doing - but it\'s what\'s relevant right now.so. for example. my driver instance wrapper implements findelement in order to return my wrapper of web element - so that my implementation of sendkeys will be called.now i\'m trying to achieve the same in protractor. the problem is the use of globals. i don\'t want to cause the user to change the tests more than i have to. ideally she would only have to call a wrap method and leave the following code unchanged.if i understand your suggestion correctly - i still have to override browser and element in the global namespace - right?thank you!', 'you are launching with `&` not giving enough time to update & start selenium> $ webdriver-manager update &> $ webdriver-manager start &> $ protractor protractor.jsprotractor will start before selenium is ready therefore econnrefused', "one possibly interesting thing i've noticed is that when phantom does crash i see org.openqa.grid.selenium.gridlauncher on my mac menu bar at the top. i see terminal momentarily lose focus while this happens. the occurrence of this failure seems to be completely random. but when it happens all the tests fail. and the tests usually won't pass again unless i wait a while before trying to run them.all my tests always pass in chrome.", 'what is the alternative of  findall.findany & findbys  (selenium) in protractor ?. we are using findall.findany &findbys in selenium page object model.we want same thing with protractor page object.is there any way to use in protractor?', "i want to use two identifiers for same element for example:userbox is same ui element that having different id & name on different pages likevar userbox=element(by.id('userxox'))orvar userbox=element(by.model('ng-userbox'));so if userbox identified by id than use userbox first one   else use userbox second one (that is identified with ng-model).", 'sure. `cbrowser` is a "plain" `webdriver` instance (c for chained).the third party tool i happen to be looking at right now is `mocha-selenium`.  it provides a function `setup()` that returns an instance of `webdriver` created with `wd.remote()`.  i want to use the promise api. so i\'m looking for a way to get an instance of `promisewebdriver` or `promisechainwebdriver` from that.', 'looks like it would be really easy to add the option to mocha-selenium. jaredly any opinion on this?', "yeah. that definitely makes the most sense. i put together mocha-selenium before the new `wd` promise api came out. so it's due for an update", 'closing. saw the patch on mocha-selenium. btw jaredly it would be good to have some code sample in mocha-selenium. could not get it to work in 5mn with the readme doc so gave up. if you send me a working config file. i can help with that.', 'paulboony i removed the request dependency and now you could just make a pr to selenium-standalone modifying the request to use a proxy.please reopen this issue when you have a working pr', "actually i haven't given it a great deal of thought either. just felt that we could have an abstraction added in nemo-view some how so that users don't have to know internals of selenium-webdriver. wanted to open an issue so that it doesn't fall though. i'll let you know what i think", "any particular reason we need scroll? selenium-webdriver should by default scroll to an element and interact with it as a normal user would do. if it doesn't then its a bug in selenium-webdriver", "yeah. i'm more inclined towards generic use cases. also our core libraries should stay away from using js executor. i would vote to add js if we can fulfill a wider use case to bridge in gaps until selenium-webdriver adds such native support. i'll let grawk decide :)", 'ios: ui testing with appium. using selenium webdriver with java. how to verify text color. font. background colour in appium on ios deviceiam using selenium webdriver with java', 'yes. you can get a screenshot of the ios device using the selenium screenshot command. the image diff will have to be done with a 3rd party library', 'this is not in the scope of the appium project. you can get an image using the selenium screenshot command. but reading the text from it will have to be done with a 3rd party tool. i know these tools exist. but i cannot recommend one', 'ios: how to verify splash screen in appium. hicould you please help on thisis it possible to verify splash screen that displayed on the ios application. also can we get the text displayed on splash screen. iam using appium-selenium webdriver with javahicould you please help on this', 'please stop cross postingon nov 5. 2013. at 10:10 pm. ubmobile notificationsgithub.com wrote:> hi> could you please help on this> > is it possible to verify splash screen that displayed on the ios application. also can we get the text displayed on splash screen. iam using appium-selenium webdriver with java> > hi> could you please help on this> > --> reply to this email directly or view it on github.', 'i was able to create test setup for my android apk with your help. now i am able to install. run the application and log into it using c# code and selenium web driver on the emulator.i want to log out of the application which i am not able to do. i need to access the menu button of the emulator and then the logout option which i am not finding any way out. please let me know how we can do it. thanks.', 'this is common in selenium testing. you should wait for some element that appears when the code is ready to move on.', 'how to add web driver jar to the test project.?. i dont know whether what i am asking is correct or wrong.i just started working on appium.i am working on windows.how to add webdriver jar to the test project.?"import org.openqa.selenium.*" .so what jars should i add to make these imports work..?will this library be provided with appium for windows which i have downloaded from the official site.?']