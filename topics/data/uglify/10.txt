["license should be preserved. license should be preserved. if you don't use the built-in uglify task.", 'npm uglifyjs -> uglify-js', "change the cache dir of build-optimizer and uglifyjs-webpack-plugin. ```- [ ] bug report -> please search issues before submitting- [x] feature request```### desired functionalityi need to change the 'build-optimizer' and 'uglifyjs-webpack-plugin' cache directory to another location. outside the 'node_modules'. i will store the cache for the other builds. done in the ci.is this possible?", "this isn't a setting we expose currently. no.", 'having this in top level scope:```jsdisposeallerror.prototype = object.create(error.prototype)```will prevent tree-shaking of `disposeallerror` in most cases. because assignments like this are treated as effectful. especially considering the fact that `object.create` may not be whitelisted as "pure" in dead code eliminators like uglifyjs (it might be. aint sure about this. would have to check).', "be careful with arithmetics. so there is expression: 'a' + ++n; uglifyjs2 turned it into 'a'+++n which is parsed as 'a'++ + n which obviously doesn't work. please handle this situation more carefully.", "without reading through all of the pull requests. i made my own. but i'm impartial as to which one gets merged in. seems like it's been a while since anyone has looked at this. many task runners could really take advantage of this functionality. since uglify is one of the more common build tasks in web development. i recommend this become a priority.let me know how i can help.", 'what we ended up doing is just not calling minify directly from uglify and instead used the custom minify function that is inside this pr.luckily the function is small. so we can maintain it for now. but yes. it would be nice to just have this in the library itself.', "something else i've had to do is be able to take in a source map as a string (coffeescript generated source map). i've got it on my fork. when i see mishoo spend a bit more time here on uglify. i'll send a pr. he seems to be pretty occupied with angular-kendo (understandably).", 'good idea.  perhaps an external script can read a .js file. find & set configurations. then call uglifyjs?', 'ok. my bad. `switch back to uglify-js (uglify-es is abandoned. if you need uglify es6 code please use terser-webpack-plugin).` seems to be the problem.', 'i solved it by using `babel-minify-webpack-plugin` instead of `uglifyjs-webpack`', "i solved a similar issue by changing the uglify plugin's settings in the webpack config to not change fnames:```optimization:{  minimizer: [new uglifyjsplugin({      uglifyoptions: {        compress: {          inline: 1.          keep_fnames: true        }.        mangle: {          keep_fnames: true        }      }    })]}```"]