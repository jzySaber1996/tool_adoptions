['webpack-sources dependency in uglifyjs plugin need to be updated', ':+1: yes. you are right!i build my project without uglifyjs plugin, debug works for me.is there any good solution to the problem? or i have to study how ts/uglifyjs works together to generate sourcemap ...', 'confirmed. manually installing uglify-js 2 seems to fix the bug.', "confirmed  `npm i uglify-js2 -d` worked for me.  annoying that it's not in the documentation", "looks like an oversight to me.i'd file a pr to add the dependency. but i suspect the dependency should be placed under `uglifyjs-webpack-plugin`", 'webpack-bot move to webpack-contrib/uglifyjs-webpack-pluginuglifyjs-webpack-plugin should have uglify-js as dependency', "<!-- identifier: moved-by-bot -->i've moved it to webpack-contrib/uglifyjs-webpack-plugin.", 'i do actually not include any uglifyjs-webpack-plugin module. can this still be reason?', 'not using babili and switching back to uglify fixes this.', "uglifyjs can't handle es6+ syntax.  success in webpack2 just because i translate es6+ all to es5", 'webpack-bot move to webpack-contrib/uglifyjs-webpack-plugin', "grunt / gulp build. hi.in the grunt file. there is:grunt.registertask('build'. ['env:dev'. 'lint'. 'ngannotate'. 'uglify'. 'cssmin']);and in the gulp one:gulp.task('build'. function(done) {    runsequence('env:dev' .'lint'. ['uglify'. 'cssmin']. done);});is there any reason to set node_env to development before the build ? i don't think that node_env is used during the build process.", "ng build -prod uglify?. i just wondered if there is an option to uglify the compiled javascript.i don't want my variable- and function-names to show up in code. also it would save alot of space.i read on a page that `ng build -prod` does uglify. but i don't see that in my dist folder. maybe it got removed? or is there any option i'm missing?", "we do run uglify on your code. but unfortunately uglify does not rename properties. only function and variable names. a lot of your methods will be properties and not renamed by uglify. we're looking at solutions but for the time being this is probably not going to change.", 'can you add this plugin in your webpack.aot.js ? (push in plugins array)`new webpack.optimize.uglifyjsplugin({      compress: {          warnings: false.          drop_console: true      }.      output: {          comments: false      }    }).`unless you installed uglify-js module you have to install it first`npm install --save-dev types/uglify-js`and can you show me your bundle file size with aot compile ?', 'hey guys. make sure to install the libraries (source-map and optimist) inside uglifyjs/ cd uglifyjs/npm install source-mapnpm install optimist', "any way to shut off the warn output under node.js. howdy;i'm using this directly in a node app. and notice it's pretty chatty on the command line with various warnings - i do want to see those warnings on occasion. but i'd like to turn them off under production use.  here's how i'm calling things (i'm trying a few different keywords in the options to figure this out myself - i realize they don't work =) ``` javascriptuglify.minify(js_file_list.{'mangle':true.'verbose':false.'stats':false.'warnings':false}).code```", 'cool! thanks much.  the new uglify seems to handle corner cases better than the old one.  great work!']