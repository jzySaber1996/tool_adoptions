["add missing dependencies. hi. i wanted to run the examples locally and `npm install` failed because `note-parser` wasn't in package json. it also failed because i don't have `browserify` and `uglifyjs` installed globally. so i added those as devdependencies so it's not necessary to already have them globally installed.", 'no problem. thanks for the quick response. and also the library!', "removing angular from uglify excludes.moving initial `setselection` for android to `initnativeview` to solve error in some contexts of `cannot read property 'setselection' of undefined. undefined`.", 'working on a minimal repro and haven\'t been able to trigger it yet.  on my real application. uglify-es is minifying webpack\'s output: ```jsvar async = __webpack_require__("./store/middleware/async.js")```to ```jsvar t=["e"];```unsure if webpack. uglify or something else is at fault.  will follow up.', 'this should respect the `devtool` setting. or at least detect that `devtool` is set to produce source maps and emit a warning if the equivalent uglify plugin option is not set.', 'issue was closed because of inactivity.if you think this is still a valid issue. please file a new issue with additional information.', "petemill awesome. thanks for the detailed analysis! :) seems like uglify-es is a clear winner vs babili. i've squashed it into this branch.", "any word on this one? other issues around the internets seem to point to uglifyjs causing issues. since angular-cli doesn't let you modify the webpack.config directly. i can't figure out a way to tell uglify not to touch mapbox.", "same here.i'm in a windows environement and the cli works fine. but when trying to use uglify through a node script i get this error.", "this is most probably a usage issue. not a bug.  however. i can't help you guys out until you tell me how you're using uglifyjs. ;-)", "thanks for the insight. mishoo.you were spot on about the encoding_type for readfilesync.you might wanna update the readme.md file of the project with that snippet you just pasted :all the code i provided is just copy and paste from there and i was using it to try a basic testcase before going further. so that'd make sense to have this in there as a working example to build upon.", 'add uglifyjs.minify(string) to self (browser) build. when you build uglifyjs itself ($ uglifyjs --self) the output script will not include the minify() convenience function. this is understandable as it is not (easily) possible to read files outside of node. but i would like to have a convenience function for parsing and compressing a string of javascript in this context as well.there was talk of a minify_string() function here #17. but it got dropped in favor of the fromstring option to minify() which is no use to me since that is absent outside of node.', 'another one i noticed:from uglify2 output: this```function (e. s) {    zovi.user.logout();    var a = s.user_name;    zovi.user.setguestuseremail(a)}```could be minified to:```function (e. s) {    zovi.user.logout();    zovi.user.setguestuseremail(s.user_name)}```any reason it cannot be done? looks like this transformation can be done regardless of the context outside this method.(again. i apologize if this is not the right place to point these out)', 'better require. the readme file contains this :```var uglifyjs = require("uglify-js");```it doesn\'t work in node.js so i added a `main` into the `package.json` and also a `index.js` at the root of the project. it is now possible to require it as a node module :```var uglifyjs = require("./node_modules/uglify-js");```', "`main` was already present in `package.json`; also. node's `require` is already able to locate uglify-js in `node_modules`.  i see no reason for this patch.", "comments option preserved all jsdoc style comments. the comments options is preserving all jsdoc style comments. even when they don't contain `license` or `preserve`.``` jsuglifyjs.outputstream({   'comments': true});```", 'the docs made me think that `"comments": "all"` would preserve all comments and so setting it to `true` would auto preserve comments with `license` or `preserve`.', 'yes. `uglify-js2` is deprecated. use `uglify-js` instead', 'then i shall amend my current issue and will update the subject line accordingly:would you please ask the people at npm to de-list uglify-js2?while that is taking place. could you update uglify-js2 to be the latest codebase but somehow show an error or warning that this package is now deprecated?', "uglify-js2 can easilly be unpublished by mishoo the problem is there are currently libraries that still depend on it.  it shows an error that says it's deprecated when you install it.  i have opened pull requests on virtually all the libaries that still depend on the old package. so once those are updated it may make sense to un-publish `uglify-js2`.it does not make sense to keep publishing updates for it as that will just perpetuate the problem of people depending on the wrong library."]