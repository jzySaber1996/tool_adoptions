['upgrade rollup and add size snapshot. size snapshot rollup plugin is able to provide info abouttreeshakability for both webpack and rollup.removed `uglify-es` which is dead project currently. uglify-js worksfine here.ignored all dependencies from node_modules in esm bundle by providinga function.', "detect as esm module format if 'let' is used. does this make sense to do? threw me for a loop today when i couldn't uglify my module due to a dependency not having any explicit import/export statements leading to it not being detected as esm module-format.", 'es2015 language features are not a good indicator for esm. because you can use `let` in cjs or amd. or just plain scripts if you only care about modern browsers (or node).', 'yes.could uglifyjs itself find these comments and set configuration?', 'imho it would be better for an external project to read & set configurations.', 'ok. i already use uglifyjs with a shell wrapper.', 'fixed trystatement ast reformat when using acorn. as shown in  there is no property  named`handlers` in the trystatement node. but one named `handler`.previously. a typeerror (cannot reach `[0]` of `m.handlers`) exceptionwas thrown when using `uglifyjs` with the `--acorn` switch.', 'why uglify runing so slow?. fileutil.readfile(file. "utf-8". function(err.data) {                if(err) {                    console.log("reading file "+ path.resolve(file)+" error");                    return;                }                var filename = path.basename(file. ".js");                console.log("fuck")                var result = uglify.minify(data. {                    outsourcemap: filename + ".map".                    fromstring: true                });                fileutil.writefile(file. result.code. "utf-8". function () {                    console.log("file " + file + " created");                    fs.rename(file. path.dirname(file)+"\\"+filename+"_"+util.md5(data. 7) + ".js". function() {});                });                fileutil.writefile(path.dirname(file)+"\\"+filename+ ".map". result.map. "utf-8". function () {                    console.log("file " + path.dirname(file)+"\\"+filename+ ".map created")                });            })when i run this code. the console diaplay logs very very slow!!!!when i remove minify code . it runs fast?please tell me why?how can i modify it?', "giving a second thought about this... it would be probably better idea to just uglify the final js file and let gzip do it's job.", 'use uglify-like. related to #380']