['this worked for me```js{  optimization: {    minimizer: [      new uglifyjsplugin({        uglifyoptions: {          output: {            comments: false          }        }      })    ]  }}```', 'you could also use uglify to extract the licenses to another file.', 'uglifyjs-webpack-plugin with terser will be release on next week/cc sokra i think we can update plugin in webpack4. because it is fork of uglify-es and contains only fixes', '> i think we can update plugin in webpack4. because it is fork of uglify-es and contains only fixeskzc could you confirm that uglify-es to terser is not a breaking change upgrade?', "> could you confirm that uglify-es to terser is not a breaking change upgrade?terser is a superset of and drop in replacement for `uglify-es`. like any open source project by unpaid volunteers there is no guarantee. as was the case with `uglify-es`. every point release can potentially introduce errors. although there's an extensive test suite with close to 2000 tests. you'd be well advised to test it with your project as you would with any library. feel free to check the terser open issues and commit log.", 'sounds good to me. in my opinion uglifyjs-webpack-plugin could upgrade...', 'hi guys. sorry for coming back to this topic. but i have tried a billion ways now to get the uglyjsplugin running. all i get i the same error over and over again. any thoughts what i might be doing wrong here?const uglifyjsplugin = require("uglifyjs-webpack-plugin");module.exports = {  mode: "production".  optimization: {    minimizer: [      new uglifyjsplugin({        sourcemap: true.        ecma: 5.        warnings: false.        ie8: false.        safari10: false.        dead_code: true.        comments: false.        uglifyoptions: {          compress: {            inline: false          }        }      })    ]  }....};', "you need add `const uglifyjsplugin = require('uglifyjs-webpack-plugin')` in your config file", "d19cannon seriously? you use `const uglifyjsplugin = require('uglifyjs-webpack-plugin')` in top. but in `minimizer` option you use `uglifyjsplugin`. look on `s` in plugin  name (first example with lowercase. second in uppercase)", 'i upgraded uglifyjsplugin.', "ngannotate isn't already in uglify task?``` js// js minifying taskgulp.task('uglify'. function () {  var assets = _.union(    defaultassets.client.js.    defaultassets.client.templates  );  return gulp.src(assets)    .pipe(plugins.ngannotate())    .pipe(plugins.uglify({      mangle: false    }))    .pipe(plugins.concat('application.min.js'))    .pipe(gulp.dest('public/dist'));});```", 'i think it would still be nice to be able to specify some uglify options. i like smknstd am really interested in being able to turn off compression. we did that in our prior webpack build before moving to the cli and it made it almost 3 times as fast. we got the idea from a post from [slack]( which quotes the author just like smknstd did.it would be nice to have a flag for that at least as having our build server take 3 times as long doing builds for 5% improvement is definitely not ideal.if people are interested in other uglifyjs options it seems like perhaps a viable option would be to handle uglifyjs options like the `proxy.conf.json` and allow fine tuning?', "i corrected the error by replacing(function(){ return this || (0.eval)('this'); }()).dot = dot;withthis.dot = dot;function(){ return this || (0.eval)('this'); }()in safari under debug returns undefinedbut. why this error occurs only after processing uglifyjs i did not understand. perhaps because of the brackets?", 'while it\'s a good feature to have to preserve utf-8 as is in uglify. for those who arrived at this page looking for solution to the "invalid regular expression: range out of order in character class". you can at least add charset="utf-8" in your script tag\'s attribute. and also make sure you have <meta charset="utf-8"> in your html mark up to get rid of the error.', 'does `-m toplevel=true` work?', "> by the way. consider disable cleanup of unused variables in `uglifyjs` by default. that looks like `jshint` task.a lot of the time you're not just compressing your own code. but plugins &c. as well. it is a safe transformation.in the same sense you could ask why uglifyjs prints out parse errors. that's a job for your editor. right? ;)", 'still. though. seriously... uglify should be using regular modules and explicit exports. rather than this homegrown vm stuff.  what percentage of users of uglify are _not_ running it on the command line with node?', 'comments at end of file not being recognised. it seems the parser is not recognising comments located right at the end of a file. for example:``` javascriptvar uglify = require("uglify-js");var content = "function foo() {};\\nfoo();\\n//comment here";var parsed = uglify.parse(content);````parsed` contains no mention of the last comment. shouldn\'t the parser parse _all_ comments. even if it excludes them from the minified file?', "i didn't see those. i solved the problem in my case by appending `\\n'';\\n` to the content before calling `uglify.parse`. but that won't be appropriate in every case.", 'there are some known problems with unicode support in ie (also in ie10). they are seemingly not rushing to fix this.the best approach for now is to pass `-b "ascii-only=true"` when uglifying.', "if anyone is still looking for a solution. heres a simple way to disable warnings:``` jsuglifyjs = require('uglify-js');uglifyjs.ast_node.warn_function = function() {};```", 'create test suite for outputstream. the test suite currently present does its work perfectly. however. because it uses the outputstream to verify equal output. alas. bugs in the outputstream are not easily found.for example. uglifying `x = 2 * (a % b / b * c)` gives `x = 2 * a % b / b * c` which is clearly wrong.', 'i think this is closed by #125', "my real-life example: browserify source maps don't work if the source files contain maps of lodash. jquery from uglify because the offsets are wrong (new lines when there are none. etc).", 'fsdiogo can we get a confirmation from your example that everything is working as expected and also a pr to ipfs/aegir to bring back uglify and reduce the bundle size?', 'fsdiogo is handling this.']