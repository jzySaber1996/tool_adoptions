['karma...', 'works but needs `karma-phantomjs-launcher` added to the dependencies list', "i had it using `canary` because `karma-sauce` wouldn't run alongside the karma in npm. i haven't checked recently to see if this works.if it still doesn't work with the karma from npm. perhaps we could lock to a commit or tag from ...", 'karma example is missing util. karma tests fail using the example karma.conf. because the util file is not included.', "i've updated the pr to include dependencies on all of the supported launcher packages. and configuration for them in `karma.conf.js.example`.", "thanks christophercurrie!bcjwhisenant do you want to give this a look since you're most familiar with the karma work?", 'thanks!', 'finally done!', "looks like the build is breaking because `sinon` recently stopped publishing a `pkg` file and `karma-sinon` attempts to add the `sinon` file from `pkg` to the `files` in the karma config. i'll look into that problem. then this will get merged. thanks!", 'why don\'t we create a library for this? i want to use this in other projects. here\'s the api i envision...i install your library as a dependency. we\'ll call it `better-npm-run` for now... then in my `package.json`. i do this:``` json{  "scripts": {    "build:dist": "better-npm-run".    "test": "better-npm-run"  }.  "betterscripts": {    "build:dist": "node_env=development webpack --config $npm_package_webpack --progress --colors".    "test": "node_env=test karma start"  }}```or something like that? it would just be nice to have all my scripts right in the package.json.and the library would manage ensuring that setting environment variables work cross-platform. what do you think?', 'would this kind arrangement look ok? or is it too verbose?```{  "scripts": {    "build:dist": "better-npm-run".    "test": "better-npm-run"  }.  "betterscripts": {    "build:dist": {        "command": "webpack --config $npm_package_webpack --progress --colors".        "env": {            "node_env": "development"        }    }.    "build:prod": {        "command": "webpack --config $npm_package_webpack --progress --colors".        "env": {            "node_env": "production"        }    }.    "build": [        {            "run": "build:dist"        }.        {            "run": "build:prod"        }    ].    //...    "test": {        "command": "karma start".        "env": {            "node_env": "test"        }    }  }}```', 'updated karma test reporter and integrated with coveralls. mikelehen - please review and merge. just getting this repo up-to-date with the latest and greatest tools in all of our open source repos.', 'fyi that you can click the coverage badge above to see a full coverage report for this repo. you will probably have to sign in with your github account. it may be useful to make the test suite even better and catch things which are not currently being tested. let me know if you have questions.', "i did everything mentioned by bytenel and am still get the same error :( any ideas?ps: i'm getting this issue when i try to install grunt-shell or reinstall karma via npm", "run sauce labs on master branch. i removed sauce labs from the repo because it was breaking on external pull requests (those pr's didn't have the right creds for sl). however. it would be really cool if we could run the sl specs on the master branch instead. this way. we're sure a pr runs the karma specs and can we run a additional sl karma run on master.", "rubicon analytics. ## type of change- [x] feature- [x] bugfixes## description of changethis includes the new rubicon analytics adapter.  the endpoint will be changed. but for now can be configured with the `endpoint` option when calling `pbjs.enableanalytics````            pbjs.enableanalytics({                provider: 'rubicon'.                options: {                    endpoint: ':9999/event'.                    accountid: 1001                }            });```## other informationthe karma testing library was updated to use the mocha reporter.  it includes more information. better debug information (such as object diffing). and is just overall a better reporter than the `progress-reporter`.an additional `bidder_done` event was added that signals when a bid adapter has finished responding to bids (this is a solution to better determine no-bids).the `set_targeting` event was modified to also pass the targeting that was set as an event argument.also a few bug fixes. such as cleaning up handlers left around by other analytics adapters (was causing errors in unrelated tests).", 'looking for other prebid org folks to review the core changes here. other rubicon folks to review the rubicon-specific stuff.', 'resolved merge conflict', 'resolved conflicts', "mjacobsonny -- rich submitted a doc change for the new bidderdone event. any others you were looking for?  we don't want to put this on the analytics adapter list just yet.", "thanks. eddiemonge! that's really helpful.", 'nice work!', "so. made all of the changes apart from eddiemonge's comment about karma. anyone else has a comment about it? does it need to be included?", "transitions tests are notoriously finicky. especially with browser automation. is there a way to soft fail tests with karma? maybe something like a passing quorum? it'd be nice to know they fail. but with more browsers being tested i don't know that conditional exclusion is as feasible as when you mostly just have to watch for phantom issues.", "if you're wondering why there's a build in coveralls whose coverage is 64%. that's me configuring karma-coveralls incorrectly in this pr.", 'fix(dialog): dialog now appears correctly. the css for modals in bootstrap 3 has``` cssdisplay:hidden```by default - this patch makes sure that `display:block` is applied.is this a good approach? also. what would the appropriate test be? because there is no way to include the default bootstrap css in a karma test. the original test fail to detect the bug... (even though it does test for display:block)', 'actually. as of the current `master` and `bootstrap3_bis` branches `$dialog` has been replaced by `$modal` and once #879 is pulled. `$modal` should be functioning in bootstrap 3 (with the caveats i listed).', "so. to actually fix modals once that pr is pulled. i'd have to add this css?``` cssdiv.modal.modal-open {    display:block;}```edit: nevermind. i figured it out. thats what bootstrap does.", 'nope. it should be in a `style` tag in the template so you can just use it as is.', "okay. i'll close this and go back to reading the bootstrap 3 docs more closely :)", 'spion make sure you are pulling against `bootstrap3_bis` as the `bootstrap` branch was frozen prior to the merger with master.', 'saucelabs custom-data. hey guys.first of all. thank you for these project around karma.i see that saucelabs allows us to post "custom-data" informations.i also see that "custom-data" is used to store result of testing (pass/fail).is there a possibility to add custom "custom-data" and retrieve them on saucelabs dashboard (for my case some jenkins informations) ?', 'a bit more info on this one - sauce launcher makes karma hang only if sauce tunnel is started manually `startconnect: false`.', 'we could run all the tests for different documents. only the very first setup code would be different for svg (the first four lines in helper.js).for now i dont think a seperate environment is needed. op updated its post and he uses an html document. too. so we can test the most relevant cases in our normal spec.however to make sure that everything really works. it might be useful to have this svg environment.cool thing about the logo on the karma website. they should change the title to svg.js though... :)', 'and should the source code that being used in backend alone will be kept in `/app` directory the same as frontend source code? or should we kept in `/server` ? can you give me some idea please ?and can i use karma as a test runner for backend functionality ?', 'why would adding components to karma.conf break the ci?', 'update devdependencies in package.json. remove duplicates and update all packages except:- highlight.js ... because it causes error with grunt- karma related stuff ... because i am not sure how are you using this and there might be potential conflicts', 'updated. conflict resolved', "ay gotcha! looks good to me! or anything particular i should look into? i've just seen that you downgraded karma. why's that?", ">  i've just seen that you downgraded karma. why's that?some peer dependency issue...", "what's the status here?", "svnlto could you please look into this? it's really obstructive", "gr2m status is: it's working but ff build currently fail because of an issue with tests.", 'there are 2 notifications (i coded both). but they use underneath the same lib (so probably it works the same for both).- look for `webpacknotifierplugin` in webpack-common.js- look for `notifyreporter` in karma.conf.js', "fix(ngmocks): $logprovider#debugenabled should work the same within tests. angular.mocks.$logprovider $logprovider.debugenabled(false) is crashingwith undefined when run inside karma/jasmine test runnerthe following crashes when run inside karma/jasmine test suite``` javascriptangular.module('foo'. [])  .config(['$logprovider'. function ($logprovider) {    $logprovider.debugenabled(false);  }]);```closes #3612", 'merged as baaa73ee1ef25fa506ff7aaab3159d710acdafdbthanks madaz', 'would it not be easier to include your fixture files in your karma config so that they are loaded up (and so available) before the tests are executed?', 'test error & grunt broken. hi.i\'m still learning the rework of the directive. yesterday everything worked fine but today something strange happened: i merged my fork with upstream. then a test error appeared. and when i tried to investigate it with \'grunt test\' it tells me:```>> error: cannot find module \'./launchers/base\'running "jshint:source" (jshint) task>> 22 files lint free.running "jshint:tests" (jshint) task>> 24 files lint free.running "jshint:grunt" (jshint) task>> 1 file lint free.warning: task "karma:unit" not found. use --force to continue.```googling about the error doesn\'t light me for a solution.any hints?thanks!', 'great! that solved the issue. still wondering what happened.thanks tombatossals']