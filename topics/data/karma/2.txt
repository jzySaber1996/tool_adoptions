['remove singlerun config from karma.js', 'just started reviewing :) <br><br>:octocat: _sent from [gh]()._', 'thank you. pull request merged! <br><br>:octocat: _sent from [gh]()._', 'formatted changes for consistency karma.conf.js. removed period from line 1 to be consistent with rest of file.changed first letter of the first word on lines 1. 2. 42 and 46 to be consistent with rest of file.', 'logicalparadox it seems that travis is affected by this as well. prs #211 and #214 fail with `.bin/karma: no such file or directory`.', "there was an issue with karma stable that caused sauce-labs browser tests to timeout. prs don't invoke the full suite. did you run the sauce labs tests using local credentials?", "i have tried sauce labs with both karma stable and canary. they both seem to work fine but they are slow on my machine: i have killed both runs after ~10 minutes. canary seemed to be able to get further in the list of browsers than stable. however i would be careful in interpreting this as an issue with karma stable.to continue using karma canary you should add `karma-cli` dependency. as that's the place where `.bin/karma` has been moved to. however you are trading build stability for sauce labs support. is it really worth it?", 'given the issue we have experienced with karma. can you please rebase this pr with master to force a proper ci run. thanks!', "can't bind to 'nodes' since it isn't a known property of 'tree-root' : karma unit testing. i am using angular-tree-component for my angular2 project. facing 'can't bind to 'nodes' since it isn't a known property of 'tree-root' error while running karma unit test cases.import { treecomponent. tree_actions. keys. iactionmapping. treenode. treemodel } from 'angular-tree-component';i also have imported/added above line in my spec filecould someone help?", 'feat(test): allow to manually declare initmodules. bonjour olivier.i find some difficulties to use oclazyloading in karma testing context. karma doesn\'t bootstrap application and hack about angular.bootstrap isn\'t executed. in init phase. oclazyload throw the following exception :  no module found during bootstrap. unable to init oclazyloadto allow correct init in unit test. i have included a method in angular object (can\'t find a better way) that allow "manual init"regards', "i added this error in my last commit but maybe this was a mistake. i could just remove the throw. it was just a failsafe but it is not really a necessity.otherwise we might find a better way to do that. could you give me the source code of a test failing to see what i can do?if i don't find a better way i'll merge your commit", "error in karma testing. i am getting this error in karma while testingerror: [$injector:modulerr] failed to instantiate module **\\* due to:    error: [$injector:modulerr] failed to instantiate module oc.lazyload due to:    no module found during bootstrap. unable to init oclazyloadthis is my angular init:angular.module('***'. [        'oc.lazyload'.        'ui.router'.        'ngresource'.        'pascalprecht.translate'.        'nganimate'.        'ui.bootstrap'.        'tmh.dynamiclocale'    ])    .run(function($rootscope. $state. $stateparams. $window) {```});```", "this is fix in the current master file (see #111). but there is no release for it yet.could you try the file in the current src folder and tell me if it's ok with you ?i'll make a new release soon (fixing a bunch of stuff before).", 'yes. just pass the first test :)', "karma jasmine issue. i am trying the new master src with karma test runner.  for first test. everything was ok.  second test. i am getting an error as soon as the module is initialized with. ``` jsbeforeeach(module('***'. function() {    }));```", "ah that's the bug i'm trying to kill before i make a new release. is it possible to have the source causing the trouble? i haven't been able to replicate it so far", "you can test the current src file. it should work with karma without the need for a special parameter :)i'm closing this pr as it is no longer necessary.", "ok i will try > le 28 janv. 2015 a 16:13. olivier combe notificationsgithub.com a ecrit :> > can you test the src current file. it should work with karma without the need for a special parameter :)> i'm closing this pr as it is no longer necessary.> > --> reply to this email directly or view it on github.", 'can you send me your package.json & bower. or is it same as the the repo?', 'my tests are very basic really.  errors happen after the second test module init.', 'yes the same as the repo', 'ok. i will give that a shot as well.', "so i tried it with your configuration. and it didn't work.  as soon as i remove oclazyload. i get success.  i will try some other variations.", "ok!  i figured it out.  i probably didn't know this to start with.  oclazyload needs to be loaded before angular-mocks in the karma.conf file.", 'oh yes. it makes a lot of sense. i should mention it in the readme.sorry for making you struggle with your tests :)', 'oh not at all. thank you for such a great product.', 'build: use karma-hsp-processor from npm. small change to the build - this is one of needed steps to seemly run transpilation on hsp code.', "it's always the same question. in aria templates the choice was to put everything in one repository (core library. ui. widgets. test tools). more recently there's a tendency instead to create modules.angular stress the importance of tests. yet you need to install karma yourself. if you need help you can use `angular-seed`. neither karma nor angular-seed is part of the same repository as angular.", "agreed. it'd be sweet to set up sauce labs however the test runner isn't currently supported. as we transition to karma this may be something we can do", "server side jasmine tests needed!!!. this is more of a call to the community than an issue.we've recently implemented a prompt (in canary) for the generator that gives you the option of having jasmine or mocha tests generated for your project. there is one catch. we don't have any server side jasmine tests to generate atm. there are client (karma & protractor) and server tests written in mocha (which i know much better) but only client for jasmine.i've been fairly busy lately and could really use some help if anyone here has experience writing jasmine tests. we simply need them to make the same assertions as the existing ones written in mocha do. preferably with the same style if at all possible.also there is a bonus!!! (everyone likes bonuses :smile:)if anyone would like to extend the server and/or client jasmine tests to cover more than the existing ones do. i'll match them in mocha ;)", "i'm guessing that after your login directive successfully logs a user in that it calls `$state.go('main')`? that would cause ui-router to make additional calls that karma was not aware of. hence the error. if that is the case. then stubbing out ui-router would allow `$state.go` to be called without error or actually making a state change.", 'are you using jasmine for your testing framework in karma?', 'renaming global to lower case breaks karma', 'run unit test before production build. and after (targeting the minified code). solved by having two separate karma tasks with different target configurations.', 'started work in `grunt-traceur` branch6ed4e4a337d139b4d8eed79208c5449c36cdee57', 'hls tech. this is pretty close to being done. the tests pass if run directly but currently karma is being flaky and stalling for some reason.', 'i finally was working on my other project that was using this popup to show a login form and thought i\'d make the change a little more generic like suggested.i wrote some tests. although i am quite new with karma so let me know if they\'re ok.you can now have an attribute close-on-click="false" on the dropdown-toggle element and it will prevent the dropdown from closing when clicking in the dropdown-menu area.the issue i had it finding the dropdown-menu element. i loop through the parent element items to find one with the class set.i thought about just using the second child but i\'m not sure if the order for the dropdown-toggle and dropdown-menu is important or not.let me know what you think.cheers.luke', "ajoslin i did a quick-fix in 7e178a38ce5878e8ec09aab255c8f8d6ebd7f620 to unblock the situation. fortunately all the tests are passing on all browsers which is amazing given that we've been running tests on chrome and ffox only for 2 months.the current fix changes the way things work as previously karma config was passed in command-line options. now it is hard-coded in the gruntfile.js. on top of this it seems like i can't specify a reporter / no-color options for grunt-karma (or at least i don't know how to do it :-()re-opening this one - even if the situation is un-blocked this issue requires more work.", 'upload karma bundles to s3 with public read access. currently we are uploading to s3 but the bundles are not readable by the general public (or anyone besides me. actually..).  they should sync to s3 with "read" access. so pr senders can get at the artifacts for debugging.', "lddubeau thanks for digging in. just for reference. i'm not using karma at all. reversing the order of the includes did resolve the error though. thanks for the work around!edit: reversing the order causes problems with things that depend on both (`json-cov` for instance).", 'test: teamcity report for karma', "going to merge this. however. i won't be actively checking if everything is ok at teamcity as the codebase evolves. for now.", 'added nested directories + large file + buffer tests.if we do not want to carry the "large" file (213kb) in git. we can change the test to download it from somewhere; however that \'somewhere\' must remain stable over time.i cannot get a browser test going for the moment because simply re-enabling \'ipf-data-importing\' in the webpack conf of the karma.conf ends up with an illegal attempt to call `fs.readfilesync`. i have not yet investigated this', 'update devdependencies. - [x] upgrade babel5 -> babel6- [x] maint tests- [x] update karma related modules- [x] move browserify to devdependencies- [x] move derequire to devdependencies- [x] move dereserve to devdependencies', "yes! these docs are written for the main fullcalendar project. but it's a similar setup for scheduler (except with coffeescript). also. the gulp task names are different (would be `gulp karma` instead of `gulp test`)", 'feature request: cucumber plugin for karma test runner. for agile shops like mine with an emphasis on automated testing and continuous delivery. angularjs has great appeal.  what would be more appealing would be a karma plugin for cucumber that can run angularjs e2e tests.just yesterday. our product team wished to see the gherkin language in which we are writing our story tests reflected in build server as green passing tests.there is an open source effort to implement this. but it is hacked together and avoids the angularjs way of doing things.', 'chore(gitignore): add libpeerconnection.log. google chrome (when tested using karma) spits out a log file called libpeerconnection.log', 'should it be doing this?  if not then perhaps we ought to be fixing that?', 'can you test it out? just pull master and run `grunt package test` and see if it shows up.', 'landed as 14626d0bc57cf55e8bde4a329b896308b6c09880', "hey. just got back from a long vacation.  i'm on 64bit windows 7 but will be making another go at getting this working. will update with my progress but not hopeful so will likely comment out karma-coverage so i can start contributing.", 'hi.this does not seem to work for me. i tested the example and all i see are blue icons.', 'awesome. thanks!']