['update karma.conf.js. switched to current karma module.exports config syntax.', 'merged switch to current karma module.exports config syntax.', 'thank you so much for the quick response!i think i can just let karma ignore those `.feature` files and instead use webpack to require those files. i\'ll then tell webpack to not parse any of the `.feature` files. after that i can get the feature files as plain texts. and to make them usable. i might need to write my own `featurefileparser` to not use `fs` which should be simple enough. does that sound like a viable plan?edit (just as i\'m writing this message i discovered something):it appears `filesearch` which is required by `featurefilesearch` is the only thing i need to "shim" after writing my own `featurefileparser` because it uses `fs.existssync`.this whole custom rewriting thing is bearable if it works. but please please let me know if there\'s an easier way assuming that i can already acquire the feature files in plain text.thanks!', "thank you so much for the detailed answer!!i realized that i misunderstood the webpack context thing in that it doesn't give me the text file. but only gives me a path to the bundled file like this `/_karma_webpack_//[hash].feature`. instead of using webpack. i should have used karma to include the feature files. anyway. i'll create a sample project and submit a pr once i figure it out.thanks again :)", "it's possible karma doesn't work on ubuntu. not sure.", "great thread. helped a lot. thought i had an issue - but don't. cannot find a way to delete :) keep up the good work.", "thijstriemstra. i figured this was the case. i spent a couple hours trying to hack in the media blob data. but it sounds like even if i got that working i would have hit the unsupported problem you hit.my initial advice would be to move towards using karma and running the tests in an actual browser. i don't know if that works on ci environment like travis though.", 'thijstriemstra / katspaugh please refer to #849 for an example of in-browser testing with karma', "add karma-intl-shim to the karma config of electrode-archetype-react-app-dev. the `karma-intl-shim` is already imported into the electrode-archetype-react-app-dev package. but not actually applied to the karma config. if there's a way to configure this from my project. i'd love to know. but as it stands it looks like the karma config isn't configurable unless i write a new gulp task. is that correct?for easy searching. here's the error that i received from phantomjs when i tried to run tests with localized components: `invariant violation: [react intl] the `intl` apis must be available in the runtime. and do not appear to be built-in. an `intl` polyfill should be loaded.`", 'allow user settings for karma config', 'chore(gulp): add karma integration. closes #83', 'landed as 46f866a0c18dcb10405a7682ff3fcf2eed1c6c25', "start using tunnel identifiers to prevent collisions between multiple karma instances running on sauce at the same time. notice: haven't been able to test this as i don't have a working karma setup. will work on that next.", 'santiycr what is the tunnel identifier for ?', "identified tunnels won't route jobs' traffic automatically. this also means they wont collide when a user runs more than one on a single account. their main drawback is users' are explicit about which tunnel to use.", "thanks santiycr !this pr actually does not work. i've been migrating the angularjs tests to use sacelabs and so i polished this plugin a bit and also added this feature. so i'm closing this pr.let me know. if you need any help with trying karma + sauce labs.", "awesome! i'll give the new code a look. thanks for the heads up and offer for help.", 'confirming that this works for me.however. firefox now consistently hangs with `test #321`. although that might be a problem with `karma` or something specific to my setup. i notice a similar hang when running doppio tests with the same setup.']