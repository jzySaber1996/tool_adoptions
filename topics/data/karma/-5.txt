["yes. we know this is a major issue.  i got tasked with trying to figure some of this out and just haven't had the time to finish it.i took a similar approach to this patch but tried to change less lines of code and keep a similar style to what already exists.  basically loading files adds to the existing apis in the forge object.  removing the boilerplate and going towards basic commonjs with minimal other changes did work.  got it to work in node and with webpack and browserify for full and partial builds.  and got tests to work across various browsers via karma too.  unfortunately i ended up with too many options and froze on how best to deliver all this.one problem is how to manage the generated code.  currently you can mostly just run forge in all environments as is.  with the commonjs changes the browser users would need to to generate js and min.js for themselves or we'd have to commit it to a repo.  i find it awful to have to generate and check in huge js blobs on every commit or even every release.  i'm unsure what to do about that.  jquery uses an external repo for the built code.  in the past we've also stayed away from building the code for people due to the theory of not wanting to be responsible for generated code.  no one is going to look at huge js or min.js files to see if there are backdoors put in by forge maintainers or minifiers or whatever.  in a security minded library this seems like a real concern.  perhaps this is paranoid but we decided to not deal with the issue and let people use tools they trust.  but if all browser users will now have trouble using the library without fancy tools. maybe we have to figure it out.i'll try to find the time to clean up what i was doing and throw it into a branch for people to look at.", 'chrisblazek if you create a completely new app. it should scaffold the karma.conf correctly using the `test/client` folder. you may need to update your `generator-karma`.', 'i stumbled over the same conflict but it is possible to install them in parallel if you install in a certain order:1) if installed uninstall the generator-angular-fullstack and the generator-karma: npm -g uninstall ...2) install generator-angular3) install generator-angular-fullstack^^^^ this installs just fine but i have not checked if there are any problems with karma  development time.', 'npm install ng-storage is huge!. `npm install ng-storage` installs all devdependencies. which is 50mb of filesplease can you consider moving all the grunt and karma stuff and so on into devdepencies?', 'this repo is not maintained by the owner. please find an alternative: angular-locker for example.', "what do you mean by 'the owner'?  you mean. you are an onlooker. who monitors the issues in this project a bit. but you are not the owner. and neither you. nor the owner. are maintaining ng-storage?(edit: seems like you have a fork. but your fork is not published to npm either? any chance you can publish your fork to npm. in such a way that installing it into a project is not going to drag in 50mb of dev dependencies each time? :-p)", "yes. you are right about me. i am looking after this project and guiding people to find an alternative because the owner is not responding anymore. i've used ngstorage for a single project and had to fix some annoying bugs to finish the project. i found later that the way ngstorage is built is not the best way. you'd better have a service for a storage layer. be it localstorage or a database. the architecture is the same. so i don't maintain ngstorage because there are better and more complete and maintained alternatives to do the same thing better way.if you still not convinced and want to use ngstorage. you can do the necessary changes yourself. just fork my fork. make changes you want. then install directly from the github url. not from the npm registry. that's how i used my changes for my project.", "hmmm. ok.  ng-storage is easier to use. but if it's going to be buggy. then. fine. i already have a dozen or two repositories to my name. and don't want to spread myself too thinly...for now. i will just do what i did in the end: just directly added ngstorage.min.js to my project. rather than adding it to project.json or bower.json.", 'thanks for every one. iam very new to protractor this helped me a lot and also can any one send the links to learn protractor?', 'upgrade lodash and karma', 'setup browserstack. acceptance testing. - [x] configure karma- [x] run karma tests across browsers in browserstack- [x] setup a "kitchen sink" docs page for screenshot testing- [ ] run screenshots in browserstack', 'sorry. i will have to look into this later.', 'archetype-react-app: [major] default to chrome headless for karma', 'in general. you unit test code in client with karma test only.  server side code should be tested as pure server side code.to test client code as part of server. a new type of tests would be needed. something like `test-ssr` maybe.close for now and will revisit if i have time.', "hi. just looking this a bit.  webpack config's entry points to the app's main js file. usually `src/client/app.jsx`.  also. it's not necessary a plain string.  it could be an object with multiple entry for webpack.  karma's entry has to point to its own `entry.js`. which does bootstrapping to get the react app loaded into karma.  i am not sure how this pr is supposed to work actually.", "add karma runner to automate tests in multiple browsers. by this moment the browser testing is done by a human. it's a best practice to automate this kind of test once that they minimize bug at cross environments.this feature tasks are:- [x] add karma to packages- [x] use bower to handle library packages- [x] configure grunt to use the karma runner- [x] search for support from travis server", 'the minerr function is defined in angular.js though for some reason angular-loader is not picking it up. while the workaround outlined above works. it would be educational to find out why it breaks in karma. the karma configuration includes angular.js first so one would think angular-loader would pick it up.', 'next time before you send a pr. please also run the karma test to make sure nothing breaks. also it will very helpful if you can create test case for the new features :)']