["drkibitz do all the tests pass for you on the `jshint` branch? i'm getting errors when i load the images. and after some debugging in chrome it looks like whatever karma is serving at the iamge urls is just broken.the url is there. and data is served. but the image is corrupt. so those tests fail due to a timeout of waiting for a successful image load event.have you experienced this at all. or have any ideas? is this just me? this is the last blocker before i merge this into develop so i want to fix it up soon.", "englercj sorry i haven't had the the chance to test this. and i probably won't be able to until next week. i would like to know what images you mean. any images? or particular images. i do know the functional tests were broken last i tried and i just disabled them. but the last i ran karma. the until tests were passing. even the ones that loaded images. but that was a while ago in npm module standards ;)", "yeah any images that the karma webserver has to serve are corrupted. so those unit tests fail (because the image never has a load event fired). i've been trying to figure out why and i am stuck", 'englercj just letting you know this is on my radar. just been really busy before the holidays and everything. i will check it out. i also saw your issue on the karma repo.', 'i made some minor tweak and then ran `npm install karma-es6-module-preprocessor` without any problem.', 'chore(tests): add test runner and travis build step. add testing:- karma tests- travis ci runner', 'fix test.cmd to work on windows with local karma. previous code was not working. no karma command (karma.cmd) is created on windows for global karma package. however there is one created in node_modules.bin\\ for local karma module. which could be reasonable to reference in this test.bat.', 'you can now use `npm test` to test on all os.', 'now use `npm test` to run the unit tests.', 'how do you launch the tests?. hi.i tryed to launch karma tests with `karma start test/karma.conf.js`. is this the good way to do it?', "well. if you don't mind. i can add a `package.json` file that can embed all required dependencies for tests. test could also be run with npm with `npm test` command. i can add `karma-jasmine-html-reporter` for a better reading.", "with some `npm` stuff and `grunt tasks` we can try to do something similar. but i'm not an expert too.about tests. i'll make some changes on a forked branch to let you see how i've made it running here. up to you to merge the pull request ;)", 'changes for karma integration. files and config for integration with karma for in-browser testing', 'closing this pull request.  something went wrong. and there are way too many files in it.  will re-submit after i clean it up.', 'this can be summarized to:```npm instalnpm install -g jakejake```npm install will install dev (jake. jshint. etc) `-g jake` will install jake globally. and jake defaults to use karma.documentation can be improved though.', "this finally landed as 9c1672706611c484421a0328385b3270ee30e02f!i've also added ability to run saucelabs tests from the local machine. just type: `grunt karma:sauce`", "make karma (and rollup) ignore the tooltip dist files. most likely we'll want to change the files structure or move tooltip.js to its own repository in the future.", "so one of the downsides to the new karma based tests as-is. is that i haven't written support for round trip tests.  i think once i do. it will be really important to write tests for these kinds of things. because they are small behaviors that are really easy to get wrong!  thanks for fixing this!", "that $injector error you're getting is because you need to remove ui.bootstrap from the dependencies in your `client/app/app.js`you also need to remove ui bootstrap from your karma.conf.js", 'thanks for the quick responses everyone got it working now. incase anyone else has this problem the steps i took are below.bower uninstall angular-bootstrapbower uninstall bootstrapremove reference to bootstrap in bower.json. karma.conf.js and app.jsthis is a great project and am really excited to see how fast it is growing especially excited to see ui-router support. for some context about the original question. i think bootstrap is a great tool but not always the answer from a ui perspective. thats why i thought it was great as an option in previous builds. the first project i built with this stack i already had a scaffolding built for my app ui not using bootstrap so it was a lot easer to apply that ui to this "boilerplate". i think having it as an option would be great but it is easy enough to remove manually so no big deal just would be a nice to have. keep up the great work!!!!!', 'i did js. html. less. and ngrouter. i figured out why the test were failing. i had not included everything in the karma.conf file. and it was missing dependencies.now i get a different problem. "running "bowerinstall:target" (bowerinstall) taskwarning: cannot read property \'main\' of undefined use --force to continue."any ideas?', "i have experience in karma testing via browserstack's selenium grid. they usually give away free slots for open source. any objections against travisci and browserstack? otherwise i'd just work on it in a fork and give you folks the chance to merge it back in.", 'adds karma and jasmine travis ci testing. *introduces automated karma/jasmine testing for our compiled test pages*adds travis testing (for all branches/prs)*adds travis badge to readme*cherry-picks bleathem js src change #341', 'this looks great. i want to look through it more closely. but some initial feedback is that i feel the test src should be in a top level test folder. rather than in the src folder. this involves moving the contents of the current test folder into the dist folder.', "the code looks good. but wondering about the actual tests? this shows potential. but testing the chart for a legend of length 4 isn't valuable. imo. can the initial tests be enhanced before we decide to introduce all this infrastructure? i'm not sure we decided we wanted this?", 'dlabrecq i can certainly add more tests (as we have several fixtures). wanted to kick start the conversation first ;)', "just wanted to see the tests you created be more useful. if we're not able to test anything valuable. then perhaps we don't need to introduce it?btw. can the directory structure stuff be done separate from this? i would be willing to merge brian's pr. but let's not do those mods here.", "test infrastructure / useful tests is a chicken / egg problem.  it's importatn to get the test infrastructure in place. so then we can contribute tests. and solicit test contributions from the community.priley86 the folder structure you proposed in your comment looks great.i propose we keep this pr as-simple-as-possible as follows:- [x]  merge the pr moving the patternfly.js into the src dir- [ ] introduce a new pr to move the generated html test files into the dist folder- [ ] keep this pr focused to test infrastructure and basic tests. leaving additional test creation to subsequent prs", 'bleathem sounds good to me', 'bleathem sounds good to me. and this pr lgtm as well.', "i see that brian's changes were merged separately -- that's what i was looking for.", 'patternfly smoke tests. - introduce patternfly js libraries to karma- provide smoke test examples for running unit tests on patternfly test fixtures- removes any inline scripts from fixtures during karma testing. and sources karma scripts instead- adds grunt-karma- adds automated test examples for the following components:  - about modal  - accordion  - alerts  - area charts  - badges  - bar charts  - bootstrap combobox  - bootstrap datepicker  - bootstrap select  - bootstrap switch  - bootstrap treeview  - datatables', 'bleathem dtaylor113 dlabrecq jeff-phillips-18  would love any feedback', 'add saucelabs browser tests to travis-ci. enable automated browser testing on travis-ci- [ ] setup `karma-sauce-launcher`- [ ] add sauce tokens to the travis-ci environment- [x] add saucelabs testing badge to readme', 'hmm. the code is not perfect. is there a way to modify it?the `fs.workingdirectory` and the `process.cwd()` is currently `"."` instead of `"/"`. otherwise it works with browserify.i don\'t know whether it works with webpack. it requires a `path` module and creates an `fs` shim. browserify has a built-in emulated `path` module. i don\'t know whether webpack supports `path` by default. we need some webpack users to do that part.the `npm install phantomjs` added `phantomjs` and `phantomjs-prebuilt` as dependency. i guess we don\'t need both of them.the `filesystemtests` contains `/* jslint node: false */`. i don\'t use jslint. actually the fs test can run by node as well only the `karma-*` files are not for node usage.', "hi there. i'd like to keep the environment flexible and not force someone to to use jsdom or whatever. in my own case i generally use jsdom with karma which is mostly the same as what you've figured out above. i do need to improve the docs with some testing env stuff and this is a great addition to that. if you don;t mind me using this :)", "there should be no difference between karma and jasmine here. so this is very odd.normally you should ask support questions of stack overflow or glitter. but i'll do a bit of investigation here later today.", 'ok pull request is ready to be merged.', 'karma working with videojs-contrib-hls', 'using travis build + saucelabs browsers. -using saucelabs browsers: desktops and mobile with karma plugin-builds in travis-posts to hipchat and irc', '> because of the compilation + webpack + tslint time.why does `npm run test:watch` not work?> i need to figure out how to get debugging to work.there is a debug button in the chrome window top right> karma is a test runner... i think i could still be using qunit syntax (npm install -g karma-qunit): is this something folks have strong opinions about?why adding another syntax.  provides everything you need?', "don't worry about the failed build. we just merged acceptance testing and karma integration that is being flaky for us. i'm working on stabilizing it but for now i'll just keep re-running travis until it succeeds.", 'cleanup test configurations. refactor files such as _karma.conf.js_. _package.json_ and _test-loader.js_.', 'tests: add karma config and dependencies', 'reviewing', 'ack. tests are running in travis now :d', 'well after some more experimentation i\'ve discovered how to get testacular running properly in windows. the reason grunt didn\'t work but running testacular.cmd did was because i wasn\'t passing the --single-run option. this caused the testacular server to stick around and all the browsers that it didn\'t detect or wait for were then able to connect. next i found that setting the <browser>_bin env variables actually causes the browser detection to work. why this is different from setting a custom browser via the browsers array in the conf is beyond me but it is. setting the env for chrome and using browsers = [\'chrome\'. \'ie\'] works perfectly. grunt now works it runs through the test and then stops because of the ie failures. running it while only testing chrome makes its way through the entire build.thanks. and sorry for turning this into a "get testacular working in windows" thread. i\'ve been searching all over and haven\'t been able to find this information anywhere. also doesn\'t help that testacular has been renamed to karma and the google group moved so none of the links pointing to google groups discussions work anymore.', 'chore(build): rename testacular to karma. close #264', 'l42y great stuff. i would like to merge it asap (unless ajoslin wants to merge its grunt file cleanup first) but the commit is not rebased on the current master. would you mind rebasing it?', 'pkozlowski-opensource no problem. rebased.', "i'll merge it then add my stuff in! thanks l42y!", 'landed in 38d8c383f3d7adbf9dfd84891b820e961be4bc9d', 'travis. setup for travis continous integration tests with karma / firefox.', "+1 to slow shutdown. i see the `heartbeat` method is being run repeatedly. just an observation.what's the state of this?", '#8', 'move to lerna package style. reintegrate hpcc-js-comms back into visualizationadd karma testssigned-off-by: gordon smith <gordonjsmithgmail.com>', "apologies for the long radio silence. i'm looking at this now.", 'no worries. i understand things get in the way.', 'oh. and gulp vs grunt. i prefer gulp for its pipeline management versus config management that grunt does. basically in gulp you setup a bunch of pipelines and manage input/output. grunt you configure a bunch of plugins ahead of time and then run a bunch of tasks individually.', "(also. let me know if you'd prefer me to take it over from here--i'm happy to do so.)", 'started work on this in the "karma" branch', 'fyi - core/esrilayerutils is in the karma branch b/c i had to make some changes to that file while working on the unit tests (unit tests caught some bugs!).', "jwasil please take the tests for a spin and let me know if you have any suggestions.```npm installgulp karma-once #runs unit tests in phantomjs one timegulp karma #runs unit tests in chrome when .js files change via karma's watchgulp serve #runs unit tests in phantomjs when .js files change via gulp's watch while serving the sitegulp test #runs unit tests in phantomjs one time before running protractor tests```", 'we should suppress these in the karma logs:```warn: \'<include> element found with no src attribute. ignoring element.\'warn: \'<include> element found which references a nonexistent template ("noexist.html"). ignoring element.\'warn: \'<arg> element found with no attribute. ignoring parent <include> element. (<include src="misc/variable.html">)\'error: \'render aborted due to max number of passes (100) exceeded; there is a possible infinite loop in your template logic.\'warn: \'teddy.render attempted to render a template which doesn\'t exist: .html\'warn: \'teddy.render attempted to render a template which doesn\'t exist: .html\'warn: \'teddy.render attempted to render a template which doesn\'t exist: .html\'warn: \'loop element found with no "val" attribute. ignoring element.\'warn: \'loop element found with no "through" attribute. ignoring element.\'warn: \'loop element found with no "val" attribute. ignoring element.```', "> i hope i can do that. it looks like karma config could became more simplethat would be a good first step. there's still a lot going on here.> but more over. it would be nice to have some addtional features in qunitextending `qunit.begin` needs no discussion. i've commented on the other ticket.> to locally test things. that is something that browserstack runner is lack of. at least was. last time i checked.correct. browserstack-runner doesn't do that and very likely never will. i've never missed this ability. unlikely the feature that it does provide. i'm not sure how important that is.", 'ng2 karma', 'jdubois it works with karma. it fails when i choose protractor in my generated application.', 'sendilkumarn mohamed2a mraible guys the karma tests are failing in master branch. i havent tested them before but if it was working before then this might have something to do with moving some stuff to the new ng-jhipster lib', 'fix health karma test. by applying this changes. you can run karma tests.', 'jhipster/developers guys is anybody working on finishing the remaining karma tests?', 'deepu105 i will work on fixing the karma test during the next week', 'ramzimaalej would appreciate help to migrate and fix remaining app karma tests and the karma tests for entity on the ng2 branch take a look at #4302 or you could also help with #4407 or #4301', 'fix health karma test. i override the template of `healthcheckcontroller` to test health component and service', 'related to #4302', 'and when you run maven:- by default you have the dev profile. which runs the default  webpack task (build + dev) - probably there needs to be a forked process for dev- in "prod" mode. it does build + lint + karma tests', 'fully agree also.> there should be an option to run webpack with only the "main" buildyes. it could be named "webpack:dev:main" or "webpack:dev:app".btw. when you execute `yarn run` without arguments. it lets choose amongst all the available targets.angular-cli has 2 tests scripts. "test:watch" is really useful for tdd sessions.~~~json    "test": "karma start src/test/javascript/karma.conf.js".    "test:watch": "karma start --watch".~~~', 'travis karma tests', "pbastowski i'm going to look it up.i'm currently setting up karma. beside tests. you'll have code covarage also :)i've used webpack to simplify babel compiling process. i also left space for other configurations so if in the near future you would want to add some build process (minification etc) it will be a lot easier :)you can find me on gitter ([kamilkisiela]( if you don't want to keep posting new messages in this pull request.", "i have the same problem and have been using the same solution. i have karma installed globally but it doesn't seem like its being referenced correctly for some reason.", "i disagree with the change - it's still useful to have karma installed globally for invoking it yourself (as appears in the official tutorials).", 'suggest using npm install to install karma into local node_modules.. this is a readme.md change. this seems more standard. and is what scripts/test.sh expects.', 'test suite with mocha. travis. karma & saucelabs. i would like to make a unit test with mocha to check that the code pushed on any pull request does not break. another advantage could be to check the crossbrowser compatibility on any release automatically.we need to create an account on saucelabs ( email + psw ) and tipiirai you should create also the travis hook', "what's the difference between karma and saucelabs?", 'on that case saucelabs sounds more suitable. baer want your thoughts here as well. thanks!', "it sounds like aside from the runner were totally on the same page. i don't mind giving you access to my fork if you want to work off of the same branch. first step is pulling in mocha + sinon + chai and porting those tests. i might use karma for dev though even if it gets removed i the end in favor of the mocha api and npm test. also. tipiirai mentioned in the other issue that they prefer the tdd assert style.", "great discussion here! it is definitely useful to launch tests locally. i suppose it's about ease of installation (saucelabs) vs performance (karma. because it's local)? and both can be triggered locally?", "looks like we all agree that the first step is to wire up those tests with mocha and chai.i prefer tdd but if you guys really want to use bdd. i don't want to be on your way.", 'tipiirai could please create a new branch? something like `tests/mocha`', 'i just created a `tests` branch.', ':+1:', 'tipiirai ok thanks i will start working on that branch setting up the mocha tests', "tipiirai i think we could merge the `tests` branch into the `dev`. it's ready", 'you can do that yourself too. or if you want me to review it first. please make a pull request which gives me a nice diff- view.', 'gianlucaguarini currently runner.js fails one test (observable / multi off) but runner.html passes all tests. any idea why?', "tipiirai  i'll have a look thanks. could you please open a new issue?", 'tipiirai my patch should solve the problem', "just want to say thank you guys for taking care of this. had a quick look and tried running our test suite for the first time. it's such a bliss compared to what we had before!", 'aurri u r welcome :heart:', 'totally agree. we only want runner.html there. i try to become a better writer for tests :)', "i removed a few files there. i'm still using tags.html for manual tests on different browsers (chrome and ie8 mostly)", 'i also had it. someone probably has broken the compiler.js a guess', 'set up please the travis-ci as soon as possible to avoid this kind of issues', 'done', "baer of course i did not merge dev into the master. i've just helped tipiirai setting up the travis tests and he did it on the master so i made just two small commits that do not change any riot line of code. we can close this issue", 'tipiirai btw we should now bring the travis file also on the dev branch', 'now there. thanks', 'cool. just make any changes that are needed. `package.json` is not my strongest areas.', 'gianlucaguarini - big thanks for delivering the test suite and travis integration! this really helps this project move forward in a more controlled fashion.', 'we are not quite done but i will keep pushing patches. you are welcome :dancers:', "testacular renamed in karma. do 'npm install -g karma' instead of 'npm install -g testacular' as testacular is karma now.", 'updated the testacular links to karma links.. i have changed the testacular links to karma links.', 'update index.ngdoc. testacular renamed to karma. testacular is deprecated. just updating the doc here for you all', 'dupe of #2357', ':+1:', 'cleaning dist files. - fix wrong karma config for `dist` task- ignore config file in release- add files for language in release']