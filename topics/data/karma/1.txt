["use karma-browserify for tests. add browser test coverage reporter.. hey.so i started writing some more browser tests. but before i did that. i wanted to make the test runner to compile browserify by itself. and also add some coverage checking (to make it easier to write tests).this pr does the following:- modifies the scripts in package.json to not compile with browserify directly.- modifies the clean script to delete the coverage folder (not sure if this is preferred over adding it to .*ignore)- add some new dependencies.- make sure karma does both coverage and browserify.- also added stderr from the child process that runs karma.i have some follow up questions about how we should structure the actual test suite. but let's do that in another issue.", 'done!', ':+1: thanks!', 'peci1 just comment out the test for now. the condition has to be configured in karma.config. but commenting it out is fine for now. just the `it()` call.', 'pull request is updated. sorted out my mess. only thing is travis is failing due to a karma/socket issue that seems to be affecting the master branch too.', "jasonlaster seems that it's the natural/suitable place for `karma.conf.js`.", 'update readme.md. fix karma conf path', "i'm happy to make a pull request. but i'm not familiar with karma. so i'm not sure where to find test 36 and how to run a detailed stack trace for that error.", "oh yes. i didn't stopped another http server.thanks petebacondarwin :)regardless of that - a few tries before i've kill all hosting processes and still got that http-server error.so whoever encountered same problem (as me and op):npm install http-server -g(and/or npm install karma -g)should do the trick.", 'merged in 1138f05d9feb0a801c16c0a09bc199a113d9fe96', 'b-laporte i\'m fine either way. we can make it mandatory. but if so we should fail with an explicit error message. can prepare a different pr. opened this one since karma pre-processor / grunt task were not passing this arg and it started to fail with a "cryptic" message. i\'m somewhow fine with making it mandatory.', "testing frameworks. i'm relatively new to unit testing. but i've been working with the specs that come with the generator; trying to learn more and see if i can help with the test coverage. i've found that jasmine is a little heavy when setting up asynchronous tests. perhaps i haven't given it enough of a chance. mocha on the other hand seems to be a good bit easier when it comes to async. i setup mocha + chai + sinon for the server tests i was working on and really enjoyed the combo. kinda got me thinking: why not use mocha with karma instead? i installed `karma-mocha` and everything seems to work great. so i'm wondering if anyone could outline jasmine's advantages? or would it possibly be more advantageous to use mocha for server and client testing?", "jakxz thanks so much for your answer! i can totally see the advantage of using the same framework for both server and client. as for mocha + chai. the server test are actually using mocha + should.js atm. would a switch to mocha + chai be possible? in my (inexperienced) opinion; chai would seem a better candidate since it provide `expect. should. assert`.also. on the point of a unified testing framework; karma currently uses jasmine. while the server test are written in mocha. should we look at unifying them or perhaps use a prompt in the future to allow users to choose?btw; thanks for suggesting istanbul. i'll definitely check it out.", 'i was referring to a newly _generated_ project when i spoke earlier. the client side test. ran by karma. use jasmine. the server side use mocha + should.js. so my question was. should we look at unifying those tests? potentially using mocha + chai for both server and client test on a generated project. sorry for the confusion.', 'daftmonk. by support would you mean a prompt? or merely making the test in a way that would allow for jasmine to be easily switched out?', 'i was thinking a prompt.', 'jakxz thanks again for your input on this.', 'in `karma.conf.js`. change `loglevel: config.log_info` to `loglevel: config.log_debug`. see if that gives you any more info.', "kingcody: that led me to the fix! i apparently didn't have a test defined in main.controller.spec.js. and the karma section needs at least one test.thanks much!", 'nice job kingcody! :+1:', "jakxz just wondering. since you seem to have experience with testing. if you might have time to checkout the work i've done on the tests i mention above. if not. it's all good :)", "> in implementing a prompt based testing framework selection. we would need to be able to maintain the choice with .yo-rc.json i'm guessing? then ng-component would need to be able to support jasmine or chai style assertions?that's my plan :smile:", 'jakxz would you be interested in helping with the jasmine test coverage?', "kingcody i would definitely be interested. and will _try_ to make time for it somehow... but if others in the community can start making prs then i'd encourage that :smile:", "sounds great jakxz. here are some of the things that i see need to be implemented:- [ ] port current server-side tests to jasmine alternatives- [ ] port current client-side tests to mocha alternatives- [ ] unify/refactor grunt tasks for client and server tests using jasmine or mocha- [ ] server-side test coverage using istanbul and jasmine- [x] server-side test coverage using istanbul and mocha- [ ] client-side test coverage using istanbul and jasmine or mocha- [ ] generator prompt for test selection- [ ] extend `ng-component` to generate jasmine or mocha tests based on `.yo-rc.json`do you think that it would be a good idea to open an issue to invite pr's and track updates to the list of things needed?", "...not for now - at least i've never come across that error. i'll look into it later. maybe updating karma helps and i'd check other builds if the error previously occurred.", "i started to update it but started to get some errors. i'm following this at nikku/karma-browserify/issues/50", 'add support for traceur (grunt-traceur). - [ ] add preprocessor to karma- [ ] add to build steps_awesomeness ensues_', 'enabled pluggable backends. this is the long awaited for virtual-dom featureall access to dom elements is now abstracted behind a jquery compatible interfacethis pull request also moves element testers into a property `_elementtesters` that can be extended at runtimeit also sports full compatability with firefox and chrome and improved checkbox handling which should solve #15 and #7 and of course you can run the whole suite using just `mocha` which will run all the tests against the virtual dom. `karma start` will run the tests against both virtual-dom and the real dom.', 'the build failure is unrelated to these changes. i think we just need to update karma.', 'i am interested. my experience with angular / grunt / karma etc. should be enough.as the first shot we should try to resolve as much currently opened issues as possible.', "i want to make `grunt test` run either saucelabs karma or local karma depending on whether we are on travis or not. so that we don't need to have two grunt tasks.also. i want to make a grunt task that allows you to specify multiple browsers in the task. so you could do: `grunt karma:chrome.firefox` instead of `grunt karma:chrome karma:firefox`.but these shouldn't necessarily hold up this pr.", 'updated karma to run in latest chrome and latest ipad/mobile safari on saucelabs.', "yes. right now you need to run it via `grunt test-local` or `grunt test-local karma:dev` or `grunt test-local karma:chrome`.i'm working on making it know when we are running in travis. so. `npm test` will work on both. we probably should've named it `test-saucelabs` and `test` in hindsight. though. i guess we can change the names.", "for me commands `grunt karma:firefox` & `grunt karma:chrome` do not work. browsers open up but after that it holds.`grunt karma:main` works fine. i'm i doing something wrong? if those commands are not intended to work i think they should be removed...", 'grunt commands `karma:chrome` & `karma:firefox` do not work. after executing commands mentioned in the header tests do not run./cc krinkle', 'you wish is my command - just updated the description of the #3922 ticket', '> for me commands grunt karma:firefox & grunt karma:chrome do not work. browsers open up but after that it holds.same for me. krinkle. is that a leftover config?', 'add karma-coverage and coveralls grunt task. i hope you like it :)if you want me to change anything just tell me.## my turn- [x] get karma-coverage working- [x] hook up to coveralls- [x] add coverage badge## turn of semantic-org- [ ] register at [coveralls.io]()- [ ] change the badge url', "yeah... there's a lot of tests to be written. another thing to add to the list.", "i was able to get dragula to get rid of this error on the blank seed project but now i am getting the 'require is not defined' error while testing with karma.has anyone gotten the testing working with dragula on the angular 2 seed project with karma?", 'upgrade karma. closes #2338', "zone.js and polyfill are being loaded through a script tag. dexie is being loaded through external modules via browserify.okay. so it appears that i currently can only reproduce this issue when i'm running it isolated in a karma/jasmine unit test.  i do not see the same issue when running my actual ng2 application.  i currently cannot even speculate as to why...", 'chore(dependencies): upgrade karma-browserify. this upgrade is necessary to run the tests on windows machines', 'sdelai issue. ia pokopaiukarma tut ne prichem. eto delaet mocha ili asserter', 'feat(ci): add bitbucket pipelines support. create the yml file to configure bitbucket pipelines with a customdocker image for karma', "this is great belgac!i don't want to add the file by default since not everybody will want to have it. but this is an amazing reference. would you mind submitting a pr that adds that to the documentation? (faq) thanks so much!", 'gkuchan sorry for the long delay on this. the whole testing framework has been moved over to `karma`. which in the end is similar to what you were asking. it may even be that we move over to `mocha` soon. thanks for flagging this a long time ago.', "need to 'karma-junit-reporter' in plugins for reporter to work. without this - if you try to use the junit reporter. it will fail due to missing module (even if installed outside).", 'you also add it to the package.json file to make sure it also gets installed', 'done - and i squashed commits down.', 'this is outdated.  we can run karma and protractor using npm scripts. see the readme.', "hi petebacondarwin.i reviewed my pull request and your comments.  if i checkout the d38e34855b4bda3efaeed63a81844ef94331e3b2 commit (the one before your latest round of updates) and run npm install from the root directory. it was already creating my bower_components directory under the app folder.  the problem i had was all the references (index.html & karma tests) pointed to it being under the root folder.  i even cleared my npm cache before running it and get the same thing.i've been snooping around for an installer slipping into the app folder before bower gets run but after about 30 minutes of poking around. i can't find it.i am very interested to find out if you delete (because they are in the .gitignore file and would stick around) your /node_modules folder. any bower_components folder and any .bowerrc file you have and checkout the commit i listed above into it's own branch locally. then run npm install... and immediately run npm test. what you get.  1) where does it install the bower_components directory for you (is it under app?)2) do your karma tests pass.i get failures because just by default bower_components are getting installed into the app directory for me. yet the karma tests look for it in the root folder.i realize your commit daf71f2 fixes this issue regardless.  i am just trying to get a sanity check.  forget about the browser for now please.  i believe i was doing something wrong with it failing. but do the karma tests pass or fail for you?thank you!", 'feat(ngdocs): setup karma-docs testing suite to test docs components', 'fix(angularfiles): ensure only karma-docs.js tests the component-spec files', 'chore(ngdocs): add angular-route.js to karma docs suite']