['more tests. add more testsbower installerkarma config to use it later in angular testsremove adal.js in scripts folder', 'angular tests. angular interceptor testupdate karma config to run angular tests from karma cmd', 'normally it helps to `npm uninstall -g generator-karma generator-angular generator-angular-fullstack` and reinstlall after that. helped me out a few days ago.', 'new test suit. new test suite:- [x] isolated standalone `tests/` folder- [x] use phantomjs with karma to run tests on terminal instead of browser.- [x] create & configure .travis.yml file to integrate with travis.', 'usirin :+1:', 'if we can merge this into master anytime soon. i can add the build status buttons as well.', ':)', 'chrome launcher in deps. this component includes `karma-chrome-launcher` but it is unused.', 'run browser tests with karma', "grunt auto-build is not defined. hi. in your readme says: execute grunt auto-build to run the development setup including automatic rebuild and live reload.but in the gruntfile there are only these tasks registered:   grunt.registertask('test'. [ 'karma:single' ]);  grunt.registertask('auto-test'. [ 'karma:unit' ]);  grunt.registertask('default'. [ 'jshint'. 'test'. 'jsdoc' ]);", 'that is correct. it is a relict of previous dev setups.the project is not ment as a standalone library but rather as a toolkit to build your own modelers / viewers. that is why we removed the `auto-build` part from the build script.i keep this issue open until we updated the `readme.md` to reflect that.', "ah. i did miss the combined-dev. i think that should work for me.as to the tests. if it's an easy switch from js-test to mocha. i ought to be able to make those changes pretty soon. if it's a little more involved. i can probably get js-test running through karma for now and generating coverage.karma has a debug mode to do in browser testing. though you would have to instantiate it from the command line initially. you ought to be able to refresh that page to get updated results. my workflow using karma and mocha is to run tests through phantomjs most of the time and fire-up chrome through karma on an as needed basis. karma/mocha/phantomjs should run fine on travis.", "start down path of new build system:. - move tests to karma test runner and mocha framework. also adding chai assertions- add gulp tasks for testing. watching. concatting and compressing- update travis file to use new build system- remove jstestdriver stuff- reorganize a bit so that it's easier to see what's going on- create a dist folder to hold the output of builds (should probably look at having a bower branch/repository where these are held. instead of master)i'm pretty sure we don't want to push this to master. but that's where this was diffed against.", "this is fantastic! i'm on vacation at the moment. but i'll plan to take a look at this sometime in the few days.", "also cc kberg in case he'd like to take a look. `gulp`. `mocha` and karma are the future. shell scripts and jstd are the past.", "this is likely a problem with the `webpack.test.babel.js` file. or the `karma.conf.js` file. which are in the `internals/webpack` and `internals/testing` folder respectively.if you want to. you can also take a look at implementing ava at the same time! i'd love that!", 'fixed in 38330c5. very very sorry about that.my change to `process.cwd()` from `__dirpath`  in d855c7661abd821e7f67ed7e320e6d766d7e511a broke the `coveragereporter` config in `karma.conf.js`.my bad. thanks so much for sticking with this. my bad for not trying first before closing this issue! thanks!!', "we need a plan for abstracting the `test/karma` files. since the effort of maintaining those in multiple places would be awful. i'm okay with leaving them here until we get a second project adopting karma. but we need a least a plan for how to approach that. might be a plain node module. a grunt task or whatever else.", 'task: add tests. - add testing infrastructure: enzyme. karma. chai. mocha- add tests for `<header>` and `<footer>`/cc coopy tptee', 'lgtm after comments!', 'karma should be loaded from the path - not a relative directory. people can install karma in many places - assuming relative to the script directory seems "odd" to me.', 'update jshint tasks.. sorry again houqp i always forget jshint. i leave the karma open... and never execute the jshint task. is there a way to automatize it?this pr just solves a couple of jshint errors', "i'm all for a grunt watch. currently using a similar setup on the project that's using this directive and it's great to have it run on each modification.", "added support for awesome markers plugin. hi. i've added support to awesome-markers plugin.i also updated the example marker update example. but as i do not know how to deal with icon images in bootstrap. the image inside the icon does not appear. i you know what to include in the html file do it for me please.if you play with the example you will be able to use two awesome icons and the drag will continue to be functional.to do it i've added a helper class to deal with plugins and make the code more readable. is this structure ok?jaume.edit: somehow i've uploaded my karma conf. please. don't use it.", 'i love you guys. thank you.', "hi. i have modified the gruntfile.js to feature a new development mode. you can launch it as the default grunt tasks:$ gruntit will start karma on background and watch for changes on the library. if there's any change would pass the tests. jshint the files. and if everything is good. uglify the library.if you need something more or add/change/delete functionality just let me know."]