bower/bower,coveralls,2015-04-27T05:20:12Z,ok. so i merged in master. and now the coverage is passing but travis just went from passing to failing. the failure is the grunt task `exec:coveralls` i do not believe this is related to my code.,negative
webtorrent/webtorrent,standard,2015-10-24T10:14:39Z,i don't know. i don't think _bittorrent_ protocol itself includes any content discovery mechanisms. that's why bittorrent trackers exist. the bridging solution i was talking about earlier i presume would work by implementing a tracker server software which supports both desktop torrent clients and _webtorrent_ and serves the pieces between both kinds of clients transparently. tracker servers are not standardized afaik and thus each one has different content discovery mechanisms. in case of kat and most of the others. this purpose is served by the website that lists the torrents in the tracker's database. theoretically you can enumerate kat's torrents by scraping the website and similarly you should be able to scrape the webtorrent<>bittorrent tracker's website/api.but realistically: no. i don't think you can enumerate that: really though. someone who knows what they are talking about should chip in to confirm or correct this.,negative
infernojs/inferno,mocha,2016-09-19T22:07:09Z,ah ok its the && between cross-env and mocha command. this will make both commands run in different environments. if you remove the && and put the env value into single quotes it works for me"cross-env ts_node_compiler_options='{\"module\":\"commonjs\"}' mocha --recursive --bail --opts config/mocha.opts"one test fails,neutral
infernojs/inferno,uglify,2018-04-04T13:33:11Z,havunen will try to create example. strange error. maybe this is uglify problem or something.,negative
jprichardson/electron-mocha,mocha,2017-05-24T14:53:49Z,fix eperm exception that can occur when cleaning up temporary files. i get the following error when running tests for `electron-mocha` and when running tests with coverage for my own project.```{ error: eperm: operation not permitted. unlink 'c:\users\micros~1\appdata\local\temp\electron-mocha-aw5ldg\gpucache\data_0'    at object.fs.unlinksync (fs.js:1091:18)    at fixwinepermsync (s:\projects\_github\electron-mocha\node_modules\fs-extra\lib\remove\rimraf.js:169:13)    at rimrafsync (s:\projects\_github\electron-mocha\node_modules\fs-extra\lib\remove\rimraf.js:260:26)    at options.readdirsync.foreach.f (s:\projects\_github\electron-mocha\node_modules\fs-extra\lib\remove\rimraf.js:291:39)    at array.foreach (native)    at rmkidssync (s:\projects\_github\electron-mocha\node_modules\fs-extra\lib\remove\rimraf.js:291:26)    at rmdirsync (s:\projects\_github\electron-mocha\node_modules\fs-extra\lib\remove\rimraf.js:283:7)    at fixwinepermsync (s:\projects\_github\electron-mocha\node_modules\fs-extra\lib\remove\rimraf.js:167:5)    at rimrafsync (s:\projects\_github\electron-mocha\node_modules\fs-extra\lib\remove\rimraf.js:260:26)    at options.readdirsync.foreach.f (s:\projects\_github\electron-mocha\node_modules\fs-extra\lib\remove\rimraf.js:291:39)  errno: -4048.  code: 'eperm'.  syscall: 'unlink'.  path: 'c:\\users\\micros~1\\appdata\\local\\temp\\electron-mocha-aw5ldg\\gpucache\\data_0' }```this causes `electron-mocha` to fail to clean up temporary files. changing cleanup to happen on `exit` instead of `quit` fixes it. i'm not sure if there's any other implications from doing this.,negative
jprichardson/electron-mocha,mocha,2017-05-24T18:06:15Z,i don't think `app` emits an `exit` event at all: are you sure any clean-up happens when you make this change?we've repeatedly seen permission errors during clean-up. especially on windows: usually this happens if your tests have not released a resource properly. most common case is if you create windows (other than the one electron-mocha creates for `--renderer` tests) and don't close them again.there is. however. an issue with electron's `net` module at the moment (which holds references to cache files) -- because of this (and because this gets reported frequently) we could consider allowing to skip clean-up completely?,neutral
jprichardson/electron-mocha,mocha,2017-05-24T18:38:39Z,ahh. you're right. i don't know why i thought there was an `exit` event. is there a way to discover what's holding on to a resource? i would think reporting that would be better than skipping.,negative
jprichardson/electron-mocha,mocha,2017-06-02T13:44:28Z,seems to be an issue with power shell. it works using git bash except the following error:```uncaughtexception:error: eperm: operation not permitted. unlink'c:\users\xxx\appdata\local\temp\electron-mocha-xyz\gpucache\data_0...at fixwinepermsync```//edit: checked the file - there's nothing special about it - was able to `rm` it in the console.,negative
jprichardson/electron-mocha,mocha,2017-06-03T09:19:51Z,about your first problem: if `require('electron')` yields the path to electron this means that you're likely not using electron's `require` and loading the `electron` module instead of the electron api. this shouldn't happen in electron-mocha unless you're using some kind of pre-processor to bundle your tests?about the second issue: normally. if the temp folder can't be removed (especially on windows) it means that some of your tests opened resources and did not release them again. in this case it's likely a window -- if any of your tests open windows you need to make sure to close them again otherwise the temp folder can't be cleared.,neutral
ramda/ramda,sauce,2015-06-22T03:34:54Z,actually `_slice` won't work on strings in older environments as it uses indexs to access characters instead of `charat` (sauce will fail)also i disagree with the changes in this pr,negative
node-inspector/node-inspector,mocha,2014-04-08T14:41:04Z,> ```>   1) frontendcommandhandler defers "scriptparsed" events until "page.getresourcetree":>      error: timeout of 2000ms exceeded>       at null.<anonymous> (c:\development\nodist\bin\node_modules\node-inspector\node_modules\mocha\lib\runnable.js:139:19)1>       at timer.listontimeout [as ontimeout] (timers.js:110:15)> ```a common reason for node inspector ui not showing up is when there are many files in the project being debugged. as the inspector backend is crawling the file system to list all files where you might want to set a breakpoint even before they are loaded.try to run node-inspector with `--no-preload` option. does it make any difference?however: since the problem seems to be in the websocket connection. `--no-preload` probably won't help here. do you have any plugins and or system services (antivirus. firewall) that could be intercepting websocket connections?,neutral
node-inspector/node-inspector,mocha,2014-04-10T18:33:39Z,you can see [this]( tutorial. where in last part miroslav show how to debug `mocha` tests. i think it will be helpful in debugging gulp.send me result.,positive
cssinjs/react-jss,karma,2018-08-03T08:06:07Z,will be tracked here: cssinjs/jss#745,neutral
electron-userland/electron-download,standard,2017-01-11T21:12:29Z,ugh. just tried rebasing. every commit gives a different merge conflict.will look into it later again. reverted the rebase for now.,negative
electron-userland/electron-download,standard,2017-01-19T19:38:33Z,not sure if i did or not but it seems there are no conflicts with master anymore. :)any news from the discussion?,negative
electron-userland/electron-download,standard,2017-01-19T19:42:44Z,maintainer update: discussion is still ongoing. i expect to have more information next week.,neutral
electron-userland/electron-download,standard,2017-01-19T19:44:39Z,alright. thanks for the quick reply malept !,positive
electron-userland/electron-download,standard,2017-02-02T19:50:28Z,any update? can i read the discussion anywhere or is it a closed discussion?,neutral
electron-userland/electron-download,standard,2017-02-02T19:55:44Z,siilwyn we've agreed to move to drop node < 4 support (an official announcement will hopefully be in the near future). and so i've opened #45 as a result.during that discussion. we discussed this pr in particular. some of the maintainers have reservations about accepting this from a conceptual point of view. kevinsawicki or zeke. could one of you chime in so i don't misconstrue what was said during the meeting?,negative
serverless/serverless,mocha,2017-05-19T14:22:03Z,closing since our tests started to incorporate such toolings.,neutral
shama/webpack-stream,standard,2016-04-29T17:26:03Z,preserve added / non-standard vinyl file object properties. i have some custom gulp plugins that append properties to the vinyl file object. this is similar to what gulp-sourcemaps does. i notice this plugin generates a new file. but does not carry over any additional properties from the original file object. i might be missing something. but i don't see any harm in doing that. and it might make this play better with certain plugins. i imagine a simple `object.assign()` on the options passed to `new file()` in `preparefile` would work. with the contents being set after the instance is created. i can put together a pr if this is a desirable feature for this project.,negative
janl/mustache.js,eslint,2016-02-22T19:15:15Z,had to fix one issue due to breaking change in v2 of eslint; .eslintrc rule `space-after-keywords` got renamed to `keyword-spacing`. commit amended and pushed before merging.,neutral
paulmillr/chokidar,coveralls,2015-10-29T23:29:45Z,no. that's just coveralls being flaky. don't worry about it.,neutral
paulmillr/chokidar,coveralls,2015-11-04T15:17:15Z,the failures in travis appear to only be because of bugs in coveralls that don't seem to be getting resolved by re-running the jobs.all the tests passed.,neutral
valor-software/ngx-bootstrap,sauce,2016-11-29T09:39:13Z,e2e saucelabs,neutral
valor-software/ngx-bootstrap,karma,2016-11-17T17:58:08Z,refactor(karma): replace ng-cli karma configuration to webpack. note: for now there are issue with awesome-webpack-plugin. thus test running doesn't works for now,neutral
valor-software/ngx-bootstrap,karma,2016-12-05T16:11:21Z,saucelabs configuration for karma,neutral
Azure/autorest,standard,2017-04-12T23:23:36Z,testmania. vast amounts of new features call for some more tests to make sure that we- know what we're doing- detect if those features are broken by a prstatus:- syntax error detection (olydis: review bad test cases - there is some incocnsistency)- consistent message processing (same even for parsing config file)- more standard source location syntax in console output- source locations for config file syntax problems (olydis: merging config blocks needs source map support)- performance improvements (less async. more cowbell)- uri tests for linux active (got rid of platform dependence by replacing `path.isabsolute`)- optimized travis ci,negative
airbnb/javascript,eslint,2017-01-11T17:40:34Z,when you refer to non-top-level rule overrides. do you mean those that are specified in `.eslintrc` files that are _not_ at the root of your project?this tool does not run your config[s] against your source code. all `eslint-index` does is parse an `.eslintrc` file and compare it against all available rules for both eslint and any plugins you have added and specified in your config's `extends` value.in order to achieve what you are suggesting. the tool would need to:1) gather (or be provided with) a config file2) parse the config file to gather all the rules you have specified3) run the config file against your source code (through eslint)4) incrementally disable rules (setting them to `off|0`) and running the modified config against your code again and again5) gather any rules that triggered a linting erroris that correct?,neutral
airbnb/javascript,eslint,2017-01-11T21:35:45Z,also. what non-standard js syntaxes are you using? `eslint-plugin-react` does have some bugs with flowtype. for example.it's possible that specific syntax in a specific file is breaking `eslint-plugin-react` - in which case. we should figure that out and file an issue there.,neutral
airbnb/javascript,eslint,2017-01-12T10:36:44Z,i developed the tool to assist me in writing a config for my company (`eslint-config-supermind`). with so many rules available in eslint itself plus all the rules provided by plugins. i found it difficult to keep track of which rules i had used and which ones i hadn't. this became all the more difficult when upgrading `eslint` and any plugins—i wouldn't know what new rules had been added. `eslint-find-rules` went a long way in helping with this. but i felt it lacked the granular functionality i desired—so i developed `eslint-index`. being able to filter rules by status (`omitted|off|warn|error`). by plugin (`react|jsx-a11y`) or the core eslint rules _and_ having doc urls outputted alongside rules in the console has been very useful to me.for example. if i upgrade `eslint` or any plugins and want to see which rules i haven't specified (because they are new) _and_ for these omitted rules. display links to the docs alongside. i can do:```eslint-index .eslintrc.js --status omitted --docs```,negative
airbnb/javascript,eslint,2017-01-17T14:28:09Z,update react.js. according to the eslint-plugin-react docs allowmultiline has a default value to be true.by default. braces spanning multiple lines are allowed with either setting. if you want to disallow them you can specify an additional allowmultiline property with the value false.,positive
airbnb/javascript,eslint,2017-01-22T07:07:26Z,my thoughts are that there are still companies using jscs but who may want to start using airbnb's style guide.  this could be one of their first steps to switching to eslint.  at least it is with the company i am currently at.will get a pull request up soon.,neutral
airbnb/javascript,eslint,2017-01-22T23:03:37Z,in most cases. you should be exporting one conceptual thing from a module. in other words. if you have both "foo" and "boo". those are *two modules* and thus should be `export default`ed from two separate files.if you insist on having them in the same file (there are some use cases where this makes sense. but not many). then you should be using multiple named exports.when exporting one thing. and inline export is nicer because it ensures that you can not change the binding later (ie. `export default function foo() {};` is better than `function foo() {} ; export default foo;`)as far as positioning. there will soon be a linter rule in `eslint-plugin-import` that will require that all export statements are grouped together - so i'd recommend grouping them together and putting them at the bottom of the file.,neutral
airbnb/javascript,eslint,2017-01-23T06:03:25Z,`requireobjectdestructuring` and `requirearraydestructuring` → `prefer-destructuring``requirepaddingnewlinesafterblocks` → `padded-blocks`i think `disallowarraydestructuringreturn` has a rule as well?either way. the eslint team has committed to creating or adapting rules such that 100% of jscs enforcement is possible with eslint - they're pretty close to complete.,negative
airbnb/javascript,eslint,2017-01-25T19:38:06Z,i'm sorry to hear that. i'm going to reopen it. however. since it's still pending an eslint rule change.feel free to unsubscribe from the thread if you're not interested in further participation.,negative
airbnb/javascript,eslint,2017-01-31T04:23:57Z,atom beautification config.. the default rules for the "atom-beautify" does not play very well with the airbnb eslint config rules. also. the config options available are also not enough to be tuned.is there a plugin or config options available for auto beautification in atom while still maintaining the consistency of airbnb eslint rules.,positive
airbnb/javascript,eslint,2017-02-01T05:32:46Z,i think the most common approach is for editors to merely show violations. and for any autofixing to be done on the command line with `eslint --fix`.,neutral
airbnb/javascript,eslint,2017-02-01T12:11:23Z,cool. let me check with the beautification plugins to see possible adherence to airbnb styling guide.,positive
paulmillr/es6-shim,mocha,2014-04-17T05:10:03Z,renamed this to reflect that we should switch away from mocha (for a number of reasons: not working in browsers we need to shim is a big one. plus. not working in testling). and then once we're using tape. use testling-ci/browserify to do automatic browser testing.,neutral
paulmillr/es6-shim,mocha,2014-04-17T15:11:49Z,mocha supports tape,positive
paulmillr/es6-shim,mocha,2014-04-17T15:12:39Z,sorry. not tape but tap — test anything protocol. testling-ci / browserify should work great with it,positive
paulmillr/es6-shim,mocha,2014-04-17T16:04:42Z,that's true - but it also requires es5 features. which makes it inappropriate to use in a library that targets es3 browsers as well.,positive
paulmillr/es6-shim,mocha,2014-04-17T17:45:46Z,question: do we actually want to support es3 browsers? their market share is like super low,positive
paulmillr/es6-shim,mocha,2014-04-17T18:24:43Z,fwiw i'm happy to do the work to convert the tests :-) i've already got a branch in-progress with more than half of them converted anyways. it's not much of a burden to keep the support threshold super low. so we might as well. bdd-style test libs don't add much value imo anyways :-),positive
paulmillr/es6-shim,mocha,2014-04-17T19:06:09Z,i personally love bdd. it's very easy to read code. cscott ?,positive
algolia/vue-instantsearch,eslint,2018-08-06T16:14:58Z,my bad. we need to release `eslint-config-algolia` first since we made the changes to the vue configuration. then we can drop the changes to the `eslintrc` in this pr. then merge.,negative
velesin/jasmine-jquery,jasmine,2014-06-12T21:19:33Z,+1  i spent so much time trying to get it to work. and ended up that i installed it via `npm`,neutral
velesin/jasmine-jquery,jasmine,2014-06-25T08:55:45Z,+1 it would be great to to have this published on `npm` !,positive
velesin/jasmine-jquery,jasmine,2014-07-04T09:54:25Z,getting an error while using loadfixtures with consolereporter. hii am trying to load html fixtures to my test suite using the `loadfixtures` function. but i am getting a failed `xmlhttprequest` error. while trying to run jasmine using consolereporter.here is the spec's relevant code ..```it("should have play animation button disabled. initially!". function() {        loadfixtures("uifixtures.html")        expect(jquery("#play-animation")).tobematchedby('.disabled');    });```and here is the error i am gettting on my terminal(using consolereporter for jasmine):```error: network_err: xmlhttprequest exception 101```what might be the possible issue here?thanks in advance.. :)edit: i have also changed default path to find fixtures to a different one. using this function(in specrunnner.html)```jasmine.getfixtures().fixturespath = "sample_data"```,negative
webrtc/samples,selenium,2016-05-03T05:13:54Z,looks like firefox beta doesn't like selenium-webdriver anymore :-/,neutral
videojs/video.js,karma,2014-06-11T16:27:21Z,where did we end up on this one?,neutral
videojs/video.js,karma,2014-06-11T16:28:32Z,did you get a chance to try that out? other than some documentation. it should be ok.,neutral
fergiemcdowall/search-index,jasmine,2015-03-01T16:19:39Z,this means that you can test only indexing by running `jasmine-node --verbose test/spec/0indexing-spec.js` and so on for each test spec file,neutral
fergiemcdowall/search-index,jasmine,2015-03-03T14:18:57Z,i'm currently investigating vowsjs as an alternative to jasmine.the advantage of vowsjs is that its truely async. and works with callbacks.would you mind switching? of course i will rewrite all existing test.,neutral
fergiemcdowall/search-index,jasmine,2015-03-03T15:44:07Z,we could definitely mix tests. some could be jasmine and some could be vows.,neutral
fergiemcdowall/search-index,jasmine,2015-03-03T16:09:21Z,you just change the value for 'test': there should be a long string of 'jasmine' commands seperated by '&&'- you simply append a vows command## apologies for brevity- this message was sent from my mobile> on 03 mar 2015. at 16:51. holger-will notificationsgithub.com wrote:> > ok. so there would be another test runner script in packege.json. but where should the vows test files go?> > —> reply to this email directly or view it on github.,neutral
fgnass/domino,mocha,2013-11-27T20:50:37Z,update mocha/should dependencies.. tested that latest releases of mocha and should do not cause any problems with domino's test suite.,neutral
sitespeedio/browsertime,selenium,2015-12-04T23:10:41Z,one thing to note though: since har creation. connection throttling etc. depends on a local proxy. those features won't be available when running a remote browser. you'd have to pass the --noproxy option when running with a remote selenium server.,neutral
jupyterlab/jupyterlab,karma,2017-03-15T16:15:15Z,update karma and mocha deps,neutral
jupyterlab/jupyterlab,karma,2017-03-17T12:48:10Z,move tests. after the big split. we can move the tests to the individual `packages`.   that way each test can be run from that package. or from the top level using `lerna run test`.   we are hoisting dev dependencies. meaning that karma and mocha would only be installed at the root of the repo.,neutral
expressjs/express,mocha,2013-12-03T21:27:29Z,i'm not a fan of grunt. but you don't really need make to hack on express either. just mocha,negative
UKHomeOfficeForms/hof-form-wizard,mocha,2017-11-07T15:12:32Z,so you would have done "unit": "_mocha" instead?,neutral
mongoosastic/mongoosastic,eslint,2016-06-09T14:54:34Z,bump(deps): upgrade elasticsearch and eslint,neutral
prettier/prettier,eslint,2018-02-12T20:13:44Z,is it possible to setup "allman" braces style?. is it somehow possible to configure "allman" braces style instead of default "k&r" style? it would be nice to have such feature. i thought to apply tslint --fix after that but tslint doesn't support auto fix for braces style (overall brace-style is absent in tslint and can be inherited from eslint via plugin).,neutral
prettier/prettier,eslint,2018-02-13T08:51:39Z,you only need both if you want eslint to warn you about prettier violations. if you only want to disable formatting rules. but rely on prettier list different to identify violations. then you don't need both.,positive
prettier/prettier,eslint,2018-02-13T08:53:57Z,using eslint-config-prettier without eslint-plugin-prettier provides a better experience in the editor in my opinion. but using eslint-plugin-prettier makes a lot of sense in ci or in projects with lots of public contributors where there's a chance they'll have eslint tooling configured but not prettier tooling. so it all depends on your use-case.,neutral
prettier/prettier,eslint,2018-02-13T20:46:35Z,one other thing... many editor integrations for prettier have an "eslint integration" option which causes the editor to use `prettier-eslint` instead of `prettier`.,positive
prettier/prettier,eslint,2018-02-21T17:20:11Z,prettier’s goal is not to be flexible. as the page i linked above says:> by far the biggest reason for adopting prettier is to stop all the on-going debates over styles.> the more options prettier has. the further from the above goal it gets. the debates over styles just turn into debates over which prettier options to use.as you said above:> but when you consider a project template that comes with default linter rules on and you have n projects to create (and by n i mean "many"). it is not efficient to turn linters in every project. it would be more efficient to adapt prettier options.if we added a whole bunch of options. you would have to configure them all each time you created a new project. > while creating many projects turning off linters for every project is just one more step that this tool is creating.you have to enable prettier for each project. too. prettier makes this step pretty easy:```shellsession$ npm i -d eslint-{config.plugin}-prettier$ npm i -d --save-exact prettier```then. in your `.eslintrc.yml`:```yamlextends:  - plugin:prettier/recommended```that will disable all rules that conflict with prettier’s styles. while enabling a rule that gives you a description of what needs to be changed to follow prettier’s styles.,positive
prettier/prettier,eslint,2018-02-22T20:16:20Z,i understand the dilemma yall would have from an internal design and scope perspective but i think this is what many people are running into with this situation. people are wanting more customization because they like your tool and a lot of people promote it. however. the whole purpose of a lint is to standardize your code to a best practice for your project not the other way around. i personally write a bunch of vue apps so i like to use the eslint standard for vue so it basically does an automated peer review. i dont really expect a formatter to 'hold me to a standard' especially since it doesnt throw errors because something isnt syntactically correct. best practices and javascript changes on a daily basis. so it would be nice is prettier was as configurable so the community could share configs and be able to make it as customizable as tools like eslint. i like prettier. it just cant do what i want it to do so i was left using the built in vs code formatter. maybe one day it will :),positive
prettier/prettier,eslint,2018-02-25T18:08:07Z,xixixao the prettier repo has eslint-plugin-prettier set up. so if you enable eslint integration in the atom package. it should format correctly.,positive
prettier/prettier,eslint,2018-02-27T05:50:09Z,`standard` doesn't allow any option nor to configure any `eslint` rule. so the fact that `standard` users put a space after the function name doesn't necessarily means they "like" this style. it can also means they "tolerate" it because they found other benefits using `standard` such as having a predefined rules. no config etc... there is no way to know other than conducting a survey.if `standard` would allow to turn that rule off or to change its config and if those users made the deliberate choice to enable (or to not disable) the space after the function name. then that would be an argument in favor of the popularity of this style. but it's not the case.a better indicator is: how many people not using `standard` (therefore making a deliberate choice regarding each particular style) write code with a space after the function name?from the various comment it seems `browserify`. `moment`. `rollup` and `vue` do not use `standard` and choose to use a space after the function name.that can be compared with the many other projects mentioned in this thread not using a space after the function name.that said. even if a particular choice made by `standard` is not a good indicator of popularity among users. it should be taken in account to determine the amount of code changes generated when using prettier on a project using `standard`.,neutral
prettier/prettier,eslint,2018-03-05T13:48:43Z,we could also create `prettier/plugin-typescript-eslint-parser` and `prettier/plugin-flow-parser` packages to give people an alternative if they encounter bugs in babylon’s implementation.,neutral
prettier/prettier,eslint,2018-03-11T11:23:34Z,i agree. it's not configurable in prettier. (like it is in eslint `no-mixed-operators` rule)not really happy that    if (!inputcolon && inputkey || inputcolon && inputvalue) return;is converted in     if ((!inputcolon && inputkey) || (inputcolon && inputvalue)) return;,neutral
prettier/prettier,eslint,2018-03-12T10:34:05Z,whosesomebody you can also use `prettier-eslint`.,neutral
prettier/prettier,eslint,2018-03-12T15:36:47Z,coolemur we’re willing to fix bugs in prettier (i’m sure the `prettier-eslint` folks are too). it’s just that formatting changes take a lot of discussion to ensure that we make the best decision. right now it looks like we’ll be changing this behavior or adding an option. but i can’t say for sure. `prettier-eslint` will allow you to run whatever eslint rules you’d like over your code after prettier runs. and eslint is actively maintained so you shouldn’t have issues there.,positive
docpad/docpad,standard,2015-02-18T05:23:06Z,implementing this now.,neutral
docpad/docpad,standard,2015-02-18T13:05:34Z,> implementing this now.w00t w00t!  :+1:,neutral
docpad/docpad,standard,2015-02-18T13:06:54Z,can someone update this issue’s labels to reflect its “being implemented” status?,neutral
docpad/docpad,standard,2015-02-18T13:22:16Z,good catch. will close at the release.,positive
sequelize/sequelize,mocha,2014-05-16T19:22:00Z,i'm using mocha and the test just throws an error. i can set up a simpler test to try and catch the error though i'm pretty sure its due to the fact that loginstub has no associations. queries on user that include loginstub work find.before i spend more time i wanted to verify the behavior of include. is it true that a single `user.hasmany(loginstub);` call will enable the `include` statement for both the `user` and `loginstub` models? e.g.``` jsloginstub.find({   include: [user].   where: { my_key: 'a_key' }}).complete(function(err. stub) { ...});```and``` jsuser.find({   include: [loginstub].   where: { my_key: 'a_key' }}).complete(function(err. user) { ...});```currently only the second one is working for me.,negative
postcss/postcss-cli,standard,2017-12-15T19:20:04Z,fixes issue with maps flag not working. cli arguments seem to be handled differently in different environments. from within the tests (using execfile) all is well (therefore they're passing). however when using a standard cli (zsh) the structure of the options looks very different. do a dump of options while running tests (index.js ~:189ish after options is set) and you'll see that the maps key is present when the `-m` flag is set. however. if you run postcss as a package from a project. you'll see that the maps key is now missing. the main problem is the missing "maps" key when sending the options object to the `process` method. not wanting to make too big of a change i copied the options object back on the the `ctx` object to avoid any problems.all tests are passing except 'error invalid --config' but that appears to be a pre-existing issue.,neutral
caolan/async,mocha,2016-05-05T16:09:46Z,сonvert some tests to mocha. megawac. take a look at it.,neutral
caolan/async,mocha,2016-05-05T16:52:53Z,heck yeah! thanks ezubarev!ping #849,positive
caolan/async,mocha,2016-05-05T19:42:21Z,cool. amazing!,positive
caolan/async,mocha,2016-05-05T20:19:32Z,> another thing. i just noticed ava doesn't support browsers -- only jsdom.yes. but it runs on the tape protocol which works in the browser,neutral
caolan/async,mocha,2016-05-06T07:56:20Z,convert the rest of tests to mocha. the remaining tests were ported. nodeunit was completely removed. have a look. resolves #849 megawac. aearly,neutral
caolan/async,mocha,2016-05-07T18:38:24Z,megawac. i replaced assert with expect in tests on asyncify. in other cases as i can see it's usage will not lead to less transparency in debugging. however i don't mind if anyone wants to make use of `chai.expect` somewhere else.,neutral
caolan/async,mocha,2016-05-07T19:44:54Z,i'm sure any confusing remaining ones will be fixes post merge. thanks a bunch ezubarev,positive
caolan/async,mocha,2016-05-09T04:34:04Z,you're welcome.,positive
nightwatchjs/nightwatch,mocha,2016-06-17T11:26:21Z,fix silently swallowed exceptions. when something goes wrong and neither a test suite nor a finishcallback are given.the processlistener in run.js swallows the error. this happens when you are usingmocha as a test runner and have a syntax error or throw an exception outside ofthe test suite (e.g. `require('./some-spec-helper')` while the file does not exist),negative
mashpie/i18n-node,jshint,2016-07-20T21:21:19Z,same in travis ;)```> jshint --verbose .i18n.js: line 151. col 105. line is too long. (w101)1 error```too bad on nice expressive naming,negative
buildo/react-components,eslint,2016-11-21T09:34:34Z,eslint errors. ## descriptionthere are several `eslint` errors after last prs on `buildo/eslint-config`## how to reproduce- {optional: describe steps to reproduce bug}## specs`npm run lint-fix` :)## misc{optional: other useful info},negative
buildo/react-components,eslint,2016-11-21T09:34:53Z,#675: eslint errors (closes #675). issue #675## test plan### tests performed- `npm run lint` --> no errors!- ci should pass,neutral
buildo/react-components,eslint,2016-11-21T09:41:20Z,why weren't these caught in the prs?,neutral
buildo/react-components,eslint,2016-11-21T09:55:19Z,gabro i was referring to the prs on `buildo/eslint-config` (different repo). i forgot to fix brc after those,neutral
buildo/react-components,eslint,2016-11-21T09:55:42Z,oh. ok!,neutral
buildo/react-components,eslint,2016-11-21T10:48:53Z,it wasn't `debug`'s fault: ci was failing because of eslint errors. closing!,negative
buildo/react-components,eslint,2016-11-22T09:47:45Z,fix eslint curly error. ## descriptionfix curly error (new eslint rule),negative
buildo/react-components,eslint,2016-11-22T09:51:03Z,#678: fix eslint curly error (closes #678). issue #678## test plan### tests performed`npm run lint` and ci passes,neutral
ember-intl/ember-intl,eslint,2018-10-19T16:10:31Z,looks like eslint is up-to-date now. so this is no longer needed.,positive
FezVrasta/popper.js,karma,2017-10-17T21:28:14Z,you may get a oss browserstack license. or if you use a vm you just have to open the karma runner url in your vm browser,neutral
angular-fullstack/generator-angular-fullstack,karma,2015-04-20T22:49:32Z,minmur i had a similar problem - missing includes in karma.conf as bower didn't add them automatically. your comment saved me some trouble. thank you.,positive
alexa-js/alexa-app,mocha,2017-02-13T19:51:09Z,> there are some es6 features we could take advantage of to make the code cleaner -- particularly arrow functionswhile i do agree upon this statement. it's worth noting that there are very minor side effects. for example. using arrow functions in mocha tests is discouraged (source:,negative
enyojs/onyx,jshint,2014-03-06T15:45:52Z,please fix the jshint failure -- we use tabs (set to 4-characters) for indentation in our source and jshint is seeing a mix of tabs and spaces used in the comment.  the easiest fix is to just use the //\* notation and put it on one line.,positive
Hacker0x01/react-datepicker,karma,2016-05-07T08:21:22Z,update karma related plugins,neutral
linkedin/hopscotch,jasmine,2015-10-29T04:53:15Z,cannot read property 'steps' of null. i keep getting this error during my jasmine tests. i am using jasmine and magic lamp to import my views as fixtures to my test. when i run hopscotch.starttour i get the above error. yet hopscotch.isactive is true.,negative
linkedin/hopscotch,jasmine,2015-10-29T04:57:16Z,could you provide a snippet of code with your tour configuration and how you start\end the tour (hopscotch api calls)?,neutral
linkedin/hopscotch,jasmine,2015-10-29T05:30:30Z,it's possible that hopscotch is getting into a bad state. it might happen if provided step number is out of bounds. try setting up a `onerror` callback and setting `skipifnoelement` to false to see if you get any error reports.,neutral
linkedin/hopscotch,jasmine,2015-10-30T08:31:09Z,tried both. didn't work.,neutral
linkedin/hopscotch,jasmine,2015-10-30T10:06:36Z,now i'm getting this cannot read property 'getboundingclientrect' of null if you can relate to where the error could be let me know.,negative
sass/node-sass,mocha,2013-10-07T04:36:32Z,moved back mocha to `dependencies` as suggested by kennethormandy which seems to have got lost in a rebase,neutral
sass/node-sass,mocha,2013-10-19T14:05:48Z,i think we'd still need to test the middleware using mocha but we can certainly use sass-spec for testing that we're correctly piping everything into libsass.,neutral
sass/node-sass,mocha,2013-10-30T20:02:00Z,use a mocha reporter that doesn't blank the screen. currently the build step uses the `min` reporter which blanks the screen which is unexpected and confusing.this switches to the `dot` reporter which prints a single dot for each test and does not blank the screen.,neutral
sass/node-sass,mocha,2013-10-30T20:05:48Z,oh cool. thanks!,positive
webpack/webpack,standard,2017-06-15T16:58:15Z,i think it's webpack's es loader. afaik. there's no standard regarding this. according to standards you should use either this:```import { extend } from 'lodash-es/index.js'```or this:```import extend from 'lodash-es/extend.js'```it's purely up to bundlers how to handle this.,neutral
acuminous/yadda,mocha,2016-04-12T18:10:48Z,no luck. please close it :(,positive
acuminous/yadda,mocha,2016-04-22T08:16:31Z,hi. seems reasonable but wouldn't help if the asynchronous part of the test threw an error. i've also never seen this cause timeouts - i usually run my tests via mocha and the exception is handled for me. how are you running your tests?,negative
prebid/Prebid.js,standard,2018-09-13T08:04:45Z,jsnellbaker now i get the recursion mechanism. i thought at first it was another thing. now reading the snippet it makes perfectly sense.genegenie  ty for the answer.i'm using a custom creative based on the standard prebid code and the solution to my issue was a reference to the wrong parent frame.anyway thank you,positive
melonjs/melonJS,jasmine,2015-01-15T11:10:18Z,yep good job ! i confirm it fixes the build issue at least on my mba (using firefox). will try tomorrow on my windows machine.unrelated. but since i did a `nom install` the jasmine task is now however failing :```running "jasmine:src" (jasmine) tasktesting jasmine specs via phantomjs>> error caught from phantomjs. more info can be found by opening the spec runner in a browser.warning: syntaxerror: parse error use --force to continue.aborted due to warnings.```and i don't see anything in the spec runner. do you also have that issue ?,negative
nodejs/citgm,eslint,2017-01-26T19:15:13Z,eslint: convert to use proper yaml. we should convert our eslintrc file to use proper yaml like thecommunity. this also requires renaming .eslintrc to .eslintrc.yml<!--thank you for your pull request. please provide a description above and reviewthe requirements below.-->##### checklist<!-- remove items that do not apply. for completed items. change [ ] to [x]. -->- [x] `npm test` passes- [x] contribution guidelines followed [here](contributing.md)- [x] commit message follows commit guidelines,neutral
nodejs/citgm,eslint,2017-01-27T10:27:20Z,okay re-ran and we now have a green run,neutral
babel/babylon,eslint,2017-07-28T16:56:45Z,create espree plugin. hey! :wave: i'm just digging around `babel-eslint`. `babylon` and `eslint`. trying to set up some config for `eslint`. i always wonder why even `babel-eslint` exist. okey. there are reasons. but behind the scenes most of it's code base is that `babylon-to-espree`. so today i'm thinking why not just include it here? so then we can freely add eslint `parser` option to `babylon`. e.g. `"parser": "babylon"`.currently there are three problems: 1) `babel-eslint` has some bugs and don't have "full" support and configuration of the `babylon`. 2) `eslint` can't use `babylon` only because ranges (which thing is exactly the idea behind `babylon-to-espree` in the `babel-eslint`). 3) if `eslint` use `babel-eslint` it don't get all of the power of `babylon`. or okey. it _should_. but there are some problems. which i don't want to report. because it may be better to do the effort to pr such plugin.do you want prs here and there for such thing?sorry if something isn't clear. i'm a bit tired. ;],negative
babel/babylon,eslint,2017-07-28T16:56:47Z,hey charlike! we really appreciate you taking the time to report an issue. the collaboratorson this project attempt to help as many people as possible. but we're a limited number of volunteers.so it's possible this won't be addressed swiftly.if you need any help. or just have general babel or javascript questions. we have a vibrant slackcommunity that typically always has someone willing to help. you can sign-up [here]( an invite.,positive
babel/babylon,eslint,2017-07-28T17:18:10Z,i'm not talking about making eslint plugin. i'm talking about moving some babel-eslint code here as native `babylon`'s  builtin plugin. babel-eslint then may be just some thin layer for babel-specific things and fixes. in bonus we will can just use `babylon` as eslint parser.> not sure what you mean about the full support/config of babylon though? and babylon does allow ranges as an option babel/babylon#options.i just mean that babel-eslint has too much hardcoded things and some things may not work so well like it would if we just has `espree` plugin here and use that parser in the eslint directly. not through babel-eslint.,neutral
babel/babylon,eslint,2017-07-28T17:19:53Z,charlike that is exactly what hzoo is proposing :)> possibly add another babylon plugin for eslint so that we don't have to mutate the ast afterward. effectively making babel-eslint a minimal wrapper.he originally proposed an `eslint` (in this case naming it `estree` may make more sense) plugin for _babylon_.,positive
babel/babylon,eslint,2017-07-28T17:22:22Z,what? :laughing: sorry it's sounds a bit strange to me. of course it is possible. but then it won't feel as good as defining it through eslint's `parser` option :v: i see it like needless effort. when we almost have ready `espree` plugin _for babylon_.,negative
babel/babylon,eslint,2017-07-28T17:24:47Z,charlike i think you are confused? brian is saying i proposed the exact same thing you did. i just named it "eslint" instead of "espree",neutral
babel/babylon,eslint,2017-07-28T17:25:41Z,doh. probably. i'm a bit tired :rofl: just realised that after rereading it.,negative
babel/babylon,eslint,2017-07-28T17:27:46Z,> cc not-an-aardvark on thoughts?thanks for the ping. in theory it sounds like it would nice to have a way of making babylon produce estree. although i think `babel-eslint` would still be necessary in either case for patching scope analysis. i'm not really familiar enough with `babel-eslint`'s codebase to have a strong opinion one way or the other about whether this is worthwhile.,negative
babel/babylon,eslint,2017-07-28T17:38:04Z,> not-an-aardvark:  in theory it sounds like it would nice to have a way of making babylon produce estreeit's babylon's `estree` plugin making that? huh. or you meant `espree`. haha. damn names :rocket: :rofl:,positive
babel/babylon,eslint,2017-07-28T17:39:06Z,i meant estree. i hadn't realized that plugin already exists.,neutral
ipfs/js-ipfs-api,karma,2016-08-10T17:12:38Z,apparently i just needed to rerun it a few times for the tests to run. i was having issues with karma and chrome. but a few more tries and it started running the tests.,neutral
react-materialize/react-materialize,eslint,2016-08-16T11:50:04Z,edit eslintrc,neutral
vega/vega-lite,codecov,2017-07-28T17:01:22Z,yay!  -- improve the codecov?,positive
pouchdb/pouchdb,eslint,2016-11-26T00:04:31Z,verified `npm run eslint` myself and it's fine.,positive
pouchdb/pouchdb,eslint,2016-11-28T14:18:54Z,super confused about how this is causing lint failure. but may be some weird timing issue with an upgraded eslint. either way can ignore it for now and pick up the next update,positive
pouchdb/pouchdb,selenium,2014-09-14T13:18:46Z,put in retry logic in connections to selenium,neutral
pouchdb/pouchdb,selenium,2014-09-14T17:38:16Z,(#2761) - increase retries for selenium server connection,neutral
pouchdb/pouchdb,selenium,2014-09-14T17:41:57Z,you're doing god's work. man.,neutral
pouchdb/pouchdb,selenium,2014-09-15T15:33:05Z,more like +1000,neutral
pouchdb/pouchdb,selenium,2014-10-04T13:29:32Z,get console from running saucelabs / selenium instances. admc / sourishkrout any ideas about this? a large percentage of our failures are onliy via saucelabs and its fairly hard to debug from one side,negative
pouchdb/pouchdb,jshint,2014-10-05T18:19:04Z,yay jshint. okay. now it's really ready for real this time pinky promise.,positive
pouchdb/pouchdb,jshint,2014-10-09T14:00:47Z,it's failing jshint,negative
pouchdb/pouchdb,jshint,2014-10-12T03:50:56Z,jshint,neutral
pouchdb/pouchdb,sauce,2013-11-26T17:02:51Z,what we are moving to isnt particularly certain. but definitely moving away from travis + saucelabs towards a 'run tests on a single machine' solutionwe spent way too much time getting travis working and it still ended up failing way too often to be useful,positive
senecajs/seneca-web,coveralls,2016-09-13T09:00:08Z,update .travis.yml. should stop coveralls spam,neutral
vlucas/frisby,jasmine,2014-10-09T18:00:46Z,vlucas +1the idea of test suite groups would be wonderful to have. i have a set of different specs i'd like to be able to run one after another and it's quite tedious to run each spec one at a time to guarantee it runs in the order desired.,positive
vlucas/frisby,jasmine,2014-10-17T15:01:03Z,you have to install `jasmine-node` separately. as it is the cli test runner itself:`npm install -g jasmine-node`,neutral
vlucas/frisby,jasmine,2014-10-20T03:56:41Z,i have installed jasmine-node locally .globally .jasmine-node works in the code.terminal.locally and it still  shows me this error .please help . i really want to test my api,negative
angular/protractor,jasmine,2016-12-19T21:07:22Z,fix(jasmine): return the full test name in jasmine test results.. fixes #3510,neutral
angular/protractor,jasmine,2016-12-26T23:34:40Z,cnishina i just noticed this has not yet been released. is it planned?,neutral
angular/protractor,jasmine,2016-12-29T20:53:15Z,add a method to the framework adapters interface to run async code before each test. this will be used for things such as restarting the browser between tests. to avoid relying on control flow. we need to be able to run asynchronous things (like waiting for the new browser instance to start up). this will look something like:```jsjasmineadapter {  addrunbeforefunction(fn) {    jasmine.beforeeach((done) => {      fn().then(done);    });  }}```,positive
angular/protractor,selenium,2015-12-13T22:44:05Z,nicktomlin did you have chance to try it?,neutral
angular/protractor,selenium,2015-12-17T04:28:02Z,the selenium issue you linked does not seem to be the same thing we are asking for. people in that thread are asking to be able to **test response headers** going to protractor. we are asking to be able to **set request headers** coming from protractor to the server at the start of the test. this functionality is to do things like simulate a logged in or "cookied" user w/o having to take the extra step of explicitly logging in every time. also in our case it could be used to bypass an annoying resource-consuming overlay which sets a cookie when the user closes it - telling it to not to show up the next time the page is loaded. as a workaround we have created dummy pages to set these cookies. but it slows the tests down when protractor first has to hit these dummy pages before every test.we also use a wurfl-based tool called scientia which sets a header to indicate the make. model. browser and os of the various devices we support. it would be nice to be able to spoof this to test different device-specific behaviors.,negative
angular/protractor,selenium,2015-12-21T03:28:21Z,ping sjelin :),neutral
angular/protractor,selenium,2015-12-21T20:47:21Z,sorry!  i'll merge a bunch of stuff in today,negative
angular/protractor,selenium,2015-12-22T03:00:43Z,merged in with f533341,neutral
angular/protractor,selenium,2015-12-24T02:27:09Z,dnozay i've tried with the latest selenium (from the master branch) - same issue. note that it also fails with `directconnect` - meaning that it is most likely the firefox-specific issue..thanks!,positive
angular/protractor,selenium,2016-01-03T08:27:02Z,protractor not running. we i run comannd `protractor conf.js` it return error```[launcher] process exited with error code 1undefined:1190    vlog(2. () => this + ' scheduling notifications'. this);             ^syntaxerror: unexpected token )    at goog.loadmodulefromsource_ (c:\users\mundha\appdata\roaming\npm\node_modules\protractor\node_modules\selenium-webdriver\lib\goog\base.js:1123:19)    at object.goog.loadmodule (c:\users\mundha\appdata\roaming\npm\node_modules\protractor\node_modules\selenium-webdriver\lib\goog\base.js:1085:46)    at c:\users\mundha\appdata\roaming\npm\node_modules\protractor\node_modules\selenium-webdriver\lib\webdriver\promise.js:1:6    at object.exports.runincontext (vm.js:64:17)    at object.context.closure.goog.retrieveandexecmodule_ (c:\users\mundha\appdata\roaming\npm\node_modules\protractor\node_modules\selenium-webdriver\_base.js:135:8)    at <anonymous>:1:6    at object.exports.runincontext (vm.js:64:17)    at context.closure.closure.vm.createcontext.closure_import_script (c:\users\mundha\appdata\roaming\npm\node_modules\protractor\node_modules\selenium-webdriver\_base.js:104:12)    at object.goog.importscript_ (c:\users\mundha\appdata\roaming\npm\node_modules\protractor\node_modules\selenium-webdriver\lib\goog\base.js:879:9)    at object.goog.importmodule_ (c:\users\mundha\appdata\roaming\npm\node_modules\protractor\node_modules\selenium-webdriver\lib\goog\base.js:900:14)```i am not able to run e2e testing using this tool,negative
angular/protractor,selenium,2016-01-07T20:00:56Z,ukyomatterport please see the selenium issues referenced or ask a question on stackoverflow. thanks!,positive
angular/protractor,sauce,2014-10-17T17:40:22Z,docs: sauce issues. i had a pull request all set for this. but i realized that i haven't done a cla since starting at my current employer. so. it's more expedient to just point this out. i had assumed that if i opened a sauce connect tunnel. i could just point at localhost as if i was running against a local selenium. and so i still had a seleniumaddress file in my config. and i was wondering why i was getting errors that my user and key hadn't been provided.poking in the code. i discovered that seleniumaddress overrides sauceuser and saucekey. which isn't documented on line 58 of server-setup.md.additionally. browser-setup.md says on line 75 that if multicapabilities is set then capabilities is ignored. but this is not entirely true. protractor errors out if the capabilities key doesn't associate an object that minimally specifies a browsername.  this one seems like a bug to me. in fact. the sauce driver doesn't seem to support multicapabilities at all... is that so? or is it not working because i'm manually creating the "protractor/lib/runner" instance in my gulp process and not doing something that i should be?i'll get to work in my company with signing a cla so i'm not handcuffed in the future.,negative
angular/protractor,sauce,2014-11-06T18:57:52Z,i did look at that. the main difference i see is that the launcher seems to use a separate process and exits/starts a new one for each run. does that mean that reusing the prototype to get a new instance of runner within the same process isn't intended to work?,neutral
angular/protractor,sauce,2014-11-06T19:42:54Z,gotcha -- i missed those. glutton for punishment that i am. i'm going to try to deal with that instead of relenting and going out-of-process.the reason i'm actually more interested in separating the runs outside of protractor runner than doing multicapabilities has to do with the fact that cucumber has no facilities for writing results to a file. and i have to hook the process.stdout and write the json manually to files in order to capture the results and then turn each of them into xunit/junit files for our nightly test harness to consume. it would be great if there were a way in protractor to redirect test output to a file. but it seems the architecture relies on the test framework for that.  so. barring that. doing it this way makes it easier for me to isolate the results output from the other messages and to keep the results of the multiple runs separated.thanks for your help!,negative
angular/protractor,sauce,2014-11-06T21:41:19Z,yes. the #1485 attempts to unify the test output for all test framework into a single format. cucumber hasn't been done though. i'll look at it now to see how feasible it is.,neutral
angular/protractor,sauce,2014-11-09T01:49:02Z,stu-salsbury sorry but we're not actively supporting the cucumber framework (it's more community-driven). i just included cucumber output as part of that pr since it was easy and allows me to create test cases with that. feel free to submit cucumber prs and we will review them and pull them in though!,positive
angular/protractor,sauce,2014-11-10T17:53:35Z,thanks hankduan . yes. i realize that cucumber isn't officially supported. for me. the bigger issue now is that i find that the center of gravity has moved even further out of the runner and into the launcher and so i'm left with a lot of functionality that isn't suited to running in my gulp process. i guess that means that i need to target at least the launcher as my entry point if not attempt to harness the cli itself. i was really hoping not to add to the already lengthy list of out-of-process steps in my build.,negative
angular/protractor,jshint,2016-07-07T20:50:54Z,chore(tests): remove jshint checks for dependency tests,negative
Esri/esri-leaflet-geocoder,karma,2015-07-28T19:23:40Z,list 'karma-cli' as a requirement for running tests. i ran into the error below before running `npm install -g karma-cli`. so it'd be helpful to list this as a dependency```sh: karma: command not found```,negative
tapjs/node-tap,mocha,2018-03-12T16:07:07Z,apologies as i realized this should be reported at tapjs/tap-mocha-reporter#43,neutral
slevithan/xregexp,eslint,2018-01-20T17:34:24Z,run eslint on tests. this helps the tests conform to the same style as the library.with the exception of a handful of rules that are not enforced.,neutral
slevithan/xregexp,eslint,2018-01-22T01:06:44Z,nice. thanks!there's a conflict in `h.js` after merging the `namespacing` pr. can you resolve?,positive
balderdashy/sails,mocha,2014-03-20T08:03:25Z,how to make unit test easier to integrate in a project ?. i really love sails and use it in a lot of project now.i just think it is quite painful when it comes to add some tests as gruntfile.js needs to be modified at several places to integrate mocha.could a mocha environment be integrated during project creation ?,positive
balderdashy/sails,mocha,2014-03-20T23:00:51Z,thanks t3chnoboy; closing this in favor of the issue you linked to.,neutral
balderdashy/sails,mocha,2014-04-03T11:48:13Z,ease the usage of additional modules in the gruntfile. each time i use sails in a project. i need to modify the grunt file to add some lint / mocha / ... tasks for testing purposes. this setup is quite painful as it impacts several part of the gruntfile. is there an easier way such as the possibility to import some custom functionalities in the gruntfile ? my concern is more with the future updates of sails that could possibly modify the gruntfile.,negative
balderdashy/sails,mocha,2014-04-10T17:16:28Z,thanks. that is a nice tip.,positive
restify/plugins,mocha,2017-05-10T00:04:30Z,hey kostyatretyak.thank you for opening this issue. from my understanding it looks like you found this wasn't a bug in either the restify-plugin or mocha repos.i'm going to close this for now as resolved. if i'm misunderstanding. please comment and i would be happy to re-open and discuss :heart:,positive
jprichardson/node-fs-extra,standard,2016-01-21T20:35:55Z,i agree. i'm glad you think that way.you might want to consider _always_ replace `fs.exists` in case you want to fix the original function signature issue (it's different from all other standard async functions. i.e. it has no `err` parameter and so `result` becomes the first one). if you haven't already. you can look up what's wrong with that. personally. it doesn't bother me too much. i'm just raising this so you can make a conscious decision.,negative
ckeditor/ckeditor5-editor-classic,eslint,2018-07-02T13:17:40Z,when the name is `initialdata`. length of the line is bigger than 140 and it requires additional eslint rules... that's the reason why i'm trying "smuggle" other name.,negative
ModuleLoader/es-module-loader,karma,2015-11-01T16:31:55Z,in the build you referenced above. it looks like you might not have enabled the native-iterator tests in the travis.yml?? in order to test if evergreen -> windows 7 works. those tests must be enabled. my latest commit changes both the travis.yml and the karma.conf -- we'll see if it works.,neutral
cerebral/cerebral,standard,2016-11-03T16:20:59Z,ps: sorry. i did not notice that the added react scripts were not standard linting friendly,negative
jquery/jquery,karma,2018-09-03T20:34:10Z,gibson042 the `grunt karma:main` task seems to stall.,neutral
jquery/jquery,karma,2018-09-05T15:50:41Z,right. amd behavior is at odds with the way the tests are currently loaded in karma. i just removed that mode. because it doesn't provide much value over e.g. `grunt karma:chrome-debug` anyway.,positive
jquery/jquery,karma,2018-09-05T15:55:16Z,> i just removed that mode. because it doesn't provide much value over e.g. `grunt karma:chrome-debug` anyway.what do you mean by that?,neutral
rooseveltframework/roosevelt,eslint,2017-09-22T17:16:12Z,merge conflict,neutral
nodemailer/nodemailer,mocha,2017-04-17T17:24:18Z,the gmail account configuration should "**allow less secure apps: on**". then i got the mail in my gmailbut i still get the error:`error: timeout of 2000ms exceeded. for async tests and hooks. ensure "done()" is called; if returning a promise. ensure it resolves.`when testing the service with `mocha.js`,negative
keystonejs/keystone,eslint,2016-02-02T01:17:51Z,what's the correct linebreak format for keystone?  i enabled the latest .eslintrc in webstorm and complains about the following for any file i open:```eslint: expected linebreaks to be 'lf' but found 'crlf'. (linebreak-style)```,neutral
keystonejs/keystone,eslint,2016-02-03T01:36:49Z,add eslint-config-standard to package.json. fixes #2213,neutral
keystonejs/keystone,eslint,2016-02-03T04:01:47Z,webteckie we're not using the `standard` eslint config... you're hitting this issue because your node modules are in a `node_modulesx` directory. which eslint is **not** ignoring. and then it's trying to use the `standard` preset because the `crypto-browserify` package uses it.(typical dcousens :p)if you get rid of `node_modulesx` it should lint keystone just fine.,negative
keystonejs/keystone,eslint,2016-02-05T23:38:11Z,added space-in-parens rule to eslint. as per issue #1797,neutral
keystonejs/keystone,eslint,2016-02-06T22:50:24Z,added eslint spaced comment rule. revised pr with config set up to permit /*! jedwatson i haven't been able to find config options or other eslint rules which would require spaces before the '//' or a space at the end of comment,neutral
keystonejs/keystone,eslint,2016-02-06T23:38:18Z,hey all. the rule "brace-style": 2 doesn't permit start and end braces being on the same line i.e.  `props.onclick = () => { this.togglecreate(true); };` creates a linter error.we have about 80 instances of this throughout the code. to prevent this rule from picking up such instances i can add config option `{ "allowsingleline": true }`. is this something we would want to do? alternatively i could go ahead and remove the curly braces or place the statement on a separate line. let me know what you think!,positive
keystonejs/keystone,eslint,2016-02-07T09:57:13Z,thanks lennyboyatzis - looks great. if there's no equivalent check for the end of the `*/` comment. we'll just keep an eye out for them :),positive
yeoman/generator-karma,karma,2013-12-06T00:07:30Z,feat(gen): allow option for configuring test path. i'm adding mocha tests to the angular-fullstack generator and i need to be able to configure the karma test path to 'test/client' rather than 'test'. this pull request adds a testpath option. with default path of 'test'. so it should work exactly the same for those already using it. but would add optional configuration.,neutral
yeoman/generator-karma,karma,2013-12-11T16:45:03Z,can you add a test?,neutral
yeoman/generator-karma,karma,2013-12-17T14:56:09Z,anything missing from this pr? waiting for this to be added so i can continue my work on angular-fullstack,neutral
asset-pipe/asset-pipe-sink-fs,eslint,2017-12-04T14:35:20Z,chore: add eslint dependency checking. ## status**ready**## descriptionadd eslint missing dependency checking. now that's smart!,positive
bitpay/bitcore,mocha,2015-01-12T19:48:47Z,elichai a mocha test in the `test` directory. so that the functionality can be added to the test coverage. you can see the `pool` tests to see how to fake a message from a peer. the `addr` messages for example.,neutral
electrode-io/electrode,mocha,2017-10-06T13:14:38Z,added babel-core/register to mocha for es6 on server side unit tests. added this line so that we can use es6 on server side unit tests. tested in my local project that had this installed. babel-core is a requirement. and is listed in this electrode-archetype-react-app-dev's package.json.,neutral
angular-ui/bootstrap,karma,2014-01-13T14:02:52Z,chiefy could you share link to karma-ng-scenario issue?,neutral
angular-ui/bootstrap,karma,2014-01-21T19:10:44Z,ok then.  we can keep jquery under the alias. you guys are right it is worth the 'ease of use'.i don't like the idea of having two karma configs though. it's a lot more test time.  unless you guys all think that is  a good idea?,positive
angular-ui/bootstrap,karma,2014-02-09T18:46:31Z,is this issue still valid based on discussion in #1318?,neutral
angular-ui/bootstrap,karma,2014-02-09T18:55:10Z,personally i'm not to crazy about investing more time into this one. i think we could use our cycles for better causes (bug fixes. animation support etc.). while i agree that it would be great. in practice we don't see much problems (if any) steaming from usage of full jquery during testing.,positive
angular-ui/bootstrap,karma,2014-02-09T18:57:26Z,ok. closing then. and let's reconsider when/if the first bug from this scenario appears :-),neutral
casesandberg/react-color,eslint,2017-06-21T21:32:31Z,great to hear :) i'll fix the package.json thing.i'm also not sure if eslint is working properly? i'm not getting any errors. but the `eslintrc.js` references ` extends: 'case/eslint-config' ` ? and i'm not sure how that works.,negative
angular/angular-cli,jasmine,2017-06-25T07:50:32Z,filipesilva i am interested in chai support in particular. would it be possible for angular-cli to support chai instead of jasmine?,neutral
angular/angular-cli,jasmine,2017-06-29T20:33:11Z,i was able to solve the solution. since i was using jasmine for my tests. i forgot to add it.,neutral
wix/react-native-calendars,eslint,2018-03-19T16:31:43Z,ok. it makes sense.what about to use some linting tools? do you like eslint airbnb preset?,neutral
marko-js/marko,mocha,2015-08-28T16:13:28Z,btw: on the pr. all the tests passed on my local machine running `mocha`. so i was surprised to see it fail on travis ci.,negative
pghalliday/grunt-mocha-test,mocha,2014-02-18T15:47:50Z,xunit reporter captures all tests output. i'm using the following grunt task:``` mochatest: {              test: {                options: {                  reporter: 'xunit'.                  capturefile: 'tmp/xunit-mochatest.xml'.                }.                src: ['test/**/*.js'].              }         }```so i'm trying to get xunit report. unfortunately. in this case all the output from the running tests (so also console.log) is written to the file specified in the capturefile option. i believe that there should be dist option added which would allow for capturing only the xunit reporter output.,negative
pghalliday/grunt-mocha-test,mocha,2014-02-18T17:18:33Z,the capturefile option captures all the output on stdout - it would be impossible for the plugin to tell the difference between xunit output and other output. you would need to use a different reporter that captures it's own output if you need to mix in other output. personally i never have my tests output to console unless i'm debugging (which i then don't commit). note that stderr is not captured so deprecation warnings and such from node and other libraries do not get captured. you could potentially log your output to stderr if that's appropriate.i think there are mocha reporters available that output to files too. eg. mocha-jenkins-reporter,neutral
pghalliday/grunt-mocha-test,mocha,2014-02-18T17:24:53Z,as a side note. if you are testing code that logs to the console then you may find it useful to inject a log function which in production would be console.log but in your tests is a spy function or something. i often use the sinon package for this kind of thing.,positive
pghalliday/grunt-mocha-test,mocha,2014-02-22T08:21:29Z,hopefully this is enough to get you going - another trick. when you can't insert a log function. is to run the tests in a child process and capture the output to verify but this opens a whole load of other problems and i only do this for end to end integration tests (i'm also working on a generalized solution for this to capture coverage data from the child process),negative
pghalliday/grunt-mocha-test,mocha,2014-02-28T03:18:18Z,since this isn't closed. and because the name exactly matches what _i_ want. i'll (ab)use this thread: please passthrough the `slow` config option to mocha.,neutral
pghalliday/grunt-mocha-test,mocha,2014-03-05T19:00:27Z,when mocha-test part of task sequence . tasks after mocha-test were not executed . hello i have following question : i defined some alias grunt task  as following : grunt.registertask('new_task'. ['mocha-test'. 'other_task']);when i execute this new defined task with command line grunt new_task . only mocha-test task executed . other_task were not startedin the case when i define reverse order as following grunt.registertask('new_reverse_task'. ['other_task'.'mocha-test']); both tasks executedwhat can cause to the issue ? how can be caused to that both of tasks in the first case new_task will be executed ? your help will be valuable . thanks in advance,neutral
pghalliday/grunt-mocha-test,mocha,2014-03-05T19:03:08Z,this would happen if the tests failed. can you post the output you get?,neutral
pghalliday/grunt-mocha-test,mocha,2014-03-05T19:09:31Z,also it should be `mochatest` unless you also aliased that,neutral
pghalliday/grunt-mocha-test,mocha,2014-03-06T18:05:07Z,hmm. you should get something like this at the end```done. without errors.```which signifies grunt exited cleanly.from your output it looks like the grunt process exited early for some reason. do you see the above when you reverse the order of the grunt tasks?my best guess is that there is something happening asynchronously to your tests that crashes the node process after the tests have completed.,neutral
pghalliday/grunt-mocha-test,mocha,2014-03-10T19:43:25Z,have you tried the slow option? as far as i can see this should already work as the mocha constructor already has this line:```  if (options.slow) this.slow(options.slow);``` and any options specified for `mochatest` are already passed to the mocha constructor. so assuming you don't set it to zero it should already work.,neutral
Project-OSRM/osrm-backend,standard,2018-11-17T17:21:25Z,how to compute shortest path with custom cost and elevation data for electric vehicles. dear all. i am looking help in order to compute shortest path with a custom arc cost function. in particular. i would like to add to the arc distance some other information which allow me to compute shortest path for electric vehicles. these are the steps i don't know how to achieve.-- given (supposed) that i can retrieve elevation data from open-elevation initiative. how to enrich the orsm graph? in which step and how i can provide this information to the standard osm data downloaded by geofabric?-- after that. in which function of orsm-bakend can i work on in order to provide my specific arc cost function to the shortest path algorithm? i would like to use the elevation data. the distance and some other information in order to modify the arc cost (e.g. the estimated acceleration).do you have any guided step to achieve this?thank you very much for the help.,neutral
npm/npm,standard,2016-03-25T14:19:33Z,thank you very much for your thoughtful and articulate response!  i generally think most changelogs are substandard.  but your changelog is an exemplar counter to the trend (or more precisely. what i _perceive_ to be a “trend” :stuck_out_tongue:).  thanks to you and all who have created such a wonderful changelog. and i hope it inspires others to make their own changelogs the best that they can.  cheers!  :d,positive
mishoo/UglifyJS2,uglify,2014-02-08T10:35:59Z,i added a compressor option for it.  to keep unused function arguments. pass `keep_fargs: true` to the compressor. for example:```uglifyjs file.js -m -c keep-fargs=true```i still believe that relying on this “feature” is silly. so it's disabled by default.,negative
mishoo/UglifyJS2,uglify,2014-02-13T22:44:11Z,i have seen it happen in a grunt task. and reproduced it on the command line: `uglifyjs in.js -o out.js`. input is all lf. output ends in crlf. that's pretty straightforward. and i don't know how external interference would come in. perhaps it has to do with the way the file is created?,negative
mishoo/UglifyJS2,uglify,2014-03-03T19:32:12Z,substack: each of those warnings tells you about an unsafe transformation that uglifyjs is making. which may change your program's behaviour. i'd call each of them surprising. get rid of your unused variables and function arguments. and uglifyjs will be silent.,neutral
mishoo/UglifyJS2,uglify,2014-03-03T19:41:24Z,or send `warnings=false` to the compressor. i.e.:```uglifyjs files... -m -c warnings=false```,neutral
mishoo/UglifyJS2,uglify,2014-03-04T18:48:35Z,yes. that's the original code before uglify compressed it.,neutral
1602/jugglingdb,mocha,2014-02-03T22:41:52Z,ugh. sorry. new to mocha. i just realized this seems to be a side-effect of logging in the testing environment.,negative
1602/jugglingdb,mocha,2014-02-09T14:58:02Z,mshick  i'm having the same problem with mocha. what is the recommended fix / workaround? i don't seem to be able to use `expect(obj).to.eql(model)`. since it's showing the boolean as {},negative
UKHomeOfficeForms/hof-template-mixins,snyk,2017-11-08T11:36:27Z,remove snyk from regular test run. running snyk in ci is regular pain point since pr builds can't include the secure token. since this module will only ever be used in the context of a larger project - which can and absolutely should run snyk on its dependency tree - then i don't think it is necessary to also protect here.,negative
UKHomeOfficeForms/hof-template-mixins,snyk,2017-11-08T11:40:31Z,sorry for the naive question but why is it that pr builds can be run on other builds with snyk and not here?but you are right that it doesn't need to be here,neutral
UKHomeOfficeForms/hof-template-mixins,snyk,2017-11-08T11:44:20Z,> [why can] pr builds can be run on other builds with snykthey generally can't. travis doesn't expose secret env vars to prs - otherwise you could open a malicious pr on any repo that posted the environment variables to your server. and steal all the secrets.it might (i can't recall exactly) that prs from branches within the same repo are allowed access to env vars. but since this doesn't scale at all. it shouldn't be relied on.,neutral
UKHomeOfficeForms/hof-template-mixins,snyk,2017-11-08T11:45:10Z,i had a look around a few other hof repos. and the only ones i found using snyk in ci were doing a dance to only run it on master builds and not prs.,neutral
UKHomeOfficeForms/hof-template-mixins,snyk,2017-11-08T11:49:33Z,i don't really mind leaving the script there. people can run it if they want to.,neutral
konvajs/konva,mocha,2015-10-19T18:53:32Z,ping. is it still not released? =^_^=,positive
testem/testem,mocha,2013-11-29T11:41:06Z,fix mocha adapter not reporting all test results. i'm using testem with mocha. and noticed that sometimes `testem ci` outputs a report with lack of some test results. (ex. although the spec has 100 tests. testem's report only contains 90 results)this is because. by commit 6c890dc. reporting test result is delayed by `settimeout` asynchronously. which may cause inconsistent order of event emitting. such as `test-result` event after `all-test-results` event.this pr fixes the inconsistency and always emitting `all-test-results` event after all of `test-result` events have been fired. so that reporters can finalize their report properly.,negative
testem/testem,mocha,2013-12-05T10:35:52Z,airportyh how does it look? love to see your comment! :kissing_smiling_eyes:,positive
testem/testem,mocha,2013-12-05T17:41:50Z,kotas thanks! i am quite busy at the moment. will get to this next week.,positive
testem/testem,mocha,2013-12-06T01:58:46Z,thank you for your response. and oh. sorry for bothering you. never mind and keep going! :satisfied:,positive
DevExpress/testcafe,sauce,2016-07-28T16:29:49Z,to summarize that we've discussed:- browser alias is `{provider-name}:{browser-name}`. both parts are optional. we've try to lookup provider first. e.g. for `phantomjs` alias. then local browser with that name. e.g. `chrome` alias- we should reflect this structure in code- listing of browsers for provider in cli should show aliases. e.g. `saucelabs:win8chrome`. `phantomjs`- `listavailablebrowsers` should return browser names. e.g. for saucelabs `win8chrome`- `openbrowser` in provide should accept browser name. e.g. for saucelabs `win8chrome`,neutral
oddbird/true,mocha,2017-05-01T17:03:42Z,i'm compiling directly in sass. since mocha trusts the sass results. it would be very strange if gulp/mocha explains the error. can you paste your relevant gulp setup. for me to try it locally here?,positive
mochajs/mocha,mocha,2013-11-04T00:48:07Z,yep. you can do:``` jsvar mocha = require('mocha');var mocha = new mocha();mocha.addfile('test.js');function runmocha(callback) {  mocha.run(function () {    callback();  });}runmocha(function () {  runmocha(function () {});});```,neutral
mochajs/mocha,mocha,2013-11-04T18:42:32Z,yes it works for this simple example. but what if i don't have control over when mocha is instantiated (i.e. when using a grunt plugin) or i only want to execute a subset of the tests?btw: in your example i would expect the tests in 'test.js' to run twice on the second run. since i called addfile twice (and it will be contained twice in this.files in mocha.),negative
mochajs/mocha,mocha,2013-11-06T00:42:22Z,cool. wrong spot for the change tho. mocha.js is compiled from the real src files.,positive
mochajs/mocha,mocha,2013-11-06T03:07:15Z,if you use make you could just do `make -j 8 test` and glob files in different test dirs if you have some seperated out in dirs or just pass different file names. mocha itself doesn't have to do this.,neutral
mochajs/mocha,mocha,2013-11-06T16:33:43Z,alrighty - code attached. :smile: i wasn't super sure the best place to put the tests. so i made an acceptance test for them.  from what i could tell that's where the trickier "uhh. you kinda have to run the actual command to test this" tests go.one nice thing about this is if you use the `--bail` flag mocha will still exit after the first failure regardless of the event-loop being alive or not.please let me know if you'd like me to modify or change this at all & i'll do so asap!,positive
mochajs/mocha,mocha,2013-11-07T21:03:48Z,wrong async tests with disabled timeout. let's consider the following test:```var assert = require('assert');describe('suite'. function () {  it('should be unfinished'. function (done) {  });  it('should be passed'. function () {    assert.equal(1. 1);  });});```test `should be unfinished` is wrong. because `done` callback  isn't called.running the test with `mocha --timeout 0 test/` outputs nothing.expected behavior: `should be unfinished` should be reported as failed and `should be passed` as passed.,negative
mochajs/mocha,mocha,2013-11-07T23:28:12Z,that's great! i had been looking for this. for example to add a "table-of-contents" toggle switch to the markdown reporter.,positive
mochajs/mocha,mocha,2013-11-08T00:01:49Z,tutorial?. does anyone know of any places where video tutorials about how to go about testing with mocha could be found?better yet. is there a tutorial about integrating mocha with node + grunt.js?,neutral
mochajs/mocha,mocha,2013-11-08T00:02:59Z,(i know this isn't an issue with mocha itself. but i don't know where else to ask because i don't know anyone that uses mocha).,negative
mochajs/mocha,mocha,2013-11-08T00:42:31Z,you dont really need grunt involved at all. just do `mocha test/*.js` etc (or just `mocha` which assumes the former),neutral
mochajs/mocha,mocha,2013-11-08T01:23:47Z,i just use grunt so i don't have to switch back and forth from code to terminal thereby saving screen real estate by using grunt to push results via growl notifications.> on nov 7. 2013. at 6:42 pm. tj holowaychuk notificationsgithub.com wrote:> > you dont really need grunt involved at all. just do mocha test/*.js etc> > —> reply to this email directly or view it on github.,negative
mochajs/mocha,mocha,2013-11-08T14:33:49Z,work outstanding is actually replying to pull requests. or move on. a year already. time flies innit.,positive
mochajs/mocha,mocha,2013-11-08T22:09:22Z,cool geekdave. closing this,positive
mochajs/mocha,mocha,2013-11-09T00:09:44Z,there's `mocha --watch` for that as well. the grunt stuff probably just calls that,neutral
mochajs/mocha,mocha,2013-11-10T21:06:57Z,meh :p easy to delegate that and just do``` jsit('should work'. function(done){  co(function *(){    yield whatever;  })(done)})```similar to the promise argument. i think leaving mocha at the simplest level with regular old callbacks is the best way to go,positive
mochajs/mocha,mocha,2013-11-11T09:10:15Z,exclude console.log when '-r xunit' is used. because some of the codes under test use console.log for printing out message for runtime information.but i need the output file for integratin with jenkins. is there any possible ways that i can do it while `mocha r xunit > test-result.xml` if it's not possible. how about the alternative like `mocha -r tap`?thanks.,negative
mochajs/mocha,mocha,2013-11-11T09:15:43Z,naturally you can pipe the results. but you want to only pipe your own logs?,neutral
mochajs/mocha,mocha,2013-11-11T10:05:21Z,i do not want the console.log from other developers shown up in the xml.i have tried something like `mocha -r xunit | grep  '^<' > xunit-result.xml` but this is unreliable because each line not necessarily starts with '<testcase'. (it is because i have "\n" in 1 of the "describe")i'm going to change the test description. though i still want a more "future-proof" approach.thanks for your promptly reply.,negative
mochajs/mocha,mocha,2013-11-11T15:02:20Z,remove the console.logs. replace them with a log function that doesn't output anything when in a test environment,neutral
mochajs/mocha,mocha,2013-11-11T15:04:12Z,what exactly is your problem you are experiencing? anything that stops you from using mocha to run your tests?,neutral
mochajs/mocha,mocha,2013-11-11T15:34:44Z,the problem is that running the above-mentioned test results in empty output:```$ mocha --timeout 0 test.js $```,neutral
mochajs/mocha,mocha,2013-11-12T05:29:30Z,travisjeffery ping- if the comments about testing mocha with mocha are blocking this i will make the desired changes... i still think this is the right way to test lower level mocha features.,negative
mochajs/mocha,mocha,2013-11-14T01:05:49Z,i have the same problem with the "before all" hook. it graps the timeout that i specified globally in stead of the one in the function with `this.timeout(2000);`,neutral
mochajs/mocha,mocha,2013-11-14T21:05:51Z,+1the `--debug` flag does nothing in the terminal; to debug on the server. the flag is. as prust notes. `debug`.,neutral
mochajs/mocha,mocha,2013-11-15T00:58:17Z,lightsofapollo blocked partly because i'm not a fan of how those tests are written (side-note: integration tests = low level?). so ya if you could write these to use mocha and be like every other test that'd be great. the other part is making sure this is the right thing since there's a lot of other similar prs/issues related to this.,negative
mochajs/mocha,mocha,2013-11-17T22:11:16Z,thanks for looking into it!i agree that "mocha never. ever exits" behavior is logical. but it isn't user-friendly.how would a user figure out the cause of forever running tests?it would be much better to see something like this:```$ mocha --timeout 0 test.jsfailed: should be unfinished (async callback is never called)passed: should be passed```,neutral
mochajs/mocha,mocha,2013-11-18T02:30:46Z,silent exit with no output is clearly a bug.but a timeout of 0 means "no timeout". why would it timeout. ever?,neutral
mochajs/mocha,mocha,2013-11-19T21:03:08Z,yes. test 'should be unfinished' isn't timeout.it'd be nice if mocha detects such tests (that don't call async callback) and reports it in the console as failed with the reason.,negative
mochajs/mocha,mocha,2013-11-23T05:46:28Z,+1 to remove the spinner. i find it distracting and manually edit it out of the .js source files when using mocha.,negative
mochajs/mocha,mocha,2013-11-25T16:49:43Z,travisjeffery looks like tj's a little busy. would you mind reviewing this?,positive
casperjs/casperjs,eslint,2016-01-17T09:23:47Z,fixed eslint config.. for some reason the eslint config file had duplicate keys and suddenly broke recently. this patch fixes this situation.,negative
dfahlander/Dexie.js,eslint,2017-01-23T12:46:32Z,to build all (src. tests + minify etc). still use:```npm installnpm run build```now. eslint is also invoked in the build flow.to watch all. still use```npm run watch```if watch without minification etc (still both src and tests):```npm run watch dev```,negative
sitespeedio/sitespeed.io,selenium,2015-12-28T00:39:35Z,cgoldberg "some of the assets may be blocked" means that the site and sitespeed.io run in china where many things such as tracking/social are blocked. i suspect that the site works ok for the user as they're loaded async etc. but if browsertime/selenium has to wait for all assets to finish loading. i will never get the results. finding which assets exactly are timing out is quite difficult as they're often dynamic.ideally. i'd like to get a report from sitespeed for what was loaded until a custom set timeout occurs. in other words. i'd be fine with sitespeed reporting it took for example 200ms for backend. 1s to start painting etc with the full page render being equal to my custom set timeout.,neutral
CartoDB/cartodb.js,jasmine,2015-08-17T11:14:49Z,ops. sorry not a perfect pr.i tested in the old bad way (using a "demo" html. maybe i can attach the file to `test/demos`?). i think it would be better from my part try to add a jasmine spec to test methods returns what they must return. in addition maybe a phantomjs test could be nice too to see tiles are loaded too?i didn't check in depth all the code. it was a quickly and dirty job. i will check the code your refer at `src/geo/layer_definition.js` but seems a much better solution.i need to check for interaction and torque. the first can be affected if tile size changes for 2x.thanks !!!,positive
karma-runner/karma-sauce-launcher,sauce,2014-12-19T19:29:38Z,support custom firefox profiles in launcher. firefox has the ability to define support custom profiles. this isimportant for allowing users to enable custom or experimental featuresfor testing. an example of this is webgl support. which partiallyworks on sauce labs.using a library called firefox-profile. the sauce labs launcher shouldallow users to define custom properties.,neutral
wix/detox,mocha,2017-09-18T23:49:30Z,right. i was building the project rather than workspace. so now able to build. no luck with the test bit (detox test  --configuration ios.sim.release) though (same issue as described at the very beginning). my structure within e2e dir looks like this: pageobjects   init.js       my_test.spec.js mocha.opts,positive
chentsulin/electron-react-boilerplate,eslint,2016-09-22T03:23:24Z,that eslint plugin looks interesting. i'll give it a shot in the next few days.,positive
chentsulin/electron-react-boilerplate,eslint,2016-09-27T19:03:53Z,i think it would be good to add support for `eslint-plugin-flowtype`,neutral
chentsulin/electron-react-boilerplate,eslint,2016-10-08T23:45:04Z,build is failing because of linter errors in `app/node_modules`. not sure why this is happening because i'm pretty sure that all files in `.gitingore` are ignore by eslint. adding a `.eslintignore` would work but it would be a hacky solution. it would be better if we could ignore them simply with `.gitignore`.,negative
chentsulin/electron-react-boilerplate,uglify,2018-10-18T06:36:29Z,wangyueming do you use uglifyjs-webpack-plugin in webpack3?,neutral
handsontable/handsontable,jasmine,2013-12-27T13:57:30Z,can't put a space into a cell when a checkbox is present in the table. if i have a column with checkbox (let's say it's the first one) and i have a column with text (the 2nd column).i can check / uncheck the box when the selection contains my checkbox column - using the space from the keyboard.but if i select one (alone) cell from the 2nd column. i can't add a space into it. (nor either if i select the entire 2nd column).i just did a correction and i'm going to do the pr right now. however i do not have grunt and don't know how to make a testcase for jasmine. sorry.,negative
react-boilerplate/react-boilerplate,eslint,2017-02-14T04:14:16Z,how can this work in a situation where we're building once and deploying to multiple environments?,neutral
react-boilerplate/react-boilerplate,eslint,2017-02-24T07:38:46Z,i think i have the same issue. i want to create a config file for google api. data include the secret keys. etc.. how will i add it up in the boilerplate? and how will i access the list of secret keys from the config. thanks,positive
react-boilerplate/react-boilerplate,eslint,2017-02-24T07:51:05Z,shawnmclean vlobrigo karloespiritu  for multiple environments.  - the config file resides in a secure location outside your app. - the path (absolute or relative) from your app to the config file is the same for all environments - each config file is has settings appropriate to that environment.how you access that file from within your app via `webpac externals` or webpack `defineplugin`. you will have to work that out for your environments.,neutral
react-boilerplate/react-boilerplate,eslint,2017-03-08T11:14:54Z,how can i achive an external config.json (not bundled so sysadmins can work on it) that get included runtime and isn't statically bundled?,neutral
apache/zeppelin,selenium,2016-11-16T09:00:19Z,tested locally and solves the issue with import. lgtm! ci failure is irrelevant with selenium profile flaky test below:```tests in error:   paragraphactionsit.testeditondoubleclick:443 » elementnotvisible element is no...```,negative
yeoman/generator,coveralls,2014-07-30T15:18:05Z,can we get this landed or closed?,neutral
yeoman/generator,coveralls,2014-08-07T18:50:17Z,lol coveralls,positive
MithrilJS/mithril.js,eslint,2017-10-28T21:45:13Z,update eslint rules for ospec. ospec needs global-require suppressed so it can use `require('util')`.~~test-ospec needs `ecmaversion: 2017` so it can use `async`/`await`.~~removed async/await from test-ospec; just return promise instead.## descriptionmodified `ospec.js`. `test-ospec.js`## motivation and contextmithril's test script linting was failing.## how has this been tested?`npm test` now succeeds without errors.## types of changes- [x] bug fix (non-breaking change which fixes an issue)## checklist:- [x] my code follows the code style of this project.- [x] i have read the **contributing** document.- [ ] i have added tests to cover my changes.- [x] all new and existing tests passed.- [ ] i have updated `docs/change-log.md`,negative
MithrilJS/mithril.js,eslint,2017-10-28T22:36:21Z,ok. updated as requested.,neutral
MithrilJS/mithril.js,eslint,2017-10-29T00:18:30Z,travis is failing for unrelated reasons. no worries!,positive
pouchdb/pouchdb-server,jshint,2015-03-16T00:21:56Z,done. was also failing jshint. but should be good now.,positive
techfort/LokiJS,jshint,2016-01-18T12:20:46Z,i'll just make a few observations and let techfort handle this pr : - it would be helpful to not have your automatic style changes in the p.r. - makes it difficult to see your changes.- i noticed your ttl function operates on meta.updated which would not exist on a new object and may yield a nan in your age calculation. is this considered?- you have some jshint errors in your p.r.. can you run npm run test before submitting p.r. to verify all checks and tests are passed.,neutral
techfort/LokiJS,jshint,2016-01-18T18:02:41Z,its been a long time since i touched the stuff. but i don't recall suppressing warnings on purpose ;-)i did submit pr  to fix (not suppress ;-))  jshint warnings and a fix to make jshint a mandatory precondition to npm test.( #138),neutral
OpenZeppelin/zeppelin-solidity,eslint,2018-09-12T19:57:39Z,thanks for fast reviews!lodash is not declared in package.json explicitly. it is a dependency of babel. eslint. etc.the travis build has been terminated. that's weird a little bit. as "unit tests with coverage" in the same build are fine.,positive
matrix-org/matrix-react-sdk,eslint,2017-10-11T16:59:55Z,run eslint --fix. fixing 1000s of lint issues. some rules cannot be `--fix`ed but this goes some way to linting the entire codebase.,neutral
matrix-org/matrix-react-sdk,eslint,2017-10-23T23:15:45Z,> needs linting!out of interest. were you just referring to the one long string? that's the only thing that was caught by the linter (or that i can see from your comments).the long string was just shown as a warning locally ("max-len": ["warn". in eslintrc). and i assumed that long string literals were probably ok to leave as warnings? but this seems to have caused the travis build to fail. which is a little odd (it would be good to know where that config is coming from) ...assuming that string literals do always need to be broken up. is our preferred approach just to break it in to relatively arbitrary fragments and concatenate. like i've done here? cheers.,negative
matrix-org/matrix-react-sdk,karma,2017-05-25T22:15:56Z,don't include src in the test resolve root. don't include src in resolve root for the karma test. as otherwisemodules from react sdk get pulled in instead of npm libraries like'extend' which breaks everything in really subtle ways.,positive
zurb/foundation-sites,jasmine,2014-08-25T22:42:03Z,success when removing `jasmine-jquery` from my local `package.json`.,positive
vvo/selenium-standalone,selenium,2015-06-08T11:38:02Z,i see i think the iedriver download path should default to the selenium one if not specified. do you think you can do a pr?,neutral
vvo/selenium-standalone,selenium,2015-06-22T10:31:20Z,both can you setup runable example or add a failing test so that we can iterate on this. thanks,positive
vvo/selenium-standalone,selenium,2015-06-22T10:32:08Z,> in lib/start.js...is there a reason the buffers need to be flushed?> > // add empty handler to stdout and stderr so the buffers can be flushed>     if (selenium.stdout && selenium.stderr) {>       selenium.stdout.on('data'. noop);>       selenium.stderr.on('data'. noop);>     }does that triggers a bad thing for you?,negative
vvo/selenium-standalone,selenium,2015-06-22T10:33:20Z,the more i think about it the more i thinkg that we should throw/error in the case a selenium server is already running.otherwise this selenium instance would be unusable right?,neutral
vvo/selenium-standalone,selenium,2015-06-22T10:34:55Z,michaelbenin please provide a detailed issue explanation on the issue you are facing. right now i see babel/selenium issues rather than selenium standalone.selenium standalone is only a launcher. if you have selenium/webdriver issues that's another problem.,positive
vvo/selenium-standalone,selenium,2015-06-22T13:49:01Z,strange google chrome is not working. try to get the relevant selenium log maybe.,neutral
vvo/selenium-standalone,selenium,2015-06-22T15:24:17Z,michaelbenin it runs on a mac but not on your machine. so try the regular selenium project wihtout using my module and see if it works. if it does not then it's a selenium issue maybe related to the way google chrome is installed.,neutral
vvo/selenium-standalone,selenium,2015-06-22T21:18:47Z,so you have a running selenium you start another one but then you still use the first instance?,neutral
vvo/selenium-standalone,selenium,2015-06-22T21:26:27Z,> sometimes it crashes when an error occurs and doesn't shut down selenium at all.so this is the real issue then?,negative
vvo/selenium-standalone,selenium,2015-06-22T21:31:20Z,there is no issue with my scenario. it's justified when the other gulp task crashes - it can happen and is not related to this issue. all i am saying is that the selenium child process is still running and not cleaned up which can happen in my scenario.,neutral
vvo/selenium-standalone,selenium,2015-06-24T13:57:14Z,maybe a software upgrade broke selenium?,neutral
vvo/selenium-standalone,selenium,2015-06-24T14:01:36Z,ok. i got it working again. happens always after reboot. i start it:`xvfb-run --server-args="-screen 1. 1366x768x24" selenium-standalone start`then stop it with `ctrl+c`then `killall java` then start it again. and it seems to work... no idea why...,negative
vvo/selenium-standalone,selenium,2015-06-26T06:28:36Z,the unable to connect to selenium comes from lib/check-started.js:17:10 in this repo. could you have a look to see what's wrong?basically this will do a get on the computed url for your selenium instance.it's pretty straightforward to add a simple console.log() to see what's the computed url and see why the get doesn't works.that would help us a lot mbitson thanks,neutral
vvo/selenium-standalone,mocha,2015-06-22T21:25:11Z,no - that gulp task is a mocha test runner. sometimes it crashes when an error occurs and doesn't shut down selenium at all. then. imagine this: i fix the code and want to run the mocha tests again and then it complains that selenium is already running. in that case i have to `kill -9` the selenium process form the console and start the gulp task again.that's why the above patch of mine will help and make it a bit easier for the developer. throwing an error doesn't help and makes it probably worse.,negative
nathanboktae/mocha-phantomjs,mocha,2016-04-05T22:15:18Z,please reopen if you find the root cause to be in `mocha-phantomjs` (and not phantomjs. your ci system. your tests. etc),neutral
nathanboktae/mocha-phantomjs,mocha,2016-04-29T05:22:01Z,i'm unclear on how this relates to `mocha-phantomjs`?,negative
linkedin/dustjs-helpers,jasmine,2013-11-09T00:20:27Z,lgtm. we'll do a fast follow on the travis build failing.  it may have to do with the make jasmine not working. but at least the tests pass in the specrunner.html passes now. which is better than what we have.,neutral
linkedin/dustjs-helpers,jasmine,2013-11-20T01:53:38Z,fix issue with unit tests and add `addtocontext` helper. this pr does a few things:- fixes issue with jasmine- fixes broken unit test for `contextdump`- updates the `coerce` private function (in dust-helpers.js) to be more consistent w/ coercion for various values. there's not a major loss in perf for what we're gaining in coercion support.- adds an addtocontext helper which will capture the body of the helper and add the results to the current context using a name that's passed in as a parameter. it will optionally try to coerce the value to a type passed via a type parameter.,negative
linkedin/dustjs-helpers,jasmine,2013-11-20T03:04:30Z,rragan the case you are talking about could just be solved by throwing dust.onerror when an overwrite is attempted. and give the developer an appropriate message like "you are trying to overwrite the key '{mykey}'"provide seems useful. but doesn't seem for solve many use cases.  a lot of dust users seem to define their own addtocontext helpers as well. so it should prove useful to add it to this repo.,positive
linkedin/dustjs-helpers,jasmine,2013-11-20T04:20:31Z,crap. just typed a long comment and somehow clicked the delete button on it. gaaaah. will type up again...,negative
linkedin/dustjs-helpers,jasmine,2013-11-20T16:55:32Z,prashn64 yes you could diagnose overwriting an existing variable which would make it more robust but there is the inverse case where you add data and the existing code is taking actions dependent on the absence of that name. it just feels to me like the context data introduced at the beginning should be immutable.  that's also why we go out of our way to clean up $idx. $len which are temporarily introduced during a section iteration. if we didn't. their scope would become larger than the section.,neutral
godaddy/javascript,eslint,2017-11-15T00:51:05Z,is that script really the best way to go anyway? it seems that just creating the appropriate `.eslintrc` and running `eslint` directly would work just as well. that has been highly effective in my projects. now that we have easy-to-consume configs. `.eslintrc` can be as simple as:```json{  "root": true.  "extends": "godaddy"}```...and then integrations with ides. etc.. will work without any extra tools.,neutral
rooseveltframework/teddy,istanbul,2017-12-21T17:24:26Z,switch to nyc code coverage tool. the istanbul command line tool has been superseded by their [newer nyc tool](,neutral
marionettejs/backbone.marionette,mocha,2015-03-27T16:40:05Z,at pricematch we use:- mocha and chai for unit testing my views- casperjs with sinonjs for integration testing,neutral
marionettejs/backbone.marionette,coveralls,2015-04-06T20:42:04Z,hahahah - damn you coveralls!!,negative
apache/tinkerpop,standard,2015-11-20T23:32:51Z,this is not how this should be done. there is a bug in the `gremlingroovyscriptengineovergraphtest.java` test. please see how we do it in the. for example. `groovygrouptest.groovy` in `gremlin-groovy-test`. thus. instead of changing `graphprovider`. we need to change `gremlingroovyscriptengineovergraphtest` to use the standard model.,negative
webpack/webpack-dev-middleware,eslint,2017-06-14T04:00:48Z,yeah. i suspect it is eslint loader in that case... i'll close this and maybe poke around at eslint-loader sometime.,negative
nteract/nteract,codecov,2017-01-17T01:33:52Z,this should now be fully covered after the next test + codecov run!,neutral
nteract/nteract,codecov,2017-01-27T23:43:58Z,after codecov finishes this next time i'm going to take note of each section that is not covered then bring in tests. after that. rebase and it's good to go (pending review :wink:).,positive
walmartlabs/eslint-config-walmart,eslint,2017-02-22T00:44:58Z,always allow the use of backticks for strings. i hope this one is an easy sell for everyone.  it's kind of silly when you change something like:```jsconsole.log(`test ${value}`);```to ```console.log(`test 100`);```you have to change the backticks to `"` or eslint complains.it also allows you to easily use `"` in strings instead of escaping them.,positive
cucumber/cucumber-js,jasmine,2013-10-17T09:28:55Z,devpaul thank you very much!so now i've got a file in my step definitions: ./features/step_definitions/after-scenario-hook.js```function aftereachhook() {                                                               this.afterscenario(function (event. callback) {                                          console.log('afterscenario: %s'. event.getpayloaditem('scenario').getname());        callback();                                                                      });                                                                              }                                                                                    module.exports = aftereachhook;                                                      ```and it works perfectly. do you know hot can i read scenario results? so i can check if it failed or was successful.i am exploring the payload and the cucumber.runtime.stepresult with no success.,negative
appium/appium,selenium,2015-02-17T06:54:33Z,hybrid app: dynamic element locator unable to find at running time. hi friends.i am working on android hybrid mobile app. dev side they are using jquery with backbone. in all pages elements are loading dynamically. using uiautomatorviewer i am able to find the elements xpath value.same xpath value written in code.at the time of running time i am getting "org.openqa.selenium.nosuchelementexception: an element could not be located on the page using the given search parameters. (warning: the server did not provide any stacktrace information)command duration or timeout: 222 milliseconds"  please help me....,positive
appium/appium,selenium,2015-02-18T23:25:44Z,luonglne bootstraponline jlipps i got an email reply from the ceo. a very. very. good email reply. they actually did it. they reimplemented uiautomation for windows. osx. linux from ios4 to present. multiple devices controlled from a single host. currently in private-beta. they plan to announce it later on this year.,positive
appium/appium,selenium,2015-02-18T23:54:21Z,cc jonahss,neutral
appium/appium,selenium,2015-02-19T00:08:49Z,is there any way for one of the appium devs to join the private beta? it'd be awesome if appium could support this in time for the launch announcement.,positive
appium/appium,selenium,2015-02-19T00:11:19Z,is libimobiledevice open source?  if it's free. do we know it will remain free?,negative
appium/appium,selenium,2015-02-19T00:11:51Z,it's open source. if their instruments support is in "private beta" it probably won't be free?,positive
appium/appium,selenium,2015-02-19T00:16:05Z,somewhere along the way i got the impression that only parts of the project are open source.  that could be totally wrong tho.,negative
appium/appium,selenium,2015-02-19T00:26:59Z,yeah. i think it was a confabulation.,neutral
appium/appium,selenium,2015-02-19T00:47:05Z,jonahss correct. i was told there will be licensing fees.bootstraponline i asked to be notified of any updates. i suppose saucelabs could formally introduce themselves to the company and request some kind of partnership and/or private-beta admission.,positive
appium/appium,selenium,2015-02-19T00:52:22Z,won't do appium much good. though. except for using the open source bits.,negative
appium/appium,selenium,2015-02-19T00:56:42Z,0x1mason i think it's worth sauce talking with them to find out the details. maybe they'd be willing to work something out.,neutral
appium/appium,selenium,2015-02-19T00:56:59Z,0x1mason i dunno. assuming the fee isn't astronomical i would think buying a couple of license for say 25 linux boxes with 4 devices each might not be too bad? do a little beta with customers. experiment with pricing. if their linux-instrument-client works well i feel like the profits would be higher than the license costs. everyone wants to test on mobile. nobody wants to deal with setting up the infrastructure. take it from me. i spent nearly 2 years trying to get that stuff to work in my office. eventually it did work. but my time would have been better spent just writing tests and sending selenium commands to saucelabs.,negative
appium/appium,selenium,2015-02-19T01:00:17Z,tokunbo it certainly sounds like it could help sauce. just don't see how a licensed product could be worked into appium.  bootstraponline agree that we should definitely find out more.,positive
appium/appium,selenium,2015-02-19T01:03:37Z,0x1mason oh. true. the appium of this github repo won't have linuxtruments(yup. that's what i'm saying now). the users of this repo would have to stick to single devices on a macosx hardware. maybe instructions on how to add the licensed linuxtruments after git cloning would be included.,neutral
appium/appium,selenium,2015-02-27T09:36:16Z,hi everyone.i am new to mobile automation and i had to perform android mobile automation can any of you pls provide the full doc so that i can start.i dint understood how to perform device rooted.can you pls provide me a simple program like opening google.com in android mobile app using selenium automation.i am using appium. selenium. testng.please do the needful.thanks in advance.,neutral
appium/appium,selenium,2015-03-02T10:10:36Z,+1,neutral
appium/appium,selenium,2015-03-02T19:29:47Z,tokunbo we would like to talk to the libimobiledevice developers but have never been able to contact them. could you try connecting us?,neutral
appium/appium,selenium,2015-03-02T19:36:11Z,ankit4aug saikrishna321 i sent an email to the company.  . specifically the tech-support email listed there. i asked if i could get the software. they replied they have it in private beta; which i took for _"we're not going to give it you just yet."_ i did tell them to let me know if there's ever a chance for me to try out the software.jonahss i was never able to contact libimobiledevice people either. i only tried the url that was listed for "instruments". which sent me to mirell.com. which got me that email reply that the software exists and is in use by some limited people somewhere.i don't want to be too troublesome for them. i assume if they were going to give me the software they would have the first time i asked for it. i do plan on asking again after some respectful time has passed. maybe 3 weeks to a month. looking at my original github comment talking about the reply it looks like 12 days have passed since then.... so probably this friday march 6th. or friday march 13th i'll send another email.,negative
appium/appium,selenium,2015-03-02T19:51:41Z,jonahss ah. the libimobiledevice folks are different from the instruments company. i could actually try them now....,neutral
appium/appium,selenium,2015-03-04T20:30:39Z,were you able to figure this out?,neutral
appium/appium,selenium,2015-03-05T14:35:58Z,add support webelement.rect.  be nice to implement this. in uiautomation we get it out of the box with `rect()`.,neutral
appium/appium,selenium,2015-03-09T16:42:16Z,closing. may be reopened if needed.,neutral
appium/appium,selenium,2015-03-09T20:59:47Z,jonahss when searching through webview contexts we use the selenium atoms. so this code isn't touched at all. the issue here is that jeffscaturro-wf is trying to run a native command on a webview element. but these are in separate worlds. the frustrating thing from his perspective is that the element _is_ actually accessible in native mode (uiautomation does give native access to some webview elements). so he should be able to do this. but because uiautomation gives access to these elements. sometimes there are so many (say in the case of a big webpage). that we rule them out from search to make searches take a reasonable amount of time.i think that the only solution here is to provide a capability that turns searching through webviews natively back on. it will make people's tests slower but it will allow them to have native access to certain webview elements.in general this isn't something we want to support. however; theoretically there should be a way to use the atoms to do pretty much anything you'd want to do with an element while in the webview context.,positive
appium/appium,selenium,2015-03-11T16:40:11Z,`org.openqa.selenium.interactions.touch.touchactions` is the old. unsupported selenium implementation of the touch actions. it is unrelated to the commands that run on appium.,neutral
appium/appium,sauce,2014-12-14T07:41:59Z,ranbena no worries about the reply--we've all been crazy busy on this end and we haven't officially started working on this yet.  you can send the app to ericsaucelabs.com.  thanks!,positive
appium/appium,sauce,2015-01-07T16:22:19Z,isaacsaucelabs.com,neutral
jhipster/generator-jhipster,karma,2017-10-20T17:04:20Z,pierrebesson were you able to run the karma tests using chrome headless on linux? if yes. could you please share your karma config. i am trying to fix this issue from a very long time and i am unable to get it work. the log says. starting chrome headless and it just stays there until the browseractivitytimeout is passed and then disconnects without executing any tests. i didnt had this problem on mac. it just works seamlessly on osx. any of your suggestions would make my problem much clearer. thank you.,positive
jhipster/generator-jhipster,karma,2017-10-20T23:55:45Z,pierrebesson this is my config. ```module.exports = function (config) {    config.set({        basepath: 'build/'.        frameworks: ['jasmine'].        plugins: [            require('karma-jasmine').            require('karma-chrome-launcher').        ].        files: ['tests.js'].        autowatch: false.        browsers: ['chromeheadless'].        singlerun: true.        browsernoactivitytimeout: 120000.        urlroot: '/build/'    })}```,neutral
jhipster/generator-jhipster,karma,2017-11-09T14:12:27Z,i have written some docs on how to fix common chrome headless issues. it also has instruction on how to set up phantomjs. most issues are actually environment issues where you need some dependencies like libxss to install chrome.about the wow effect. you should be able to bring it back simply by switching karma from chromeheadless to chrome.then if we decide to switch back to phantomjs i would understand as it impacts a lot of setup.,neutral
jashkenas/underscore,coveralls,2016-03-22T01:12:28Z,should we be getting emails from coveralls. or other ci services?  is there a way to restrict (or. perhaps opt out of) automatic ci emails. while still getting the rest?,neutral
jashkenas/underscore,coveralls,2016-03-23T19:03:40Z,yeah where did the coveralls coverage come in? jridgewell megawac michaelficarra did any of yall turn it on?,neutral
bterlson/eshost,selenium,2018-04-17T16:49:15Z,dependencies: selenium-webdriver (upgrade),neutral
brunch/brunch,mocha,2013-11-14T14:41:08Z,access events hook in config.coffee. following #485. #617 and #727. i've written some tests using `mocha-phantomjs` and would like to run them automatically every time brunch recompiles my files. i have read that a `oncompile` hook is available in the brunch plugin "framework" but i feel that it's overkill to write a plugin to simply run `mocha-phantomjs tests/index.html`. hence my question : are hooks available from `config.coffee` ? thus. one could write its own custom commands. making brunch an agnostic tool which gathers npm tools (which seems to be brunch purpose. isn't it?).,neutral
yahoo/mojito,selenium,2013-10-16T21:07:57Z,add command option to choose selenium host to run test with different browser,neutral
agda/agda-stdlib,standard,2018-09-14T13:58:07Z,i don't think we have anything to put in `data.maybe.properties` at the moment.are `data.maybe.relation.equality.setoid` and `data.maybe.relation.equality.decsetoid`wrappers around `data.maybe.relation.pointwise` instantiating the relation tothe one contained in the `(dec)setoid`?,neutral
agda/agda-stdlib,standard,2018-09-17T16:39:20Z,> i don't think we have anything to put in `data.maybe.properties` at the moment.`just-injective`?> are `data.maybe.relation.equality.setoid` and `data.maybe.relation.equality.decsetoid`> wrappers around `data.maybe.relation.pointwise` instantiating the relation to> the one contained in the `(dec)setoid`?yes.,neutral
agda/agda-stdlib,standard,2018-09-23T15:35:17Z,note that you are not testing the *current* master of the standard library in the master of agda.,neutral
agda/agda-stdlib,standard,2018-09-23T15:42:42Z,did you run the agda test-suite with the current master of the standard library?,neutral
webdriverio/wdio-allure-reporter,mocha,2017-03-07T21:04:45Z,current model of interaction between webdriver.io and allure doesn't give any chance to change anything there.you can either use `allure-mocha-reporter`. however. it doesn't work with parallel tests and requires more manual setup from you.second option will be an attempt to implement the feature here. i planned to have this working via `process.send` calls. somehow like this```jsprocess.send({  event: 'allure:attachment'.  name: 'test attachment'.  content: 'attachment content'});```reporter will be able to catch these events with the following code```jsthis.on('allure:attachment'. (event) => {  allure.getcurrenttest().addattachment(event.name. event.content);});```these two changes will be basically enough to have this working. but this should be more tested. of course.,neutral
webdriverio/wdio-allure-reporter,mocha,2017-03-10T00:27:12Z,annotating allure tests. hi. there seems to be support for annotating tests when using allure-mocha. however. i can't seem to find any documentation on how to do that here. is this possible?,neutral
webdriverio/wdio-allure-reporter,mocha,2017-03-10T09:26:18Z,it is going to be supported very soon. close this as a duplicate of #37,positive
jpuri/react-draft-wysiwyg,uglify,2018-10-10T03:19:54Z,i get the same error...,negative
jpuri/react-draft-wysiwyg,uglify,2018-10-27T21:11:35Z,i also get this error.,negative
jshint/jshint,jshint,2013-10-15T17:07:42Z,mirekh  whats in your .jshintrc file? seems like you have html in there,neutral
jshint/jshint,jshint,2013-10-15T23:11:32Z,the current test is pretty deceitful:``` jsvar stuff = [{'chair': 'horse'}. {'chair': 'donkey'}];for(var index in stuff) {  if(!stuff.hasownproperty(index)) {    continue;  }  alert(stuff[index].chair);}for(var index in stuff) {  if(1) {    alert(stuff[index].chair);  }}```output: one warning. for the first loop's if case. the second case is fine.,positive
jshint/jshint,jshint,2013-10-18T23:47:07Z,added an option to the .jshintrc files allowing them to extend others. adds a simple option to the .jshintrc files. which allows them to extend another file. this can be done once per file. but the chain is followed recursively. merging of the config files is "shallow". in the interest of simplicity.this is useful for the same reason it is useful when writing classes: it really helps keep things dry when you need an entire directory or subset of a project to follow only slightly different rules than the rest of the project.the example i think most people would relate to. is the ability to define different globals in your test directory from the rest of your project. in my case. i have a directory where every file should follow the project's rules. except the limit on line length:```{  "extends": "../.jshintrc".  "maxlen": 0"}```,neutral
jshint/jshint,jshint,2013-10-22T12:54:22Z,spurious 'unclosed string' when strings are properly closed after a newline.. 'two' in the code example below will trigger 'unclosed string' when the string is correctly terminated.```/*jshint multistr:true */var one = 'one';var two = 'two \';console.log(one. two)```no particular reason for the style of 'two' but it did pop up in some code and jshint doesn't handle it well at the moment.,positive
jshint/jshint,jshint,2013-10-28T15:15:46Z,would also be interested if there is support for e4x in jshint now or if there is at least an easy way to exclude js files using e4x from jshint.,neutral
jshint/jshint,jshint,2013-10-29T21:05:51Z,anyone have feedback on this?,neutral
jshint/jshint,jshint,2013-10-30T00:16:30Z,i triage bugs and pull requests sporadically. will get to that this week. promise.,positive
jshint/jshint,jshint,2013-10-30T06:13:13Z,i think it thinks that you're escaping a quote. definitely a bug.,neutral
jshint/jshint,jshint,2013-10-31T06:30:28Z,move all state and warnings from lex.js. ideally. we should be able to merge state.js back into jshint.js,neutral
jshint/jshint,jshint,2013-11-01T14:43:14Z,adding an option to allow for..if. i often use the following idiom. to filter unwanted properties in a for-in loop. or even in a normal for loop. if i feel the iteration needs some kind of filter.```    for (var k in obj) if (obj.hasownproperty(k)) {    }```however. without disabling the `curly` option in jshint. this is not allowed. can a new option be added? i feel this is a legit. clean pattern even though it abuses the rules somewhat (just like the `else if` pattern).thanks --,negative
jshint/jshint,jshint,2013-11-05T20:37:41Z,inconsistent build order of bin/build. we regularly do bin/build and copy the dist/jshint.js after we make changes to our copy. and we notice that the modules are often in different orders each time (like messages at top versus bottom). it would be better if they were in consistent order.this may be a browserify issue. so i could file it there.,neutral
jshint/jshint,jshint,2013-11-06T10:44:34Z,you miss the point. it's not about taking time to copy past files. it's about making sure that i always have the most possible warnings about all that could be wrong with my program (excepted the few cases that i specifically selected). instead of making a hudge list of all that i want to be checked. possibly forgeting some. and not updating it if an option is added in jshint.,neutral
jshint/jshint,jshint,2013-11-06T12:58:07Z,i really would like to see this as well.,neutral
jshint/jshint,jshint,2013-11-06T22:47:54Z,extract js from html files. this is a feature proposal. i'm well aware that inlining javascript into html files is a bad practice in so many cases. but there is a few defendable usages.at my work. we develop widgets mainly self-contained into a single html file (that's what we did since day one and it works great). in order to lint the js contained into those files. i had to fork node-jslint in order to extract the source code from the html. as we now want to migrate to jshint. i did the same. and now proposing my changes to the community. as i am sure that it can be useful to someone else.as this is my first work on jshint. feel free to comment my code and ask me to reshape it if needed.edit: i didn't see the ticket #510 before pull requesting. i'm sorry. but i stay on my position that this feature would be better integrated to jshint cli. in order to be compatible with all ide / text editor jshint plugins. this is also why i don't want to have to pipe the output of a command to jshint in order to validate html files.,negative
jshint/jshint,jshint,2013-11-07T19:06:19Z,create hook for file info as lint method is being run. when running a batch process on many files (grunt. for example). it can be helpful to have feedback as the lint process is run on each individual file. rather than:``` bashrunning "jshint" (jshint) task# long pause of no feedback given to user>> 159 files lint free```it would be nice to be able to have a debug or verbose option that would output something more like the following:``` bashrunning "jshint" (jshint) tasklinting framework.js...oklinting main.js...oklinting utilities.js...ok# etc.>> 159 files lint free```,neutral
jshint/jshint,jshint,2013-11-08T02:51:11Z,totally agree. i would love to see this come to fruition. either as a jshint-distributed ".jshintrc" file. or some sort of crazy option like `hardcore: true`.,positive
jshint/jshint,jshint,2013-11-11T06:54:06Z,i recently installed jshint and i'll echo that i found this behaviour to be confusing when i instinctively tried using `jshint`. and it wasn't helpful that `jshint --help` doesn't declare how paths are specified and the presence of `--extra-ext` makes me think `jshint` should work.i didn't even think of using `jshint .` till i read this bug. i ended up using `jshint *.js`.,negative
jshint/jshint,jshint,2013-11-11T07:37:03Z,add jshint option to disable "missing '()' invoking a constructor. (w058)". i'd like so see a jslint option to turn off:`missing '()' invoking a constructor. (w058)`i'm not interested in hearing warnings when `new foo` is used in my code.- it's perfectly valid ecmascript.- the `()` is redundant when `new` is already present.- no one is going to try turning that into `new foo bar` like the issue with `if ( foo ) bar();` being incorrectly turned into `if ( foo ) bar(); baz();`.- worrying about someone forgetting `new` and writing `foo` is pointless since `foo()` is also a bug in the code so requiring `()` won't help anyways.- `new foo` is not bad coding style in this local project. in fact the code in this project quite consistently omits `()` on constructors with no args so jshint only omits warnings for code that doesn't follow the local coding style.i shouldn't have to write `/* jshint -w058 */` at the start of every file when i have a perfectly good .jshintrc file that i could put a named jshint option into.,negative
riot/riot,sauce,2016-02-09T07:35:36Z,btw saucelabs seems to fail always on any pull request.. this is also something we need to fix,negative
riot/riot,sauce,2016-02-09T20:21:43Z,thanks amarcruz i don't get why the saucelabs tests fail always!,negative
riot/riot,karma,2015-12-19T18:03:53Z,gianlucaguarini i will check. looks like a problem in the sourcelabs section of the karma.conf,neutral
riot/riot,karma,2015-12-19T18:31:49Z,saucelabs fix. applied karma-runner/karma-sauce-launcher#73 to karma.conf.jsincluded g++ toolchain in .travis.yml,neutral
riot/riot,karma,2015-12-19T18:39:25Z,please ignore pr. this is for the dev branch.,positive
angular/angular.js,standard,2016-07-18T20:14:29Z,looks like this is a very uncommon request - probably because the pattern is possible. even though inconvenient.,positive
angular/angular.js,sauce,2014-03-15T06:21:33Z,vojtajina do we want this pr?3lux caitp we have browserstack config for some browsers because we were actively exploring possibility to run tests on browserstack. we hit some issues. so that's on hold for now and we use saucelabs instead. it's my understanding that saucelabs does have mobile devices or emulators available for us. but i haven't tested that personally. and regarding selenium - saucelabs offers all of the browsers via webdriver api. which is often called selenium for historical reasons. we don't use the selenium assertion library for any tests. webdriver (part of the selenium project now) is a low level communication protocol that allows us to remotely control browsers),positive
angular/angular.js,karma,2014-01-29T18:05:30Z,recommend pre-compiling external templates. quite a few folks struggle with how to test directives with external templates. karma-ng-html2js-preprocessor provides an easy solution but the issues is not raised in the docs.,neutral
angular/angular.js,karma,2014-01-29T18:07:34Z,`npm install` to `npm install karma`,neutral
angular/angular.js,karma,2014-01-29T19:18:04Z,hi. mary. i'm donald duck. cla submitted electronically a moment ago.,neutral
angular/angular.js,karma,2014-01-29T21:14:32Z,cla signature verified! thank you!someone from the team will now triage your pr and it will be processed based on the determined priority (doc updates and fixes with tests are prioritized over other changes).,positive
angular/angular.js,karma,2014-01-30T06:18:00Z,the tutorial is referring to the phonecat demo. which has karma as a dev-dependency. so this change isn't really necessary (although it might be good to clarify it),neutral
angular/angular.js,karma,2014-02-06T05:34:51Z,add missing npm package name `karma`. the actual name of the package that is needed to be installed is missing. i added it by going to the webpage of the linked package. it instructs to run `npm install -g karma` which i've added to the document.,neutral
angular/angular.js,karma,2014-02-06T11:15:32Z,completed karma install instructions for linux,neutral
angular/angular.js,karma,2014-02-07T15:16:52Z,docs: fix karma install command in tutorial. it was `npm install`. changed it to `npm install karma`,neutral
angular/angular.js,karma,2014-02-07T19:11:14Z,because the `package.json` contains `karma` as a dependency. `npm install` is correct.,neutral
angular/angular.js,karma,2014-02-07T19:59:39Z,thanks. i didn't know that. should we add this note to the doc? some people (like me. with no experience in npm) may think it's a typo and only install karma but not the plugins using `npm install karma`would a note along the lines of this be good?"typing `npm install` installs karma and its plugins since they are listed in `package.json` file.",neutral
angular/angular.js,karma,2014-02-08T10:19:24Z,update index.ngdoc. fix karma npm install command,neutral
angular/angular.js,karma,2014-02-08T19:10:23Z,signed the cla,neutral
angular/angular.js,karma,2014-02-09T11:50:14Z,done,neutral
dc-js/dc.js,jasmine,2014-08-22T17:12:10Z,this is near the top of my list when i get back in september. mtraynham's fix seems like it should work but i haven't looked closely. more test cases and examples (in the form of fiddles or jasmine test cases) would be very welcome!,positive
istanbuljs/istanbuljs,istanbul,2017-12-28T08:24:12Z,is it possible to control the level of the instrumentation?. hi.i'm using 'istanbul-lib-instrument' to create an instrumentor for static instrumentation and it causes the original js to become huge - from 14mb to ~160mb.since i don't care about statement coverage. i wonder if there's a way to configure the instrumentor to generate code for methods and branches but not to generate statements related code?i think that it may reduce the size drastically.i'll appreciate your help.cheers.nadav,neutral
istanbuljs/istanbuljs,istanbul,2017-12-28T08:24:53Z,btw - if not. i don't mind contributing this feature. but i'll need some high level guidance.,negative
istanbuljs/istanbuljs,istanbul,2018-01-02T05:03:05Z,ping,neutral
DefinitelyTyped/DefinitelyTyped,standard,2017-01-21T20:41:21Z,add a d.ts for package.json. that way. if someone imports it. they can access the known-standard npm entries.,neutral
DefinitelyTyped/DefinitelyTyped,standard,2017-01-23T14:42:24Z,aluanhaddad. what do you think if i enforce in a new separate pr which makes `definitelytyped/angular` compliant to `tslint` settings of `definitelytyped` project? the folder is not under `tslint` currently. maybe it's worth to standardize that?thorn0. aluanhaddad. so. what do we decide and in which direction should i move? if i got right what you said - you suggest making a pr to typescript definitions instead of merging this pr to definitelytyped/angular. right?,negative
DefinitelyTyped/DefinitelyTyped,standard,2017-01-24T07:42:04Z,what is it? could you describe more clearly?,neutral
DefinitelyTyped/DefinitelyTyped,standard,2017-01-24T13:47:59Z,basically the schema for `package.json`.  that way when i `const manifest = require("path-to-package.json")`. i get hinting.,neutral
DefinitelyTyped/DefinitelyTyped,standard,2017-01-26T14:21:38Z,after sleeping on it my personal opinions are as follows:* good practice would involve using yarn or npm locks. so you wouldn't be getting a surprise unless you upgraded locally first. * making state readonly is how react is intended to be used. the documentation and examples confirm this. * the workflow where you don't want to use setstate is within your code base and within your own rights. you are correct that react provides forceupdate. but it's use is intended for causing a render when you are outside of the intended use case. thus. if you don't want to use state as intended that's fine. but at that point you don't need to use the instance variable state. in fact you can just use regular private variables. * yes this project is depended on by a lot of people. and yet thus far these are the only two complaints thus far making me think this is not a wide spread issue. further the issue raised about the global function can just be rewritten to take the generic differently (see linked typescript issue)given the above thoughts as well as the work arounds for non-standard react apps. i think readonly is correct and the only needed change for completeness is to update the life cycle methods to match.,neutral
tombatossals/angular-leaflet-directive,karma,2014-09-04T17:25:04Z,if it works. please upvote my answer too.  i hate to beg for karma. but it's soo hard to get on stack :+1:,negative
