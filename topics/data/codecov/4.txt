["hi rychkog  could you help me understand what is the problem with codecov?is ti want me to write tests for the `loadnextlevel`. where should i add them.i haven't seend any tests for the other emitters.can you please help?thanks.tmaster", '- [ ] yuhanlu please add tests for missing lines. (click details for codecov/patch and see diff tab)', 'also. look at the codecov diff to make sure that you add test for all the cases.', "hmm ... it still doesn't run codecov.", "arvind actually it does not.  i'm just trying randomly to see what causes codecov to break...", 'domoritz  fyi. i rebase and codecov is all good right now awesome!!!!', 'sometimes i hate codecov. i fix bugs. i add tests. coverage goes down. epic fail.', "in my experience. codecov only reports on a branch once. push another commit to it. or force push. and you get no update (which is kinda good. i'd hate to have a long thread of posts from codecov).", 'i can sort this out', "codecov is complaining that the coverage percentage is decreasing. which is true. but that's because there are fewer lines of code.  i might look into removing the unused lines. but it seems separate from this pr.", "...is there a reason test coverage dropped so much. or is `codecov.io` just being flaky?(if it's just `codecov.io`. lgtm.)", 'once codecov updates again. this is ready to go. i need to do some thinking on how to do duplicate notebook.', "hopefully this didn't break codecov... please report back codecov. i miss you.", 'add initial comm test suite. now everything in `src/notebook` is analyzed by codecov so we have a more accurate coverage value.', '.', "amusingly. we don't actually use this code anywhere - it's part of the setup for the widgets.", 'omit debug files and other useless stuff from codecov. these files are used for debugging purposes and/or leveraged for offlinework and shouldn\'t count towards overall code coverage. these files arefrequently at the top of the "uncovered suggestions" report fromcodecov. so let\'s just ignore them since there\'s very little value inadding coverage to them.', 'these break all the time because they only get "tested" by deploying docs. we should write tests for them and consider them production code.-1 on this change.', 'dcramer you referring to just the apidocs.py file? i have a few others included in here too.', 'i\'m referring to apidocs but the same applies for everything. code is testable. there\'s no reason to pretend our coverage is higher simply because we haven\'t written tests for "less used code".', "it's excluding migrations already. the debugger stuff isn't used in any capacity. and then there are debug forms for previewing email.i was more hoping to make the codecov report a bit more useful since these are listed as top offenders and nobody is going to add tests to them since the return is very low.i don't mind excluding apidocs.py. but the debug ones are a hard sell for me. :/", "none of those are good reasons. migrations may or may not be able to be counted at this stage. i'd prefer they be.all code is considered production here. it should have tests. coverage should not lie about things just to make us feel better or to improve tools like codecov.", 'okie dokie.']