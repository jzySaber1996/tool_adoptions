["add codecov. fixes #1577 (hopefully) from what i'm reading coveralls no longer works with the public token for some reason. codeclimate. codeship and now coveralls requires full read/write access to all of your public/private repos + the org ones = which is insane imo.codecov on the other hand requires minimal set of permissions for public projects + it seems that they support reporting via the github status api.", "> thanks for the pr. i'll be working on codecov/support#12 today. i look forward to this merge!i've deployed this fix. thank you!", "thanks. stevepeak the github's status api seems to be working :+1:", 'adds codecov. ### proposed changes in this pull requestadds code coverage#### checklist* [x] new tests have been added* [x] `npm test` passes successfully* [x] documentation has been updatedamir20 to review', "yeahhh.... this is using codecov which spams like crazy. i don't think that it's worth it.", 'chore(ci): switch from coveralls to codecov', 'you forgot the readme badge ;)', 'sweet mother of jebus. it works! thanks for the powershell help felixfbecker !', 'what about coverage? we should switch to codecov for v3 too', 'looks like  can help us here. will see if i can set this up!', 'add codecov reporting. this fixes #297', 'cb-10888 enable coverage reports collection via codecov', 'add coverage through codecov', "i'm looking into the `codecov` failure here.", "well. it's not wip (at least looks like everything is done). but need to integrate (by repo owner) at travis and codecov", 'feature/jest. adapted tests for jestremoved useless dev depsadded more badges to readmeadded integration for travis/codecov (still need integration from repo owner)tommikaikkonen nathanbwaters', 'travis was activated for this repo.', 'yeah  great work plandem', "tiii now i'm not sure about master branch and **release** in terms of git flow. e.g. i would like to merge current develop into the master. but it's not a git flow way.", 'hmmm...sounds like still almost git flow :) in git flow release is not instant action. but a process with start/finish with tagging releases - almost like we have right now. anyway i would like to hear other people. we need to clarify process.p.s.: as i understand git-flow was used previously by tommikaikkonen.', 'yeah sorry. it is almost git-flow was what i meant to say ;)', "great work plandem!my team uses git-flow at work. so i used a similar but less strict branching model. no release branches. just merged `develop` to `master` when it was ready for a release. then release to npm from `master`. i don't feel it's necessary to keep a strict git-flow branching model. you guys can decide what to do with that moving forward :)", "codeconv requires token. but in case of github it doesn't. so locally it will fail to upload. have no idea how to fix it without token - create another command at package.json for local testing? e.g.: **test-ci** (like now). **test** (run tests without codecov)", "wouldn't it be enough to add ``&& codecov`` to the test section in .travis.yml?", 'off-topic: does codecov not add a pr check?', 'tiii i make codecov to check only **master**. see .codecov.yml', 'tiii are we talking about codecoverage or tests? tests run for any branch/pr. and after that codecoverage. but only for master. so in that case codecoverage statistic is not accurate. because of differences between master and branch. is it critical?', "barrythepenguin. as always you're awesome! i'm gonna tackle some of the other mr's first and then get back to this one as this one is more of a chore.", 'useless codecov comment. anybody knows how to turn off commenting on pull requests?', 'add codecoverage and cleanup. | q                 | a| ----------------- | ---| bug fix?          | no| breaking change?  | no| new feature?      | no| deprecations?     | no| spec compliancy?  | no| tests added?      | no| docs updated?     | no| fixed tickets     | no| license           | mit', 'use codecov badge', 'implementing coverage with:- `grunt-qunit-istanbul`- `isparta`- `codecov`', "not a fan of codecov change since it's pretty magical to assume it exists and it should get cached", "> not a fan of codecov change since it's pretty magical to assume it exists and it should get cachedtrivial to add back. my point was that it's already pre-installed. so it doesn't need to be cached. and the `pip install` was just a noop."]