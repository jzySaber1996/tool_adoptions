['i was looking at codecov. investigating if we can move to that. it is more actively worked on and it is part of the github marketplace.', "chore: change coverage service (coverall to codecov).   the reason of change mentioned on #927  this patch:    - add codecov as devdep. as it's not pre-installed by travis.    - add codecov on travis's script section.    - change badge link (coverall to codecov). and point the image to chai account on codecov.  fix #927", 'just reminder. since the badge link is pointing to chai account on codecov. kindly complete the sign-up process on codecov.', "i just did it. we're good to merge", 'good work brutalcrozt', 'feat(build seq) codecov. use bash instead of npm module.. fix #1077', "hey brutalcrozt thanks for the pr.i feel _really_ uncomfortable downloading and executing aribtrary bash on my local machine. and on ci (where we have secret tokens like account passwords). the 300k is only downloaded for developers/ci (where it is also heavily cached). so i think it's adequete to keep it. i'll close this pr. you did the right thing in the original pr. and changing to running arbitrary bash would be a bad move imo.", "> how come running `codecov` worksi believe travis have `./node_modules/.bin` in the `path`.> ...adding the dependency in the build config...we could make travis install codecov independantly. but i would like to draw complexity _out_ of our travis scripts and into tooling that can work agnostic of ci - especially as i'd like to add appveyor into our toolchain for testing ie without saucelabs. so package.json feels right to me. other should comment though. we should reach a consensus.", "i like the self-documenting nature of keeping the dev dependency in `package.json`. i'd like to keep it as-is.", 'add new built tool for js-csp. this pr is to add babel and webpack support for building the lib. also. updating travis build with codecov and mocha. the next plan is to update the lib with eslint.', "azz didn't you disable codecov comments?", 'the codecov results seems to be bad becuase it is using a dialect that does not support ctes? i am not sure how to check that.', "what do you mean? appveyor runs the tests for mssql. travis for the other dialects. both report their coverage to codecov. seems to me like travis didn't run so coverage is at ~20%. try to amend the last commit and force push to trigger a build", "hello codecov. since we heavily rely on ci it's interesting to know what the test coverage is.", "travis: fix docs and remove unnecessary script. it seems we don't need the `after_success` script for codecov. to work.", 'martijnrusschen. the codecov ci results always seem to get stuck in pending. do you know what might be going on?', 'i pushed a change for the codecov hook in travis.yml. not sure if it fixes the issue. but this looks to be the recommended way to do this.', 'hooray. codecov worked now!', 'move codecov.io to dev dependencies', 'switch to codecov.io for coverage reporting. this fixes the broken coverage reporting.', 'cool. if travis-ci is happy. all we are happy. thanks bartdubois . ignore codecov (still under testing)', 'cb-10888 enable coverage reports collection via codecov', 'neat! messing around with this on master to see if i can get the reports to work.', "i got codecov working. i'll be posting a pr when i get back home.", 'switch to codecov. ???', 'them angry robot legs.', "hmmm. the coverage diff only shows the introduction of the new class. i wonder if codecov doesn't know how to deal with jsx.", 'not sure why this fails on project coverage with codecov.', "i'm going to give you a pass on the codecov and fully expect us to run tests against the high level notebook component soon. :smile:", "> what an angry looking chart.i know. right!?  i haven't seen the chart until now.  new feature of codecov?", 'create a codecov yaml for settings. while i was at it. turned off the codecov sunburst', 'awesome. thank you. i just added this same yaml to the whole org.']