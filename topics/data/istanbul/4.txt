['robinhouston good find! thanks. in fact. on master we can see```      if (opts.discarddescriptor) {        return fs.close(fd. function _discardcallback(err) {      ...     }      /* istanbul ignore else */      if (opts.detachdescriptor) {        return cb(null. name. fd. _preparetmpfileremovecallback(name. -1. opts));     }```something must have gone wrong with the latest merges/rebases...', "how to extract coverage info from phantomjs run. big fan of coffee-coverage. thanks. have a backbone spa grunt-mocha/grunt-mocha-phantomjs project that has an html page including all tests via script tag for the browserify-coffee-coverage'd tests. bundle looks good but can't wrap my head around how to get the mocha run's coverage info out of the page. alternative: browserify-istanbul writes this to a window.__coverage__ variable and expects a web hook to write the contents out to a file for later istanbul report. this cannot generate an html coverage report because the coverage info references coffee files. but they don't match the transpiled javascript line numbers (other reports work ok). i would love a more coffeescripty solution and have a little time to spend on it... any pointers?", "thanks for all the info. steve.  re: 'it is amazing how many kludgy. inelegant solutions there are out there.'. yeah...  i feel like all of this should be much. much easier to make work.", 'start using prepublishing to fix dependencies. currently pretty much everything (except mocha and istanbul) have to be dependencies. not devdependencies. because we use a lot of them during the build process. by farming out a few things to prepublish. we can move a _lot_ of dependencies.', 'jsimonweb ready for review. i suspect the coverage decrease is due to the switch from istanbul to nyc.', 'bashirsouid we would need to dig into the transpiled code that gets generated by:```js    /* istanbul ignore next */    input()    pluginoptions: pluginoptions;```depending on what the expanded code looks like. we might be able to tweak the instrumenter slightly to give coverage; does the ignore directive work as expected?', 'j-sek sorry for the very slow feedback!i echo isaacs\' feedback:* _regarding motion_. perhaps we could just disable some of the transitions taking place. e.g.. sliding in the filename when you open a report.* _regarding missing file listing when sorting_. this just seems like a bug we\'d need to address.* _regarding inspirational message about % of coverage_. i like the encouragement it provides. but to isaacs\' point we shouldn\'t guarantee your code is stable because you have great coverage.regarding emilsedgh\'s feedback:i like the widget that provides feedback about overall coverage. but it does take up a lot of vertical space. maybe we could simply flatten it a bit (make it a rectangle sitting on top of the file file listing?).## what next?* we should definitely make sure things work well on mobile before landing.* i\'m a little worried about how much bulk this might add to the `istanbul-report` module:  * what\'s the total footprint size of this new design with it\'s javascript and css; and what\'s the licensing of the libraries you\'re using. e.g.. the pie-chart. we should make sure this is mit or isc or some equivalent.  * worst case scenario. perhaps we could make it so this new "modern html" report can be installed as a dependency.  * regardless of whether we bundle this new report (or provide it as an optional installation. with documentation in istanbul) i think we should introduce the report with a new name. perhaps something like `html-modern` or `html-single-page`? this would allow people to start playing with the new html report while we hammer out any additional bugs.', "athomann thank you for the reproduction. i'm triaging a bunch of other tickets right now. but this will be near the top of the list of the next bug fixes i work on (unless you get bored and decide to start poking through the `istanbuljs` repo).", "athomann something immediately jumps out at me. jest itself already uses `babel-plugin-istanbul` to facilitate test coverage. rather than configuring `babel-plugin-istanbul` in your `.babelrc`. you should just be using jest's coverage feature. i imagine the double instrumentation might be the root of the error.", 'lazywithclass the instrumenter is definitely a good place to start; to get a feel for how everything works together i recommend looking at `nyc/index.js`. where you can see many of the istanbul libraries working in conjunction to facilitate instrumentation and reporting.']