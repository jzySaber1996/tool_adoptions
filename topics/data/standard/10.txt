['agree with jimmywarting  recall the history of .avi. .flv. .... and the iso standard .mp4; gopher and the w3c/ietf standard http...', 'hey jmuzsik it is still failing. just in case you did not notice. you can run `npm test` or `npm run standard` and you will see all the issues locally.', 'goliatone you might try installing  `libjpeg-turbo-dev`. `cairo-dev`. `pango` via apk. in addition to the standard build stuff you already have. if the install still craps out. see which header file is missing and search for it -- usually that will land you on a package contents page for apk that you can use to figure out what package has that file and the dependency graph for that package.hope this helps.', "> jmeas are you still running into that error with this?haven't tried again tbqh. i can try tonight. but it does sound like this works for a bunch of other folks. i was trying to use this with webpack's watch option. which seems to continue to be an incompatible way to go about things. even with this pr (which is fine. i think).if this gets in. and it continues to only work with gulp watch. then i'd recommend adding a new section to the readme about it. it should explain why using webpack's `watch` option does not play well with streams. and demonstrate how using gulp's watch works (even tho' it looks to be pretty standard gulp watch usage. it's probably good to be explicit about what to do).what do ya think?", 'sent an email to brady gaster and waiting for his response. will update the issue once i get more details', 'task completed', '`labelel_` is a reference to the dom element itself. so. you could just change it via standard dom api.you can listen to the `ratechange` event to know when things have changed and then set the textcontent on the labelel_ based on the playback rate.the other option is to extend the playback rate menu and make the changes so `speed` is a default thing.hope that helps.', "hi nicola thanks for the review!i asked about how to do this on gitter and in the issues since september.  since i didnt get any feedback i tried to make a patch based on my understanding of the code and what i have learnt in nodejs.i'd be happy to refactor based on best practice recommendations.regarding variables in block scope. is that against our coding standards?  my normal coding principle is to declare variables close to where they are used.  as i understand it they are hoisted to the top of the function in js.  i could do it another way.if no options are passed it is the same as sending in undefined in the positional parameters. i think?re: `var stat = ret.stream` not sounding right. i agree!  but that's how the code was. overloading a positional parameter for multiple purpose.  with my change it is now easier to refactor.advice welcome!", "martinheidegger umm. i still don't see any standard errors.", 'fanatid maybe find out what the padding standard is called. and use that with the name.', "sgerace yes. that's a fairly standard way of doing the latest from each.  keep in mind though of course that inside the `behaviorsubject`. there is always a constant `value` property that you can obtain.also. are you sure you want to dispose the click handler?  if so. that's pretty easy. eg. using `.take(1)` which should then call `oncompleted` and thus call `dispose()` which removes the event handler.:``` jsvar oneclick = rx.observable.fromevent(button. 'click').take(1);```", 'standard 10', 'i posted on stack overflow months ago. and ive asked on multiple other sites. and nobody has offered any response. i know it doesnt fit the standard issue template. because its not a bug or a feature request. but im at the end of my rope here... please can you at least let me know if this is even possible?', "in my opinion it's better to rewrite the code to the standard `require` syntax (or better to `import()`). the changes needed are only minimal compared to the changes needed to support this.i won't implement it and don't think it should be part of webpack. but your can write a custom plugin to handle this if you want to.", 'samccone i also agree a standard format like har would be great.', "i think for me. this is about making configuration as user friendly and declarative as possible. and providing a simple pattern to accomplish what i think must be a pretty common use case.  those of us with plenty of experience will have no trouble coming up with a multiple workable ways to make our configurations dynamic. but some are bound not to work as intended. and it would be nice to give some help to developers who may need it so they aren't spinning their wheels (and bloating their list of dependencies) looking for complicated solutions to simple problems.michael-ciniawsky's suggestion is really nice and clean. and being able to troubleshoot misbehaving plugins is a decent argument for not allowing falsy values.  i would suggest that maybe a pattern along those lines be used in some common examples. but any benefits gained by not allowing non-plugin values in the array are lost when using such a pattern.i'll throw out another idea:  add a symbol as sentinel value to represent no-op behavior instead of undefined or null.  something like `webpack.none = symbol('none');`  then you don't have to worry about it accidentally being returned from a malfunctioning plugin.  such a value could be used in several other places as well.  sure. you can do the same thing any number of other ways. but the more you can standardize patterns for using webpack. the less time developers new to webpack will spend trying to invent their own solutions. a portion of which you'll end up trying to help troubleshoot.", 'linter is failing using the standard github inline editor.  leaving this as is for the time being .', "add custom targeting key-vals without using `pbjs.biddersettings`?. ## type of issuequestion## descriptionwe'd like to add custom key/val pairs onto the gam/dfp request. but it appears that the only way to do this is use `pbjs.biddersettings.standard.adservertargeting` which prevents any of the standard `hb_` ones being added. is there a way to keep those and add on any new ones we want on there?we'll be coming to use deals soon. so if we start to manage all of the targeting with `pbjs.biddersettings`. will any bidders' deal ids also not be added automatically. so we'd have to start getting those manually and adding them ourselves? <- i cannot initially see how this would be done. as `pbjs.biddersettings` seems to not work after the auction has started. so custom targeting needs to be set before any responses are received.", "thanks for confirming that is the case. we'd definitely benefit from having an `adservertargetingadditions` feature so will open a pr if we build it. cc: samwhitecoull", "> je peux me tromper. mais je ne vois aucune raison de passer a ce composant des informations qui ne lui sont pas necessaires. qu'en pensez-vous ?en effet. je pense meme que quelque chose de plus neutre comme `text` ou `letters` serait mieux qu'`initials`. on pourrait tres bien ne passer qu'une seule lettre (pour une entreprise par exemple).> c'est pas le parent qui fournit la box dans laquelle doit s'inscrire l'avatar ?je dirais que non. d'une part on va devoir adapter la taille du texte a celui de la box. d'autre part ca permet de definir un jeu de tailles standards au sein de cozy-ui. plutot que de laisser chaque projet faire sa variante maison. un truc comme `size={small|medium\\large}` me semble tres bien.", "that doesn't actually work due to cross-language compatibility and init headers.an ip is expected. we could resolve the hostname for you... but you might as well just give us an ip.however. tcurl should support this.", 'updates for eslint and standard. this pull request:- updates eslint- updates lint-staged- updates standard- lints against standard', "i'm using the standard mqtt client(mqtt.js) and no significant changes in memory", "thanks for the detailed investigation!the way it should work is when the tarball url has a standard form `<registry>/<package-name>/-...` then it is not saved in the shrinkwrap file (i mean the tarball url).i'll try to investigate it tonight.", 'wip: (re)enable coverage & newest standard. this turns on coverage again (only now all of the tests pass. with one small tweak). and also cleans up the code to pass the latest major of tap.also. and this is unrelated. it fixes the fact that a test was trying to set the prefix for a global install test and not doing so successfully.not ready to land just yet. and mostly exists so that i can see how it looks in appveyor.', "this has been merged into `iarna/windows-wip`. so i'm closing this.", "given that:- both windows and unix provide standard. console-level tools that support manipulating where `stdout` and `stderr` get routed. and- the current programmatic api for npm is unsupported for use outside of npm's own code basethis isn't something that the team is going to change. having command-level output go to `stdout` and diagnostic output go to `stderr` is a pretty hard convention of npm. and when used as a child process. there are better ways to control where the two kinds of output are sent. thanks for your time!", 'sorry only utf8 is supported by now - utf8 has become the standard for web and it would be a lot of work to maintain other encondings.', "quoting seems to have improved it other than the emoticon. what's the standard for issue reporting? just upload a txt file?", 'updates for eslint and standard. this pull request:- updates eslint- updates standard- updates nyc- updates lint-staged- lints against standard', "i'll consider digging in deeper if others reply in the future.in general. standard practices for scaling/load balancing requests to your arcgis server instance are your best bet to optimize performance for `export` operation responses.", 'default email notifs scare new users. i introduced riot to a friend the other day with the standard failure modes.  - failed to find riot on the ios app store (arguably not our fault but worth mentioning) - registered without issue - tried to find me on riot - searched by email. phone number. user id but nothing came up even after they joined hq (under my instruction) - so i ended up searching for their user id and found them instantly from my phone. started a 1:1 - they then received a daily email recapping matrix hq and had zero idea what was going on and deleted the app.', "what's the rationale for the default settings' including the activity summary?i guess it keeps riot.im front of mind for users who are just dabbling with the platform. however an activity summary for matrix hq is pretty full on for users who are interested in _using_ the platform rather than in the _development_ of the platform.is there a happy medium here?", "what about pretty standard feature -- `enter` for newline. `ctrl-enter` for send?and another hotkey-related request. i's really useful to close all chats to keep all messages unread. currently it can be done with `home` button in the bottom of left menu.will it be nice to have hotkey for this? for example telegram uses `esc` for this -- very convenient and expectable.", 'include laws for functor. applicative. monad. currently. the modules for functor. applicative and monad include records for the raw types similar to the algebraic structures. but do not have corresponding types including the laws. i think this could be a nice issue for someone like myself who knows the laws. and wants to take a gentle first step into contributing to the standard library.from what i can tell this would involve:  - [ ] creating a `category.structures` module for definitions of `isfunctor`. `isapplicative` and `ismonad`  - [ ] creating the extended records which include proof the laws hold', 'gallais any comments / gotchas i should know about with this?', "> any comments / gotchas i should know about with this?the right notion of equality to use in these is a hard question. e.g. you'll probably needfunctional extensionality to prove the laws for `state` if you pick `propositionalequality`as your notion of equality.", 'i think this is a good issue. i was wondering the same thing too.', 'i guess `pointwise` could be made heterogeneous.', 'if this helps people i am all for it. i would avoid "error" or "mistake" because they imply blame. "retry" or "try again" would be better.it would be interesting to know what people put as the heaing in the summary box because there is no standard. i have seen "there is a problem" "there is a problem with the form". "this page has errors". and "there was a problem submitting the form". i am sure there are others.tax credits uses "there is a problem" and it tested well with people. i would not want to mention "submitting" and "form" because it\'s jargon.', 'the build failed because i added a "prismjs-module-tests.ts" file alongside the standard "prismjs-tests.ts". my thought was that this library needs to support both global var and module import scenarios. how should i go about that. or should i just pick one scenario to test in "prismjs-tests.ts"?', "happy to hear that you want to help :-)there is no collaboration board anywhere. i'll see if i can set something up on slack. we set the coding standard a while back. it follows the javascript standard coding style. there must be something in the readme about that. the class oriented approach is due to the new es6 features that helped me get rid of many dependencies like stamps. q and so on. composition over inheritance is the prefered way. the basic code structure is done i guess. at least for the client. i think the server needs some attention.what operating system are you using? i wasn't able to use the serialport module on linux. could be exactly the same error."]