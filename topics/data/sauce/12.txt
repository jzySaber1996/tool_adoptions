['i think ramda tries to help you write better code by minimising that tge functions themself fail. there is this kind of _monomorphic_(?) approach where a function is super clear with what it expects and what it returns. often one or a couple of simple value in and out. that makes them reliable and makes it easy for you to find your errors. "crap in is crap out" and you can easily guard for that as davidchambers said before.you should not feel limited by the api as well. just use compose your own control flow sauce around the ramda. such as promises. catch. error handling etc. for me. ramda is a library to write quality logic and code. it\'s not environment biased "making it easy for you to code **in the browser**". `throw new error` is therefor definitely too environment specific.', "k20human just edit css files. the problem in 'display: block'. delete it or replace to another style. besauce 'transitions' doesnt work with display: block in that case. it helps for me. but after that i tryed swiper and its awesome", 'forbesjo was attempting to switch to grunt-sauce(something). which bootstrap uses and seems to be having better luck with. but joe still ran into a bunch of random browser errors. joe can you make a pr with however far you got. incase someone else wants to try to get farther?', 'pull requests are accepted. :)as a workaround. you could manually download sauce connect for your platform and unzip it into `node_modules/sauce-connect-launcher/sc/`.', 'i added quick and dirty proxy support but fail to execute it on my linux -.- seems as if sc for linux is 64 bit?additionally it works perfectly for an http.request. but i get issues cocerning the https.request used in sauce-connect-launcher.jsis there a specific reason for the https request? ps: as its working and ok for me i make a pull request of course ;)', 'sorry but fixing one thing opens 3 others. running sauceconnect on one of our servers instead of using sauce-connect-launcher.', "hm. not 100% on this. its somewhat strange to be sending various 'open' http requests before just wanting to delete it. i remember i actually may have changed this on purpose to reduce the amount of overhead when we did testing via a travis / saucelabs tunnel.is this just because it seems a little more sensible to do db.destroy() vs pouchdb.destroy? (#1137 shouldnt really come into it. it was just a straight up bug). i suspect there will be a lot of times you want to delete a database without opening itwe dont have a particularly nice interface for things done above the db level. (like alldbs on remote databases for example). might be part of the same discussion", 'saucelabs is a choice. we have a free os account there. we used to use it for our travis testingrunning a reverse proxy from travis to saucelabs to run several browsers against the same couchdb did not work. however running a matrix of tests with the browsers running against their own couchdb instance is very possiblethis also solves the cloudant / pouchdb-server issues. they are just other matrix configurations', 'actually now we need to push to branches to test saucelabs. so nope', "travis looks like it was failing for sauce labs related reasons. so i restarted the tests. looks good once they're passing.", 'add edge to the set of browsers tested on saucelabs. it would be important to add edge to the set of browsers tested on saucelabs.no one knows if some failures are added by microsoft to their marvellous new browser.', 'all introduced changes are backward-compatible with existing `saucelabs` and `phantomjs` providers. but we have to implement newly supported  functionality.### maximizewindow (browserid)maximizes the browser window `browserid`.### canresizewindowtodimensions(browserid. width. height)allows to validate the specified `width` and `height` of browser window `browserid` before the actual resize. the result is `true` if browser window can be resized to the specified dimensions. `false` otherwise.### hascustomactionforbrowser(browserid)enables feature querying for the specified browser window `browserid`. the function should return an object with the following properties:`hasresizewindow` - the browser window supports resizing.`hasmaximizewindow` - the browser  window supports maximizing.`hastakescreenshots` - the browser window image can be captured to the file.`hascanresizewindowtodimensions` - the requested window dimensions can be validated before resize.if a property in the returned object has the `true` value. the provider should have an implemented function with the name corresponding to the property. (e.g. `hastakescreenshot` => `takescreenshot`). the default implementation for `hascustomactionforbrowser` checks for the function names by calling `hasownproperty` on provider object.### islocalbrowser(browserid)returns `true` if the specified browser `browserid` is a local browser. default implementation ignores `browserid` and always returns `false`.', "darlanmendonca yes. it were no enough available machines to run the tests on saucelabs. i'll restart them", 'testcafe-browser-provider-saucelabs plugin uses selenium api internel ?. ### are you requesting a feature or reporting a bug?feature ### what is the current behavior?testcafe-browser-provider-saucelabs plugin uses selenium api internel ?', 'upgrade sauce-connect-launcher', '+1', "getting the shop-tabs-overlay equivalent out the door hasn't happened yet and is stalling resolving this pr for no real reason. the tests have failed here because of a lint error in paper-icon (which is  incorrect) but i've manually run this pr through wct in saucelabs and everything checks out. so lgtm.one problem this pr is meant to solve falls under the same stacking-context issue that a lot of other stuff runs into. ('dialogs'. 'pop-up menus') there's not much that can be done about this right now since it relies on lower-level changes to the rendering engine / how css works. with this pr you'll be able to change `overflow` for the two elements in paper-tabs that would prevent elements from being visible outside the bounds of the tabs but scrolling tabs will break as a result. with no platform-level fix in the near term. it's probably best to leave this up to the user with a 'use at your own risk' policy.", 'remove specific throw error. ie throws "object expected" :crying_cat_face:due to travis issues with storing keys we\'re only running saucelabs on merge and not from a forked source pr.  so unfortunately odd-ball ie errors won\'t be caught until post merge.', "thanks for the offer but i think we are better off leaving this on master only at this point. i don't really trust our sauce implementation as we have to restart it for most cases and want to run less on it vs. more.", "jimberley can you email me at eric  saucelabs.com please? we'd like to have you verify the #4556 fix on sauce.", 'any updates on this issue  or any workaround where in we can achieve running parallel tests on ios using appium.also if anyone can explain how saucelabs or other commercial tools achieve this if it is an os level restriction?', "i seem to get 'assertionerror: --user must be given' for sauce tests . have you guys encountered this before?", 'yields amillet89 -- can either of you have a look? it seems that travis requires sauce labs credentials for the test to pass.']