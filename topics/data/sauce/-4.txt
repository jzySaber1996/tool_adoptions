["fezvrasta did you build the js files before this? i haven't commited any build results as per your contribution guidlines :)i'll write some tests today/tomorrow. completely forgot about them. although the saucelabs tests are still not working.", 'refactor test runner. mostly a tracking bug for #154. #146 and #144 i have rewritten the run_tests.sh and run_saucelabs.js to be a single node module that adds the new functionality and exposes some helpers (startdevenv())it was easier to get it written in node since it has to deal with json apis etc. and we can do things like start the tests as soon as the vm is ready instead of hoping sleep works. along with this i will be adding the new browsers + node tests and chucking a lot more information into the results database to make life easier to debugryanramage just wanted to check that that sounds good to you?', 'yup sounds like a good plan. no issues here.', '#154 - make sure we only trigger one saucelabs set of tests at a time', 'if saucelabs connection dies during test run. retry. we shouldnt depend on a stable connection to saucelabs when running tests. if the connection dies before the tests complete then rerun them', 'reduce polling interval for tests completed. once the tests start they start polling the document body to check for a class="complete". they do this once a second even though the tests take around 5 minutes to complete. this means a bunch of work for sauce connect which has to proxy each request. i dont want to put logic in there to only start the polling after x amount of time (as we may make the tests run faster. or run a subset). but reducing the frequency of the polling may help speed things up.', 'closing in favour of manually retrying ci runs #229', "that would be great; very helpful. if you were going to pick one i would go with the calendar out of the two you mentioned. the one caveat is that if you are going to test something that you know will break in lower ie (such as css animation) make a point to mention it at least in the comments. and at best write the test so it attends to that use case (in other words doesn't run and pass in old ie). don't worry to much about it tho it is hard to know what those things are unless you are actually running the tests through those browsers. which i haven't set up yet on saucelabs.much appreciated!", "does this happen on every ff test run. how about chrome or ie? have you tried running this not on sauce to see if it happens there?can you translate what this is actually doing in the wd api:      .wclickifexists(css['dialog'].mycomputerbutton)thanks!", 'add browser test suite to ci. should hopefully catch some issues going forward. very simple cross-browser tests with testling.com/saucelabs would be nice too.', "how much do we value cross-browser integration/acceptance tests over just plain-old automated browser tests in. e.g. phantomjs? most of our ie8 issues thus far could have been detected with a grep (it's almost always `array.prototype.foreach` lol) aside from that. we've hit some small snags with safari in the past.we could certainly kill two birds with one stone. but i feel like the initial focus might be just hooking up basic browser tests with ci?", "you're right danielstjules.  was thinking i'd used it elsewhere. but i've only set it up for pull requests issued from the same origin.  makes sense that the `sauce_access_key` is encrypted per repo.", 'no worries :) but i agree. with your earlier point. we could definitely break this down into multiple tasks.', '> we could certainly kill two birds with one stone. but i feel like the initial focus might be just hooking up basic browser tests with ci?i agree with this.  get something running w phantom on travis.', "> we don't have (functional) selenium tests; is this a requisite to use saucelabs? or can we just run our unit/integration tests on it?unfortunately no. we'd need to write our own integration tests. our browser unit tests aren't really unit tests. some of them fail. for example. to show that error handling works in the html reporter. so we'd need to write tests that wrap and verify that functionality.", '> i agree with this. get something running w phantom on travis.sounds good to me!', "re cross-browser compatibility: if we're just looking at testing our _javascript_. there are two browsers.  ie8 and everything else.  afaik per kangax's tables. anything else non-es5-compliant has insignificant usage.", ':+1:', "i'm also not sure what is the best way to report multiple results (you can have a long life session and run the tests many times)...", "since the reporter cannot be used on it's own without the saucelabs runner. it made sense for me to add it here. also. to make this a separate plugin. we'll need some way to share the session details across the plugins (job id and credentials).to me this reporter is mainly useful when running on a ci server with `singlerun: true` - i can't think of a scenario where it's useful to report multiple results with this.", 'vojtajina i rebased and squashed the commits.i also confirmed that with `--no-single-run --auto-watch`. the session metadata page on sl always shows the latest results.', 'rkistner would be super cool if you could mention the reporter in the readme ;-)', 'vojtajina when will that be available on npm?', 'garbas you can disable it by `config.saucelabs.startconnect = false`.', 'quoting vojta jina (2013-12-04 06:17:59)> garbas you can disable it by config.saucelabs.startconnect = false.tnx. i probably missed this while reading docs## rok garbas -', 'awesome sauce thanks', "dylanlacey and rossrowe would you guys mind checking on the status of sauce ruby and java examples and add pass/fail reporting if necessary? i'll fix the javascript examples. penguinho maybe you can do c#. then i think we should be good.", 'add pass/fail status reporting to sauce node examples', ':+1:', "we should probably track it on sauce then. and yeah. right now there's no way to get the appium rev from sauce. the easiest thing to do would probably be to actually log the appium welcome message. which has the active git commit in it.", 'update sauce android example to not be dependent on driverblock']