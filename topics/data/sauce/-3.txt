['final(???) tweaks to where. and tests; start of sauce integration', "this still doesn't fix the biggest issue `r.where({a: undefined}. {}) //=> true`i don't understand how you keep skipping this... i've said this on 4 different prs", "i guess you didn't read my prior comment about undefined properties on the spec.", 'if someone wants this behavior they can pass a constraint function on that property in the spec:```{a: function(a. obj) { return a in obj && obj[a] === undefined; } }```', "yep. saucelabs is definitely on the cards too. we may need to look into splitting the repositories as the client testing gets more involved because travis' matrix really doesn't cover the multi-project same-repo use case well.", 'added grunt as the build system. - externalized saucelabs and node-qunit.- build runs on travis. change travis.yml- changed webrunner.js so that browser test results are saved properly', 'closing pull request. as the build failure does not seem to show up properly', 'awesome workone really important usecase is the ability to specify where your cors-server is sending data to. we need to be able let users specify remote hosts to get up and running as quickly as possible. can we get that one in quickly?', 'added grunt as the build system. -  externalized saucelabs and node-qunit.- build runs on travis. change travis.yml- changed webrunner.js so that browser test results are saved properly- cors server can run on any port', 'i am in the middle of travelling so will look at this as soon as i get home. cheers. looking awesome.', 'isnt really grunt. but an saucelabs-qunit issue now', 'one way we could get ci working for pull requests while still using encrypted secret keys would be to use saucelabs sub accounts. for every pull request from a repository that is forked from daleharvey/pouchdb. we could provision a sub account with limited minutes. and that could be used for pull requests. if a user axemclion/pouchdb is sending many pull requests. we can use the saucelabs dashboard to increase the number of minutes. all this can be done. without a good contributor not having to do anything. an evil user can still get minutes. but these would be very limited. and they cannot abuse our minutes.', 'daleharvey will the reviewers get the code on their computers and run the ci. or do they need to run the ci using travis ? actually. should this be a ci. or should this just saucelabs runs ?', '#253 browser test results now read only using grunt. not in webrunner. changed the way tests were published.originally. web runner was writing test to a database. from where grunt read them and then published them. the test results were distributed in 2 places. with this commit. web runner simply exposes the junitreports in a variable. that grunt can read using the grunt-saucelabs plugin and publish.', 'can we change that from junitreport to testreport or something generically named. when the performance tests results start getting hooked in i just want a generic place to report stuff back to the cialso it will rerun the ci and hopefully at least fail in a way i understand :p', 'changed the name to testreport', 'what should the polling intervals be ? it is currently 5 seconds. we could increase it to 30 seconds ?', 'do you know why saucelabs qunit is completing so quickly without reporting any results?', 'seems to work for me now.', 'readd polyfill until sauce upgrades. fix another misused transaction', 'debugging - dont merge. i can only get these failures on saucelabs. they shouldnt really be possible so trying to figure it out', 'actually. should we really have to close the tunnels ? we can run tests in parallel. the problem would be zombie tunnels. but since travis would kill the machines anyway. will the tunnels to saucelabs not get killed too ?', 'yup. if you dont actively kill them they take like 30 minutes to shut downwe will still have zombie tunnel problems when the tests crash in unexpected ways. but they are much easier to know whats happening / fix than the tests stomping all over each othersauceconnect only allows one tunnel connection at a time i believe. we cant run the tests in parallel (even if we have concurrent tunnels. we only have a certain amount of parallel minutes). as long as we can have grunt reuse the sauceconnect connection we can run the actual different browsers in parallel though (we would need to make auth auth_replication tests are disabled in ci. they wont work in parallel)', 'ill trust that qunit-saucelabs isnt completely broken :p', 'the grunt-saucelabs plugin has a tunneltimeout property - the amount of time to wait for an open tunnel before trying to kill it and start a new one. i could increase the time interval for that. default is 120 milliseconds. which is way tooo less. i could increase this to 15 minutes (max time our tests can take to run)', 'the tunnels stamp on the other connection when they connect. you can see from ^ i had a running test that had its connection killed when another started.the code to poll the jobs api should still be in ./pouch and it was really simple and it worked. i think we should stick with it if its easy to port it to saucelabs qunit', 'haha awesome i have a few of these changes locally as well. i need some sleep so i will let you take over (and will stop hammering saucelabs)cheers', 'axemclion one issue i have notice. was i mistaken before and qunit-saucelabs is already attempting to have a single connect? i have noticed the last few runs it attempting to wait. however the behaviour is wrong i think. it needs to wait for the current test run to finish instead of forcibly stopping the job (we may want to have it starting to kill the job after a timeout. 15 minutes or so)we dont want to lose one test runs results just because there is more stuff to test', 'danielstjules did you make any progress here?', 'awesome sauce', "feat: allow to specify options for sauce-connect. added the ability to pass custom options to the connect launcher.example:``` jssaucelabs: {  startconnect: true.  testname: 'travis'.  connectoptions: {    directdomains: ['*.icloud.com'. '*.apple.com'. '*.disney.com'. '*.go.com']  }}```i also removed some config values as they are not used (no_progress). already the default (verbose) or ignored (logfile)", "feat: updated sauce-connect-launcher and wd. i updated sauce-connect-launcher and wd to check. whether it solves #14. but it doesn't.", 'add two doc in chinese and update to the latest. add troubleshooting.cn.mdadd real-devices.cn.mdupdate the cn doc to the latestadd saucelabs-repository in pom.xml in testng example', "thanks for reporting. i am unfortunately not familiar with `ui-mask` codebase. nor sauce. but `ui-mask` quality and reliability could clearly be improved. there were a lots of reported bugs in previous repository for `ui-mask`.so if someone would step up and take a few initiative on that project. that would probably be very welcome by its users. but i'm afraid this won't be me. i will merge pr. but can't do much more than that."]