["this sounds great to me! for the coveralls.io stuff. the quickest way to see impact would be to run the following commands:``` bashnpm run-script coverageopen reports/coverage.html```that will show you what coveralls.io will ultimately report in terms of test coverage. what i've noticed is that when running integration tests. the additional libraries being used tend to get pulled in for test evaluation as well and often that significantly reduces the coverage number. if this is the case after you introduce functional tests. we can modify the posttest script in package.json to only run coverage when performing units and then do the functional integrations after.", 'update coveralls badge | fixes #575', 'merged. thx!', "jsoverson i've never really worked with coveralls. so i am not sure why it is decreasing code coverage. probably because i added a test. and it is not expecting that output.besides that. this is ready to merge.", 'updated yml config for travisci and coveralls', 'this has been done via coveralls see pull request #293', 'closing this in favor of a single issue', "i'm going to close this. code coverage is now supported. still working on coveralls integration (travis is having trouble) but you'll be pleased to hear that we're actually pretty well covered.", "damn you coveralls! :stuck_out_tongue: i'll add some non cli unit tests too later on to check the results.", 'jsbundler.js quest to 100% coveralls', 'sdesai this is the merge that is the precursor to rx becoming a devdependency.  if there is anything else that i need to do. let me know.  remember. if you look at the coveralls drop its around some sync functions which still need to be removed.', "fix coverage. due to nyc defaults. we were missing coverage on lib/test.jsi also added `npm run coverage` as a build target. which is for useon developer machines. it launches a browser window with coveragefrom the last run.we no longer need nyc ~~or coveralls~~ as dev dependencies. `tap` handlesit all for us magically.`maintaining.md` updated to reflect all these changes.also - i dropped coverage from the windows tests. we don't need to make appveyor any slower.", ':+1:', 'some day', ':metal:']