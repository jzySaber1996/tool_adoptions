['this coveralls shit is incredibly obnoxious and verbose. can it be turned down/off?', "i just turned off comments in coveralls settings. it's indeed super annoying. we'll just have to keep an eye on test coverage.", 'the tests are passing. the errors are to do with getting coveralls to receive the coverage stats. some errors are 500 (a server error on their end). and some look to be an invalid repo token being passed automatically by travis in the background to coveralls.going to merge this in.', 'paulbjensen i wonder what that 500 error is about. are we behind on coveralls package ?', 'updates to send data to coveralls', 'jfairley can you give me any project where i can see that ux? (i tried to find on google but none show up :( )', "thanks :) i'm gonna see them", 'cool. i use the service for both java and javascript (node. angular. and react). my projects are all private. but i can still help set up if you need.', 'are you using ec6?', '_es6_? yes', "updated again to remove `findall` and `findone`. we can add the new `find` functions in a future pr. i think this is ready for review again.i can't seem to figure out what's causing coveralls to fail. there don't seem to be any files in the report that have less coverage. but it also looks like not all the files are in the report. can anyone help me figure out what's going on there?", 'update coveralls token', 'mapped coverage. attempting to brute force sourcemapped coverage for coveralls.fixes #2920', "there's still a bit of weirdness if you browse around on coveralls. but it's a lot better now. buble transpiles pretty politely. but have the _actual_ src show up in the coverage report is much easier to follow.", 'grammar not properly coveraged. should get notifications about untested rules in grammar.js. currently. coveralls stay quiet in prs because the grammar object is always loaded once. and whether their inner rules are used is hidden to jscoverage.', "maybe a sensible approach to handle this is to ensure that all sdps in our test directory can parse with an empty `invalids` list.this way. the parse test + compose test will logically cover both the format string and the regex.it won't deal with session level invalids though..", 'amilajack any idea why coveralls got stuck on this branch and others?', 'closing for lack for lack of response. we would be happy to reopen if you get interested again though :)', "leave it open. i'll take care of the fixes myself if we don't get them before i get there.", 'since when did coveralls start commenting on issues again?']