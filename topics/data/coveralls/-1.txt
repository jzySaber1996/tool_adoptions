['the error in this build is due to `coveralls.js` script returning an error.', "you need to login to coveralls.io with your github account. then find the request project in the list of request org projects. and click on the button to enable it. you need to be an owner of that org.coveralls token requests only read access to your email. so it can't modify anything on your behalf on github like travis-ci do.once you enable the request project on coveralls.io the script from the travis.yml will send the lcov data from our tests successfully (or at least it works that way for me on my personal projects)currently the test coverage is around 80% for the entire request.js file.", "> changes unknown when pulling 37e2268 on simov:test-coverage into *\\* on request:master**.will this message be displayed for every change. even if you insert missing comma in readme? 'cause as i've seen in other projects. coveralls can be extremely annoying.", 'nylen i think this is good to be merged in. it contains a few bugfixes for the tests. and probably coveralls notifications can be set to write to gitter for example (in case github comment are too annoying)', "eiriksm the travis build is failing. ~~on a side note: i'm wondering why coveralls decreases the test coverage in case no new code is being added.~~ it shows some red numbers. but not the actual lines of code.edit: that's probably due to code added between the last coveralls build", "add travis. and maybe coveralls alsopaulmillr i'm pretty sure you're the only one who can flip the switch on the 3rd-party ci services", "unfortunately it won't be able to test the fsevents side of things at all. but still... won't hurt to have it.", 'also add travis yml', "not going to do coveralls for now since it won't be meaningful without being able to include an os x test environment.e-mailed travis support about enabling multi-os. but they said they can't due to travis-ci/travis-ci#2311", "you don't need to do `npm run coveralls` and `npm run unit`. `coveralls` runs the tests. and fails if the tests fail.", "bruderstein perhaps then `coveralls` is doing too much?i'd expect that target to run all the way even if the tests fail?no?if a test fails. that doesn't equate 0% or _failed_ coverage.", 'fix `npm run-script coveralls`. the coveralls script was throwing an error. due to **jscoverage** being unable to process non-javascript files contained within the nightwatch `lib` directory.the fix was to simply add the `--exclude *.ejs.*.json` flag to the invocation of **jscoverage**.', "that's interesting. i never had any issues with running jscoverage. if your trying to run the coveralls script it will fail. since you need to have a repo token present in your .coveralls.yml. i was planning to add it from travis but didn't get around to do it yet.", "yeah. but the repo token must be also passed somehow. doesn't it? that alone will fail without it.", "gotcha. i'm not super familiar with coveralls.io. but i will take a look later today. unless someone beats me to it :)", "setup automated coverage tests. having a 100% code coverage is our goal.in order to manage that. we should setup an automated coverage test process.i'm looking at [coveralls]( right now.", 'integration done.', 'add code coverage via coveralls', 'my coveralls config does not seem to be complete (i did turn it on for this repo. but apparently not fully) and now i keep getting 500s from  . any idea what might be up dickeyxxx ?', "woo it's workin'.", 'nifty', 'add code coverage via istanbul and report on coveralls.io. - [x] refactor how registerstores work - get rid of silent option which was causing strange observation behavior when passed in as `true`- [x] add back `registerstore` method which was deprecated and put a `console.warn` with deprecation notice- [x] get test coverage to 100%- [x] add grunt script to run on ci to do coverage and send results to coveralls- [x] add coveralls coverage badge to readmebhamodi', "activated on coveralls.io!i've  been noticing some weirdness on my personal repo (demo-ember-osf). so we'll monitor this in case further tweaks are needed.", 'merge conflicts addressed.oh. and coveralls is reporting!', 'could try out something like  which gives those kinds of stats.', "nolanlawson if you add the `gh_repo` and coveralls key to travis. it should check the repo by default with every pr you get in. independent from the ownership / rights. (if you invite me to coveralls and travis. i can take a look).running coveralls in `after_success` helps us the build won't fail. because it doesn't have any influence on the build. so this is what you'd need :)", "yup would love this. its non trivial but would be super useful. we can have it send status to github pr's the same way coveralls doeswe also have like 3000 performance test results   while the results are possibly not hugely useful. it would likely be a good exercise to get them visualised in a way that did highlight any regressions", 'tests: code coverage via istanbul and report to coveralls.io', 'how was istanbul chosen? have you looked at blanket.js or any other code coverage tools?', "scottgonzalez doesn't blanket use istanbul internally. too?", "i don't know. i've only very briefly looked at js code coverage. and it was quite a while ago. i just wanted to make sure there was some actual discussion within the team since this is something that has been a cross-project goal for a while and i haven't heard any of the discussions about choosing a tool and setting up infrastructure.", 'i think this would be a good topic for the next bi-weekly dev leads meeting', "during last week's mobile meeting i suggested gseguin to post in the jquery-dev-team google group. i think it's still a good idea to do that. next to that we can discuss it during the dev leads meeting.", "ugomobi at that time i was still exploring the karma way which turned out to require way too many changes. if it gets brought up during the dev leads meeting. i'd be happy to get other people's input. i understand that we prefer a project-wide solution and i'm completely open to switching. while we wait for a project-wide solution we can use this as it's not intrusive at all in our codebase and start benefiting from the coverage report today.", "the decision on today's dev leads call was to go ahead with this.cc krinkle jamesmgreene in case you have any further input.", 'this looks good to go if you fix the one new line and squash the commits  :+1:', "i use istanbul for my needs and i feel it works very well. it provides more granular and accurate coverage than over tools i've tried.blanket doesn't use istanbul internally (particularly since blanket can run in the browser) but they do both use esprima to parse files into abstract syntax trees.", 'true. that will kick off the coveralls so we can see some results. and also maybe we should update the readme/npm scripts in `package.json` for a coverage command.', "lirantal i wasn't quite sure how to integrate coveralls at the time. but i found a package `gulp-coveralls` so i'll have a go at implementing that with my next commit.simison yes i'll edit that with my next commit here. good catch.", 'okay. i think i cracked it. there was a bug with the previous grunt coverage tasks never submitting client-side tests to coveralls. this new gulp coverage task fixes that by merging the client and server side test reports and submitting them together. thus the number of files being recorded for coverage has increased.should be ready now i believe.', "that's a real mystery. they all link back to the same page and were sent simultaneously. my first thought was that they were for different builds. but there are 12 builds and 9 notifications  so that doesn't quite add up. googling doesn't find any history on this issue whatsoever.perhaps lirantal could disable coveralls notifications until we're at the bottom of it and we've also found a way to get client-side coverage reports going?", "boom! looks like it's covering both client and server side tests. now so long as it doesn't send out 9 more coveralls notifications...", "hyperreality can you think of a test to write for this new directive? the coverage decreased. so that may be why the coveralls build failed. i think we have a threshold of coverage decreasing.lirantal i couldn't find the settings on coveralls. do you know what this setting is. and where i can see it?", "mleanos i'll play around with sending keypresses on protractor.the coveralls settings are a tiny button on the top left.", 'add nyc and coveralls', "created a `.coveralls.yml` locally with the `repo_token` and was able to upload with `coveralls -i src/ --gcov-options '\\-lp'` but i don't think that command is correct (no coverage is reported yet). pausing on this   now to focus on other things.", "it's coveralls which is drunk. tests pass :)", 'might be good idea to add integration with coveralls too', '> since coveralls bot will tell you about it.i meant hook there', "> i like doing it explicitly so i know what i've loaded.ok-ok. totally reasonablewhat about coveralls? i can provide a pull for that this weekend. if that too big task to dig.", 'add coveralls', "we recently added istanbul to jquery mobile and we're using coveralls.io to store the data. we should probably be consistent. especially since developers won't really be enticed to compare coverage to previous runs with this setup.", "i noticed that grunt-coveralls doesn't work locally. but i used this for keep consistency with jq.mobile  probably the best way to solve the ci problem is checking the grunt-coveralls repo if they have an option to throw an error if coveralls service is down. doing this we can keep relying on travis builds without relying on coveralls as a external and secondary service.i'll check this on grunt-coveralls today later.", 'if they accept my pr at pimterry/grunt-coveralls#5. we will be able to add an option to just print a warning rather than an error when trying to send data to coveralls.btw. this pr is already updated with the last changes on branch master.', "alex-friedl there is a branch from your pull request that is not covered with tests. i would like to publish this new feature to npm. could you provide a test for the remaining branch?i've integrated with coveralls. so now you can run `npm run test-cover` and will see report of uncovered branch.thanks again for your effort! :)", 'still getting to grips with coveralls :)', 'michaelbpaulson sdesai it appears that our coveralls is not running for checkins.', 'hmm. coveralls is still froze.', "> i looked into it but couldn't figure out how to integrate coveralls.io into the ci process - could you look into that?edit: see #168", "it's pretty straightforward. but it requires you (project owner) to do some travis stuff. i can pr the rest.- [x] sign up for coveralls.io account. acquire token- [x] add coveralls token to your travis environment variables## - [x] install `coveralls` npm package - [x] add an npm script to submit coverage data to coveralls - [x] add a post-deploy hook to travis.yml to run that npm script- [x] add a badge in readme", 'alright. let me check out and merge this pr and then lets get to coveralls.io. see #168!', 'implement coveralls task & badge.. - [x] install `coveralls` npm package- [x] add an npm script to submit coverage data to coveralls- [x] add a post-deploy hook to travis.yml to run that npm script- [x] add a badge in readme', "i'm pretty sure that's because it's your `jbinto/react-boilerplate` repo. which isn't enabled. let me try and merge it. and we'll see what happens!", "i got the badge now. i think it's because we're not on the default branch. which is `master`.", 'it\'s working since your last commit if you go directly to the .svg url.the actual badge on the repo still says "coverage unknown". but github proxies the image through `camo.githubuserconent.com` so it\'s probably a stale cache.', "it's there now!", 'awesome! now we just need to get the number higher.', "add test coverage. istanbul test coverage and coveralls integration.test is failing because coveralls is not activated on yeoman. you can see though the coverage report at the end of the build.now that i'm a yeoman team member. can i get access to the organization and write-access? i could setup coveralls reports and make this pr pass.", "> now that i'm a yeoman team member. can i get access to the organization and write-access? i could setup coveralls reports and make this pr pass.done ;)", ':+1:', 'oooooh.', 'yay!', 'add coveralls .', 'hildjj this sounds good to me. we appreciate the help. sometimes i feel like were boiling the ocean ;)microshine this sounds good to me. what do you think? we could take the work that hildjj does here and use it with node-webcrypto-p11 and the browser-webcrypto-liner project. any concerns?', 'i like the idea to make project more usable and understandable', 'hildjj let us know what you need from us. thanks for the help.', "i think all i need from you is for you to create an account at  if you don't have one already. and enable this project.  travis and coveralls are now automatically integrated.  tests running for the pr now.", "i'll take a look at it.", 'add coveralls for code coverage stats.. so i think code coverage is pretty much rubbish as a flat number. however it will help us identify untested codepaths which i think is super valuable. +1 for adding this.', "i wasn't able to figure out a grunt build that reported stats to coveralls in previous set ups :(", 'i can do this', 'add coveralls and then :ship:', 'add coverage and coveralls. opening in favour of #1430', ':+1: from me on this', 'im sorry ahumphreys87 mind cherry picking.. but still :+1: from memarionettejs/marionette-core ping someone', "jdalton as you point out. nyc is just a thin wrapper for istanbul. i see two main benefits:isaacs and i have put a lot of work into making sure that nyc works great with subprocesses. while this allows it to instrument a larger variety of testing frameworks. e.g.. `node-tap`. it has the added benefit that instrumentation becomes consistent and simple across testing frameworks. to instrument underscore with istanbul. you'd do something like this:`istanbul cover qunit-cli test/*.js`. this instrumentation invocation varies widely depending on chosen framework.because of our handling of shebang. instrumentation simply becomes:`nyc npm run test-node`the other main advantage i see is that nyc makes it easier to spit out a text-lcov report which can be pushed directly to coveralls.io:`nyc report --reporter=text-lcov`this is slightly more of a hassle with `istanbul cover` (this would be a great candidate for a patch to istanbul itself. now that the text-lcov report exists).", "megawac can you make the coveralls less chatty (there's an option in its config on the coveralls site).benjycui i don't think it's time to support new forms of iteration just yet. for example ie 11 doesn't support `new set([1. 2. 3])` for assigning values to a `set`. i'm also not a fan of duck typing for iteration or adding more overloaded functionality to methods.the easiest way to deal with this in your es6 code is to convert your sets/maps to an array with `array.from` or something like:``` js_.each([...set]. function() {});```", 'chore(grunt): add coveralls code coverage report', 'chore(coveralls): enable debug flag', "implement automated code coverage reporting. i'm interested in refactoring the unit tests. a code coverage report will give other reviewers confidence that those changes haven't introduced bugs in the tests themselves.mikesherov caitp does this sound good to you?rwaldron pending their approval but prior to merging. i'll need you to log in to  with your github credentials and enable coveralls for this repository.> - collect unit test coverage using the istanbul module.> - update the ci scripts to report this data to the coveralls service so>   it can be automatically incorporated into pull requests.> - remove legacy code coverage file.", 'my vote is to use the smaller one. whichever it is.', "i kinda feel like coveralls.io precludes the html report generation issue --- but i don't have a strong opinion one way or the other. i would just rather use the one that increases ci build times less than the other", "alright --- then whatever you want to go with i guess. it's all good!", 'if i can have the admin rights i could set up everything. saucelabs and coveralls', 'just curious. why does coveralls not get triggered here?']