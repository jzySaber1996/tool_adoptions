["mocha tests: missing function expression name. (func-names). when writing mocha tests. it is not possible to use fat arrow functions because we sometimes need to use the `this` keyword to change the test's timeout for example.``` javascriptdescribe('some description'. function () {  before('blabla'. function () {    this.timeout(10000);    return somepromise();  });});```this results in the following eslint error:```missing function expression name. (func-names)```i was wondering what was the guidelines for this case. naming the functions is out of the question as it would add a lot of noise.", 'would `function blahblah() {` really add that much noise?', "i just don't really see the point for mocha tests and it goes against the dry principle. e.g.```javascript    it('should return status 200'. function shouldreturnstatus200() {      expect(self.res.status).to.equal(200);    });```anyways. i added `func-names: 0` to my `tests/.eslintrc`.", 'another alternative. that would be less sweeping. is adding `/* eslint-disable func-names */ to your`describe` block. which would disable it just for that scope.', 'ok thanks.', "nkbt oh i see. so it's likely just a bug with eslint.", 'unused variables when destructuring?. i just wrote this code:``` javascript  dirtyproperties() {    return this._getproperties()      .filter(([ prop ]) => prop.isdirty())      .map(([ _. propname ]) => propname);  }```and eslint threw a `no-unused-vars` error because of the `_` variable. is this against the airbnb style guide? i feel like using _ to ignore the first destructured variable should be pretty well understood and not using destructuring would make the code more verboe.', 'ooops. i just realized i can do `[ . propname ]`.', 'i was planning on creating a related issue regarding infrequent bumps too after i had woken up. so funny to see this just created. lots of changes have been made. most significant is probably the react guidelines to `.eslintrc` and updated rules such as `comma-dangle`. is it possible to publish a new `eslint-config-airbnb` package with the updated rules? it would be very much appreciated.', 'dependencies removed', 'can i use eslint-config-airbnb without eslint-plugin-react?. i am not using react. so it would be better for me to just install eslint.is it possible to move the jsx related configs to a separated file?', 'sorry. i do not know that react/jsx-no-undef can cover no-undef. it works when i call eslint directly but not when i use gulp-eslint. thank you anyway.', 'mention eslint-config-airbnb. actually. if we want to make the thing more convenient. we could go as far as saying:``````before using our `.eslintrc` install these dependencies:```shnpm install --save-dev eslint-config-airbnb eslint babel-eslint eslint-plugin-react`````````i want to leave the decision up to you though.', 'i agree about adding instruction on how to install. use. and update style guide using npm. but adding `eslint-config-airbnb` as a dependancy of `.eslintrc` looks wrong (or it should be added somewhere that .eslint should contain  `{ "extends": "airbnb" }`)', 'very nice. thanks for the heads-up!', '+1  we use `extends: "airbnb"` and would like `"indent": [2. 2. {"switchcase": 1}]` to be in `eslint-config-airbnb`.', 'simplify eslint config package.. this patch moves `.eslintrc` contents into `index.js` directly.this allows us to drop external dependencies and using javascriptcomments instead of not valid json.', ':+1:', 'you still have to manually add the package to your `package.json` - try `npm install --save eslint-config-airbnb`', "thanks for the fast reply!i tried `npm install --save eslint-config-airbnb` as well with the same result. i did add it to the package.json. it's on line 11 under dev dependencies (also tried under reg. deps.) the module is also in node_modules.any other ideas?", "i can also vouch that having `react/jsx-no-undef` turned on is not sufficient for `no-undef` to trigger in `gulp-eslint` or in an ide such as webstorm. at least it's easy to add that rule to the `.eslintrc` that's extending `airbnb`.", 'lgtm', 'i was mostly worried about preserving the file location inside our package for whatever reason', 'same here. without `no-undef` referencing a variable that does not exist (e.g. typo) is not caught by eslint.', 'perfect.', 'anything that i should change or can this be merged?', 'thanks for pinging felixfbecker  ;)', 'marcoow the main issue is that eslint plugins can not depend on other eslint plugins. the (hopefully temporary) "solution" for that is using an ember cli blueprint to install those other eslint plugins (ember. qunit. mocha) into the host app/addon.this leads to the current situation where greenkeeper would like to bump `eslint-plugin-ember`. but our `eslint-config-simplabs` is not yet compatible with that change. i guess the best solution for that is adding the eslint plugins to the greenkeeper ignore list.', 'turbo87: i guess we could do something similiar to the way we test fastboot in `eslint-config-simplabs` (create an actual app. install `eslint-config-simplabs` which in turn installs the eslint dependencies and the lint that and make sure there are no findings or so)?', 'we would have identified this error in `eslint-config-simplabs`.', "port some features from tcomb-form. - **new feature**  - getcomponent api fix #19  - get access to the native input contained in tcomb-form-native's    component fix #24- **breaking change**  - inputs refactoring. this affects how to build custom inputs #12- **internal**  - textbox is no more a controlled input #26  - add eslint", 'fix #945 (annotations) and an eslint issue (constant condition)', 'lhorie ping? (re: .eslintrc file)', "i've added some eslint rules. currently. `npm test` runs both jshint and eslint. i'm probably not going to follow them to the letter though. because some things are not so clear-cut: for example. unused variables are generally bad and i would like to catch them. but then again i'd like to keep them in callback parameters as it makes clearer what the full signature is. and what is available etc.", 'fixing eslint error. fix a json syntax error due to a comma.', 'lint as part of test run. this starts us down the path of linting our files on test runs.  delete file patterns from the .eslintignore file as they are ready.', "geek rjrodger: lgtm i'm going to open an issue on the contrib site to ensure our linting file matches our style guide."]