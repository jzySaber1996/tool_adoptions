["create package eslint-config-airbnb. this is a sharable eslint config package. we could optionally just use our eslint config as the package `main` for `airbnb-style` but it'd be nicer for everyone if the eslint package had a cool name.solves for issue #349", 'to make config searchable via [standalone npm packadge]( please. extend packadge.json keywords with `eslintconfig`:```  "keywords": [    "eslint".    "eslintconfig"    "config".    "airbnb".    "javascript".    "styleguide"  ].```', 'update .eslintrc. just a consistency thing. :)', 'lol', 'update(readme.md): added airbnb style .eslintrc link. i added the missing airbnb style .eslintrc link into the documentation file.', ':+1: thanks for this!', "ok. sounds good. i will try to move react styleguide options from `eslint-config-airbnb` to `eslint-config-airbnb-react` next week. i'm also planning to do an audit of the `.eslintrc` to make sure it conforms with both the letter and the spirit of the styleguide.goatslacker hshoff should we have 3 separate eslintrcs? `eslint-config-airbnb`. `eslint-config-airbnb-es6`. `eslint-config-airbnb-react`? i would prefer not to split out the es6 rules since those are considered part of the core style guide. but i'm up for discussion on the matter. i would prefer to only maintain two. `eslint-config-airbnb` and `eslint-config-airbnb-react`.", "alitaheri i'm already working on a refactor. finished 80%. changed everything to classes. arrow functions. let and const. also. i have a eslint ready for #5963. which has rules like `no-var` and `prefer-arrow-function`. so i will likely open that pr after the refactor.", 'interesting. thanks for the link.  it looks like they could be complimentary: eslint for warnings/errors and jscs for code style?', 'yes. though there is some overlap in functionality.', 'eslint prettier integration. title says it all', 'adding eslint & eslint-plugin-prettier', 'i added one more clean up piece.', 'thanks for the review. i like the result much better and i had to learn a bit about another corner of the ember ecosystem.', 'sg. go ahead and merge! you should have access now :)', 'true. i\'d say. submit a pr with the new .eslintrc and such (which i agree would be an awesome addition). but let aksonov do the big "reformat" commit.', 'fix some eslint errors.  1023 remaining problems (1011 errors. 12 warnings)', "is there any way to check prs before merge to comply with code style? i've added you as collaborator.", 'revert "fix some eslint errors". reverts aksonov/react-native-router-flux#585', "charpeni is there any automatic tool to do all these changes (so i could do it by myself)? i'm about to commit now some improvements for navbar (with old eslint issues). so your changes will have conflict...", "unfortunately. i do not believe that such tools exists.i think for a project moving as fast we should only fix one file at time and do a pull request with solid test coverage. don't worry with it. i will redo.", 'fix eslint errors in switch.js. also:- adds an eslint rule to allow console statements- fixes malformed json in `.babelrc`', "cleanup router.js. cleans up the eslint errors in `router.js`. previously. destructuring was being used to omit values from an object. which was creating unused reference errors. i've added lodash in order to use `omit` in place of the destructuring.", 'lgtm.', 'this pr in general lgtm. this does add a dependency on `lodash/omit`. which i think is reasonable. but i want to allow someone else to comment on that as well.', 'cleanup modal.js. fixes eslint errors in `modal.js`.', 'for the group: an alternative is to disable the eslint rule for unused references on the line that uses destructuring to omit properties:``` js// eslint-disable-next-line no-unused-varsconst { children. style. scenes. reducer. createreducer. ...parentprops } = props;```', 'fix eslint errors in defaultrenderer.js', 'maybe the render methods could be defined in the same order they are binded ?``` javascriptthis.rendercard = this.rendercard.bind(this);this.renderscene = this.renderscene.bind(this);this.renderheader = this.renderheader.bind(this);```', 'cool with me. charpeni. updated.', "why not try and mirror react-native's lodash dependency to avoid any actual additional requirements?", 'fix eslint errors in state.js', 'i suggest to have own stack of needed functions to avoid dependencies.`omit`. `pick`. `compare`move them to helpers/utils file and reuse in components.', 'mikefowler maybe we just use the proposed ignore comment + object-rest?```// eslint-disable-next-line no-unused-varsconst { children. style. scenes. reducer. createreducer. ...parentprops } = props;```this way the behavior is sure to be the same. and we have no question of additional dependencies?', "sounds good. y'all. i'll move this back to using rest properties.charpeni: good call. this isn't in our styleguide. we've been using them a bit internally since react native supports them. i'll move back to the approved way.", "- removed lodash dependency in favor of rest properties.- pull proptypes out of static propertyfeel free to review again. y'all.", 'mikefowler looks good. could you merge with latest master and submit again (now it has conflicts) ?', 'pull request has been updated.', 'aksonov. conflicts resolve. charpeni. addressed your comment as well. should be good to merge.', 'lgtm. good work !', 'fyi 12 eslint errors remaining.can you move 355c03c _fix navbar height for android_ to a different pr?', 'aksonov before leaving can you give authorization to circleci for this repo ?  will do the config soon with eslint and unit tests.', '4 eslint errors remaining but i need help.', 'at a quick glance. this looks good. does this pass our new fancy eslint rules?', 'good job :)lgtm if you can tell us if it pass the eslint rules ? i will setup circleci really soon. until that we will trust you.', "yes. it's pass the eslint rules ;)", 'fix eslint example/components/tabicon.js', 'by analyzing the blame information on this pull request. we identified sarovin to be a potential reviewer', 'fix eslint example/components/register.js', 'fix eslint example/components/navigationdrawer.js', 'by analyzing the blame information on this pull request. we identified froelund and sarovin to be potential reviewers', 'fix eslint issues and add circle.yml', 'by analyzing the blame information on this pull request. we identified sarovin. lelandrichardson and zidail to be potential reviewers', 'lgtm', 'probably they are caused by eslint formatting done for master branch....', 'aksonov fixed and merged into master.1 eslint error remaining (except example folder). i will fix it.', 'fix eslint src/navbar.js. related to #567', 'by analyzing the blame information on this pull request. we identified sarovin. timzaak and froelund to be potential reviewers', "charpeni ops. sorry. enabled os x plan but it didn't run because it is paid! for open source! reverted back. could you submit another pr to run build again? maybe we must use travisci instead with os x support for free (we could build example project and run gui tests for it!)", 'travisci is really slow. but i like your idea. maybe we could setup travisci only for os x build and keep circleci for eslint and mocha ?', "ugh. circleci schedules new builds. and don't want to remove 'os x' ones. i'm removing it and re-adding the project again...", 'yes. we could try both', '> if we plan to automate this. that can be a separate issue or part of #652unfortunately this would be hard to automate (as it relies on webstorm). however when we finally switch to eslint. they have plugins for it.', "allow addon-local configuration. this allows an addon to have its own postcssoptions. for example. this can appear in an addon's index.js:```jsvar cssimport = require('postcss-import');var cssnext = require('postcss-cssnext');module.exports = {  name: 'my-addon'.  options: {    postcssoptions: {      compile: {        enabled: true.        plugins: [          { module: cssimport }.          { module: cssnext }        ]      }    }  }};```those options will remain properly scoped to the addon's own code and have no effect on the wider application (and may not be using ember-cli-postcss at all)i also had to streamline the eslint configuration to get it working for me. this is now using the out-of-the-box eslint setup provided by the latest ember-cli. this removed several eslint plugins that weren't doing anything (given that we don't have any clientside code in the addon).", "no worries. i realized later that part of the problem was my own mistake. my editor was running the globally-installed eslint. which doesn't see the plugins in the project's node_modules.", "i actually experienced a similar issue when editing the project after merging the pr since i have `eslint` and `standard` setup globally. are you by chance using vim with syntastic?i'd like to keep using `standard` javascript style for this project. but i'd like to get `eslint` setup correctly before committing to it.thanks!", 'no. emacs with flycheck. but probably the same basic idea.the solution i have used in my own projects is to do module resolution directly in the config file instead of leaving it up to eslint:```js// .eslintrc.jsmodule.exports = {  "extends": require.resolve(\'some-eslint-module\')};```', "thanks for clarifying!i'm going to try sticking with `standard` for now and if it continues to cause problems. revert to the recommended default eslint settings.thanks again for this fix.", "eslint. i'd like to suggest that the codebase be made more consistent through the use of [eslint]( if you agree. i'd like to volunteer to do the cleaning. please suggest the ruleset you'd like to use and i can get to work.i would suggest switching from tabs to spaces for better-looking diffs but it's completely up to you :)", "i've actually never used `godaddy-js-style-lint`. have you tried with `godaddy-js-style-eslint`?", "hi gzurbach.  based on that eslint issue. it definitely seems like something is amiss. however. i'm unable to reproduce it locally. on either v2 or v3 of godaddy-style.  can you provide any more details about this one?  your package.json would be a good start.  i might have a dependency that is masking the problem.", "i'd personally prefer it was an error still since there is no legitimate reason for the sample code as given. if the it block referenced the variable and eslint still complained. i'd fully agree. but the message is incorrect. so i guess +0 on balance.", "add instructions to override a specific rule locally. we have been using godaddy's style guide in 4 projects so far and we always encounter the need to override one or two eslint rules.we struggled quite a bit to understand how to extend and override the provided `.eslintrc` file in `dist`. we thought it would be nice to share our findings with everyone else.-- the mya and api teams"]