['but why should such thing be constrained at this level? more appropriate place for such a constraint would be an `eslint` rule', 'could you please give an example? i am kinda struggling to find the best place to put `eslint` rule for that.', 'i am open to allow custom rules in stylelint (like eslint accepts custom rules from a folder). but i am not open to put non standard stuff into core.', "code cleanup. <!-- **please read the contribution guidelines first. and target the `dev` branch!** -->addresses #274 .this pr is for code review as we develop our code formatting standards. we are re-doing white space. fixing errors. and removing superfluous iifes.i'm reformatting js files to pass lint as i go. based on my editor's integrated eslint feedback. bmuenzenmeyer. would you please give the reformatted js a look and tell me what's in there that hurts your eyes?", "hey geoffp i see you've been busy today!thanks for taking the lead on this - i am happy that we'll be in a more consistent place once done.as far as eye bleeding goes. the only thing that stood out to me so far was``` for (i = 0; i < items.indexof(loopnumberstring); i++) {```i am not accustomed to a space after the for - but i can get used to it - leave it this way.", "i wasn't for doing it that way at first. myself. but i was eventually persuaded by somebody or other's best practices this or that. probably crockford. i find it's kind of nice to visually distinguish this and `if` from function calls.", 'pulled this down and running now. there are a lot of eslint errors. some are good. some seem a bit crazy. will research tweaks and discuss', 'reassigned you to review what i did', "right - i saw that too. in addition to eslint. it's a good bit of busy work that can be put into #241", "o.o isn't this file supposed to be valid json. which can't have comments? can `eslint` parse this?", 'that would be rad. one thing to note is that eslint merges the user defined config with their default config whether you like it or not so the config as read by eslint might not be an exact match to what you give it unless you define all of the properties.as a part of my project i took the config you have here and did that merge before i divided it up so if you want to break stuff apart you could consider copying/forking/whatever-ing what i have since it may be duplicate work in some areas.', 'or a comment would be fine p3k. which you might have when using eslint:``` js/* global define */void function () {}(...)```', 'move babel-eslint to peer dependencies. the reason for this is that config is something that is mixed in into a main config. and main project not necessarily has babel-eslint in there. internal dependency of eslint-config-airbnb is ignored (it is not a module. rules/keys are just mixed in by eslint). so when you run lint there is an error that "babel-eslint is not found".', 'peerdeps have been deprecated. so prob it will not work', "update react style guide with new rules. this formalizes the rules that we've been following for class extends react.component and also updates our ordering with whats in the eslintrc file.", 'also related: #420', 'nice.', "why does the .eslintrc prohibit unused function parameters? . hi.i'm coming at this from a node point of view. so sorry if it's weird for client side js.why do you prohibit unused function parameters in the .eslintrc? in node. (and afaik in the browser). ignoring one or more of your parameters for now isn't that big a deal (for example. if a callback gets err. info. res. ignoring info is fine.)thanks!ari", "where are the changes to the .eslint for this? someone submitted a pr to put `constructor` in the eslint file here: i don't want to abandon their pr in favor of this one without the .eslint change from #420 or similar", 'no changes to eslintrc in this pr. #420 takes care of adding constructor. the rest of the order is already present in our eslintrc.', 'ok. lgtm', 'bro. do you even lint?. switch the linter to eslint and be a lot stricter', "i'll fix that. this was more to check i hadn't borked anything", 'add eslint. first step towards #5963 even though a great part of the library (tests) is not in es6 yet and there are a whole lot of lint issues. i noticed that the continued development already introduced more style issues that did not get caught by jshint. i decided it would be the best to add the `.eslintrc` now. so ides can pick it up and warn contributors about style issues while writing code.i tried to match the current code style of the library as much as possible. some issues like `no-extra-boolean-cast` are heavily used in the whole library. so i added them as warning for now. it is configured to especially error on not using es6 (let/const/arrow functions etc) and i already used this file to do my refactors. one really nice thing is also that eslint detects indentation errors while jshint did not.after this. i will try to fix as many style issues i find. starting with the simple ones like indentation. and when everything is resolved we can remove jshint and add eslint to travis.', '> should we have a different .eslintrc for the tests folder?yea. this is usually sensible.', '(wip) added eslint. gaearon want to review the config?i still need to fix most of the files to conform to the configcloses #274', 'yeah --fix helps at least with the semicolons. adding semicolons in hundreds of lines manually would have been terrible', "gaearon you wrote some of the files without `const`. `import`. stuff like that. any reason to keep them like that. since we're building everything with babel? i need to either change them or change the eslint rules", 'if we use es modules everywhere. we should add the commonjs compat plugin so that `react-hot-loader/webpack` and  `react-hot-loader/babel` keep working as they are.', 'add the plugin to babel?', "i'm a bit confused. i meant that we can use es modules everywhere in the code. we just need to make sure that the commonjs compat code is generated as part of babel compilation for entry points like `/babel` and `/webpack`. does this make sense? or are you saying this makes eslint fail?", "what i'm saying is that it currently works great the way it's written so instead of changing everything to es6 modules just to appease eslint it's easier to selectively disable the offending rule. no?", "> what i'm saying is that it currently works great the way it's written so instead of changing everything to es6 modules just to appease eslint it's easier to selectively disable the offending rule. no?works for me", "alright. i've finished fixing all the linting errors. give it a look if you want. i think/hope i didn't break anything. let's merge this soon to avoid merge conflicts", "yes. we use them in ember cli itself. and now that `ember-source` is a thing they are used there as well. we've also used them for e.g. `ember-cli-eslint` last year when we had to support eslint 2 and 3 at the same time.", 'use "eslint-config-simplabs". marcoow please check if those changes are okay. otherwise we\'ll have to adjust the linting rules.', 'marcoow pangratz updated the pr with a few adjustments', "marcoow i'll release `eslint-config-simplabs`. update this pr and then merge it", 'add ember import to torii authenticator. a jshint/eslint error was thrown after generating an authenticator that extends the torii one:> ember g authenticator github-auth-code --base-class=toriithis pr adds the missing line.', 'hm. failing tests - seem unrelated though...', 'the tests have passed but the build failed because of this message:> no output has been received in the last 10m0s. this potentially indicates a stalled build or something wrong with the build itself.could you restart the build?', 'the fastboot tests are failing. this is consistent across all jobs so restarting will most likely not help...', 'indeed. sorry for being sloppy. i pushed the fix that made tests pass locally. fingers crossed for travis.', "btw. how do you filter tests with `npm test`? i haven't found anything that works and thus needed to run the whole suit.", 'i always ran all of the node tests - no idea how to filter them actually ;)', "it seems like the tests haven't rerun after i added my second commit.", 'balinterdi: i restarted the build manually', "balinterdi: you had pushed a modified `bower.json` as well - i assume that's what broke the build.", 'i rebased commits and removed the `bower.json` - everything fine now', 'ah. that explains it. thanks!', "i primarily use the cli for managing migrations on postgresql.i use raw sql. rather than sequelize. if i'm doing something db-specific.  for example:```  down: function (queryinterface. sequelize) { // eslint-disable-line no-unused-vars    return queryinterface.sequelize.query(`      drop function mm_to_numeric(text);    `);  }.```will that work for you?", 'maybe a good time to look into eslint', 'paging alallier for a pr on this.', 'can you fix eslint errors? :)', "charpeni looks like i've broken it during my previous commit. what kind of command i should run locally to prevent that? i've run npm run eslint. but it outputs a lot of errors always.", "aksonov you're right. i added example folder into eslint scripts but not into ci since it contains a lot of errors. i'll do a pull request to remove example folder from `npm run eslint`.", 'remove example folder from eslint. cc aksonov', 'by analyzing the blame information on this pull request. we identified mokto. ffxsam and lelandrichardson to be potential reviewers', 'please fix the eslint errors.you can test it locally with `npm run eslint`.', "indeed there were some space indentation errors. haven't checked eslint to make sure it passes. thanks for the heads up.", 'rseemann could you also fix eslint errors?', "swordsman-inaction it doesn't matter actually. if your pr changes state properly without settings action.parent. could you fix conflicts and eslint errors?", 'swordsman-inaction ok then i can see how this makes sense.  besides the eslint and conflicts. the only other thing that comes to mind is using `action.data`.  should that be so generic. or should it be `action.popnum` or something?', "looks ok to me but i don't fully understand - maybe i haven't needed this myself yet.  would it be possible to make the tab have its own `<touchableopacity>` that intercepted the tap if there is a need to do something (non-standard?) like this?  is this just a more convenient alternative or are there other benefits?can you resolve conflicts and eslint?as a side note (not about this pr). that `condition` and how this whole section of the code works gives me a headache.", 'so in my examples. i am showing that you can use this plugin to bundle valid html web components.  web components feature 4 new technologies that exists native-ly in a few popular browsers including chrome and firefox.  one main feature of web components is "custom element" which exposes an api class called "htmlelement"  which you can extend and create your own custom element.  semistandard is using eslint or standard or something to make a check in the js files and doesn\'t recognize "htmlelement" as a valid class possibly there\'s a setting or the library is outdated. hence it fails.  how familiar are you with the semistandard library and are there ways to stub in the htmlelement class?', "sasslint run twice with html webpack plugin. i got your plugin working to create index.html from your bone stock index.ejs and it correctly creates my assets/index.html in development mode. however. it now runs sasslint (via sasslint-webpack-plugin) twice on every startup (& possibly eslint). if i comment the plugin out. it definitely only runs once. both runs happen immediately before packages are analyzed and emitted. i tried adding ''html-webpack-plugin' to sasslint-plugin's 'ignoreplugins'. but that did not make any difference", "the html-webpack-plugin uses a child compiler like extract text plugin and some other loaders.a child compilation starts another compile run.if the lint plugins don't handle this correctly they run twice", 'found the problem - sasslint allows you to ignore other plugins. but html-webpack-plugin uses a unique name for each compiler instance that includes the output filename.it would be nice to add a new "compilername" option to your plugin so that you can explicitly name each child process. that way each plugin instance can listed individually in sasslint\'s ignore list to support multiple output files without having to include the full path and quote marks.for anyone who finds this - here is a workaround```new plugins.sasslint({    ignoreplugins: [        \'extract-text-webpack-plugin\'.        // html plugin name contains output filename        \'html-webpack-plugin for "index.html"\'    ]})```', 'cool', "i have a .eslintrc file that i haven't committed (and is currently full of too-strict rules). i ran the recommended rules and that caught a few things already.", 'update dependencies. update eslint and babel-eslint to fix the estraverse-fb dependency issue.to pass our own styleguide/tests the `\'use strict\'` was required.this works for es6 would like someone that still uses es5 to confirm.also had to change `"sourcetype": "string"` to `"sourcetype": "module"` for the linting to work on es6 import styles at all. i think this is fine since we create mostly modular es6 modules anyways that are then later packed/bundled with builders.', 'this lgtm :+1:. still passes on an es5 project', 'i updated my pr but `argv._` is not gonna work for me. my lint scripts look like this:```godaddy-js-style-eslint -c .eslintrc server common testgodaddy-js-style-jscs -r checkstyle server common test```using `argv._` strips out `-c .eslintrc` and `-r checkstyle` which allows me to pass my own eslint config file (which extends the gd config) or change the output format for jenkins.', 'interesting. i would file those use cases under "worked by accident." let me think about how to support those and this at the same time. will get back to you.edir: when i say "worked by accident" i mean that from a `fashion-show` perspective. the `targets` option is meant to be the set of file path targets passed to `eslint` and `jscs`', 'gzurbach unfortunately i have not had a chance yet to really think through it yet. my current thought process is to expose programmatically in `fashion-show` a way to optionally specify either the `jscs` or `eslint` config and then pass those down in our binary scripts.', "using editor inside an iframe. hello.i tried to use editor inside an iframe that i have on the page. but it's not really working. it breaks on adding event listeners. i looked into it  and i think the problem is in `init` function inside **modals.js**.```javascriptconst wrapper = document.getelementbyid(wrapperid); // eslint-disable-line no-undef```error:```javascriptuncaught typeerror: cannot read property 'addeventlistener' of null    at t.init (react-draft-wysiwyg.js:34)    at e.value (react-draft-wysiwyg.js:32)    at reactcompositecomponent.js:265    at measurelifecycleperf (reactcompositecomponent.js:75)    at reactcompositecomponent.js:264    at callbackqueue.notifyall (callbackqueue.js:76)    at reactreconciletransaction.close (reactreconciletransaction.js:80)    at reactreconciletransaction.closeall (transaction.js:206)    at reactreconciletransaction.perform (transaction.js:153)    at reactupdatesflushtransaction.perform (transaction.js:140)```i tried to build it myself but faced some problems...is this something you can look into?thanks", 'hey rogyvoje: i will check this issue soon. thanks a lot for bringing it up.', 'hey jpuri. will do as soon as possible. thanks for letting me know', 'closing the issue as there is no response. issue can be re-opened if required.', 'updating linting files. fixing code climate error related to old settings of esling## descriptionit seems that now the eslint configuration files need to have an extension (.json)## motivation and contextremove that error from code climate checks## types of changes- [x] bug fix (non-breaking change which fixes an issue)']