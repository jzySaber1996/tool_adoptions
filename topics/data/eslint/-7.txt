['add self:eslint. see #2 when run under the context of genesis starter theme. this `self:eslint` passes.', "yeah. i just copied over the comment from `eslint-config-defaults` instead of re-using the old comment there. i didn't realize that their comment there was so confusing. though.", 'bump.this would be nice also if you add {"switchcase": 1} to eslint rules according to your decision on switch statement indenting.', "add npmignore to eslint-config-airbnb. it only makes sense now that there's a `test` directory.", 'ariporad :+1: :+1:', "thanks. but i'd prefer not to ignore this. test files should always be published to `npm`. so that `npm explore foo && npm install foo && npm test` always works.", 'style/eslint prettier. i realize i kinda liked it without ending semicolons :/', 'apply eslint config', 'fix eslint exceptions. ## type of issuecode quality improvement## descriptionthis is a tracking issue for code quality improvements. the `.eslintrc` files include many exceptions which are not actually good ideas (see the comments in those files).anyone who has time is encouraged to fix code which violates them. and. if possible. remove those exceptions. everything which eslint could `--fix` automatically has already been taken care of. i recommend removing at most one quality issue per pr. to keep the diffs manageable.', 'please fix linting errors. you can use `eslint --fix`', 'jbadyoulike please fix the linting errors. `eslint --fix` might help', "dbemiller sorry. i deleted the repo by accident. is it ok if i create a new pr for this branch but rebased?btw. i ran eslint and it didn't show any error or warning about the code", 'i\'ll remove it from "posttest" for now.i would recommend re-enabling it later. either fully or in quiet mode (which only shows errors not warnings).currently quiet mode takes the log from ~13.000 to ~600 lines of output from eslint.', 'alright remove eslint from posttest. the logs are looking much nicer :smile:', "vkarpov15 eslint passes running `eslint . --quiet` with current settings. i'm not spotting any new :fire: in the tests.travis ci tests on this branch have the same errors as master.running the tests on my local machine has been flakier than travis ci :frowning: .so it would probably be a good idea to run the tests on a different machine.just to be sure no :bug: were introduced.but it should be good to go. :smile:", "what do you mean how to stop it...?you have a modified eslint setup which obviously isn't compatible with the way the code is structured.so you either go with the project's guideline or you use your own but you'd have to change all the code style to make it pass.", 'henri-hulski just add a comment at the top of fileupload.js and request.js``` js/* eslint-env browser */```', 'eslint requires node 4 atleast it seems (per package.json).', 'fix eslint warning', "i'm going to merge now because test suite is broken for unrelated reasons.", "hmmm. ok. i'm up for seeing what lots of constants can do for us. can we follow this pr up with some linting and maybe some flow work? i'd really like to know that the constant i'm using is defined by the constants file. i don't see a rule for this in eslint. but maybe flow would catch it?", 'vonovak good idea to pass direction. but please fix eslint :)', 'can you fix eslint errors?', 'can you fix eslint?', 'charpeni fixed issue reported by eslint and rebased.', "that's just a linting issue -- do you use jshint or jscs or eslint? by default. `require` isn't available in browsers. so your linter is telling you that it doesn't think it's defined. so you need to tell it that `require` is a global. which you can do in the linter's config file. or at the top of the file in which you reference it you can put `/* global require */`.", "no i haven't used any of them jshint or jscs or eslint. i am kind of new to ember and electron. but after writing global requireon top of the file in controller section of my app. now it doesn't get build. and it throws a bunch of errorwhere am i wrong ?my sample code now looks likeimport ember from 'ember';global require;export default ember.controller.extend({actions: {center() {const {remote} = require('electron');const {browserwindow} = remote;const win = browserwindow.getfocusedwindow();  win.center();     }});", "sure. let's improve `.eslintrc`", 'improve .eslintrc. #17', "jhwohlgemuth that would be awesome and very much appreciated!  i think your task list sounds perfect.  the only real concern i have over eslint is possible performance issues over jshint. but i think that's just a fact we have to deal with since ultimately eslint will help us do a lot more.i'm happy to answer any questions you have as you go.", 'mramato would you like me to tackle transitioning the sandcastle app from jshint to eslint in the same pr for replacing jshint with eslint in the cesium source?at this point. i am unsure of the work required to make the switch for the sandcastle app...> **semi-related question**: have you guys ever considered handling the sandcastle app as a separate project/repo? feasibly. you could even share your eslint config as a npm module (something like `eslint-config-cesium` or `eslint-config-agi`)', "are we confident we aren't losing any rules from jshint here?  at some point we need to explore what new rules eslint could help us with that jshint couldn't.  when we do es6 modules for cesium. i'm sure this will be a big help.kring since you've been using `eslint` in your other projects. do you have any suggestions here?", "jhwohlgemuth thanks for getting this started.  i think that's all of the comments i have for now. but i still want to play with this some more and also educate myself better regarding eslint as a whole.before we merge this. we'll also want to update our webstorm and vs code configs to use our eslint settings instead of jshint. but we can do that at the end.thanks again!", "kazhetsia. nuzhno eshchio razreshit' generatory v eslint. esli ne oshibaius'.", 'create eslint.js in each directory and use that as default config', 'feat: add and configure eslint', 'can one of the admins verify this patch?', 'bumped yeoman and eslint dependencies', "i've started working on this", "geek it seems that all the tests are corrected so i don't have to do a pr at this moment. also. should i close this?", 'build.sh references jshint. but the project uses eslint through lab now?also: should we be using pre-commit hooks instead. through something like husky?', 'if we have a working ci system on our pull requests. like we do today... and people run tests prior to a commit. i think we can avoid the hook.  i know you can force a commit and avoid the hook. just not a fan of adding it in the first place.']