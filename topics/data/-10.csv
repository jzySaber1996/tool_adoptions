redux-saga/redux-saga,eslint,2016-10-02T16:46:52Z,but why should such thing be constrained at this level? more appropriate place for such a constraint would be an `eslint` rule,negative
redux-saga/redux-saga,eslint,2016-10-02T19:25:40Z,could you please give an example? i am kinda struggling to find the best place to put `eslint` rule for that.,negative
jprichardson/electron-mocha,mocha,2015-10-16T18:59:03Z,i also prefer not having to create the extra file. what perfect timing!,positive
jprichardson/electron-mocha,mocha,2015-10-16T19:14:30Z,decided to merge because i anticipate demand will be high for this feature. thanks for your contribution.,positive
jprichardson/electron-mocha,mocha,2015-10-17T20:52:15Z,support `-w. --watch` and `--watch-extensions` args. i often use `--watch` in mocha.maybe this feature can use another method to complete. but usually need to restart electron (it is very slow).,neutral
jprichardson/electron-mocha,mocha,2015-11-04T12:43:23Z,add support for mocha.opts. this enables support for `mocha.opts` simply using the original mocha code.thanks for electron-mocha!,positive
jprichardson/electron-mocha,mocha,2015-11-05T00:34:56Z,i guess #17 is a problem on using electron-mocha programatically.  this issue occurs only when using electron-mocha as cli tool.  at least `bin/electron-mocha` doesn't propagate exit status now.this program should propagate exit status as below.mocha exits on renderer process -> main process exits -> command line process exits#17 resolves a problem at second one. but the problem for the last one remains.  this pr fixes it.,negative
jprichardson/electron-mocha,mocha,2015-11-05T16:14:08Z,awesome. thanks!,positive
jprichardson/electron-mocha,mocha,2015-11-06T14:15:08Z,thank for the reply! i tried the fix and it wasn't an immediate game changer. i have plans to spend more time figuring out the root cause of this issue. but i can't provide an exact time frame. i'll keep this issue up to date as i find time to continue researching the issue.,positive
ramda/ramda,jshint,2014-07-05T00:39:40Z,no. my comment was before your last change.  i've merged your change into the codebase.this should be all you have to do. assuming you've already installed node:```npm install -g grunt```then. if you haven't done this. from the ramda project:```npm install```(this might take a minute or two.)after that you can run any of these commands whenever you like:```grunt uglify  (builds ramda.min.js)grunt jshint  (checks the code against jshint)grunt mocha   (runs the unit tests)grunt docco   (rebuilds the docs)```there are also some tasks that are combined:```grunt test    (runs jshint and mocha)grunt min     (runs jshint. mocha. and uglify)```all of this is configured in `gruntfile.js`.  we may eventually switch over to using a similar. but faster tool called gulp. but it's not a high priority.opening `index.html` is a fine alternative to running the tests from grunt.  i usually do both.  but somehow we would like to know that the code is passing jshint.,neutral
postcss/postcss-mixins,eslint,2015-02-25T18:40:14Z,i am open to allow custom rules in stylelint (like eslint accepts custom rules from a folder). but i am not open to put non standard stuff into core.,neutral
serverless/serverless,mocha,2015-10-26T16:33:47Z,well. i thought the tests were successful but when i take a closer look. i saw that the lambda code are not receiving anything on the event object. locally with the jaws run command it works. but when i upload it. event return {}.this is my request parameter:"integration.request.header.x_mail_list_client_id": "method.request.header.x_mail_list_client_id"in the code i'm trying to acces it with event.x_mail_list_client_id.joemocha can you show me an example of how to get this header on the code?,negative
serverless/serverless,mocha,2015-11-10T04:08:56Z,radhomero it works. thank you very much. my problem was caused because i was putting the headers on the requestparameters instead of the request templates like joemocha was suggesting. noob questions: what's the difference between your method and the joemocha method? why this method works locally but not when i upload it to aws?,positive
Azure/autorest,mocha,2016-12-08T21:47:35Z,pull recent tsc and mocha,neutral
Azure/autorest,mocha,2016-12-09T17:47:17Z,amarzavery have you seen this too?,neutral
Azure/autorest,mocha,2016-12-09T17:50:55Z,lgtm,neutral
pattern-lab/patternlab-node,eslint,2016-02-27T18:00:38Z,code cleanup. <!-- **please read the contribution guidelines first. and target the `dev` branch!** -->addresses #274 .this pr is for code review as we develop our code formatting standards. we are re-doing white space. fixing errors. and removing superfluous iifes.i'm reformatting js files to pass lint as i go. based on my editor's integrated eslint feedback. bmuenzenmeyer. would you please give the reformatted js a look and tell me what's in there that hurts your eyes?,negative
pattern-lab/patternlab-node,eslint,2016-02-28T02:40:19Z,hey geoffp i see you've been busy today!thanks for taking the lead on this - i am happy that we'll be in a more consistent place once done.as far as eye bleeding goes. the only thing that stood out to me so far was``` for (i = 0; i < items.indexof(loopnumberstring); i++) {```i am not accustomed to a space after the for - but i can get used to it - leave it this way.,negative
pattern-lab/patternlab-node,eslint,2016-02-28T04:52:17Z,i wasn't for doing it that way at first. myself. but i was eventually persuaded by somebody or other's best practices this or that. probably crockford. i find it's kind of nice to visually distinguish this and `if` from function calls.,positive
pattern-lab/patternlab-node,eslint,2016-02-28T05:00:04Z,pulled this down and running now. there are a lot of eslint errors. some are good. some seem a bit crazy. will research tweaks and discuss,negative
pattern-lab/patternlab-node,eslint,2016-02-28T05:55:34Z,reassigned you to review what i did,neutral
pattern-lab/patternlab-node,eslint,2016-03-09T18:20:57Z,right - i saw that too. in addition to eslint. it's a good bit of busy work that can be put into #241,positive
airbnb/javascript,eslint,2015-07-02T17:47:25Z,o.o isn't this file supposed to be valid json. which can't have comments? can `eslint` parse this?,neutral
airbnb/javascript,eslint,2015-07-07T17:22:31Z,that would be rad. one thing to note is that eslint merges the user defined config with their default config whether you like it or not so the config as read by eslint might not be an exact match to what you give it unless you define all of the properties.as a part of my project i took the config you have here and did that merge before i divided it up so if you want to break stuff apart you could consider copying/forking/whatever-ing what i have since it may be duplicate work in some areas.,neutral
airbnb/javascript,eslint,2015-07-08T02:32:06Z,or a comment would be fine p3k. which you might have when using eslint:``` js/* global define */void function () {}(...)```,negative
airbnb/javascript,eslint,2015-07-11T23:59:18Z,move babel-eslint to peer dependencies. the reason for this is that config is something that is mixed in into a main config. and main project not necessarily has babel-eslint in there. internal dependency of eslint-config-airbnb is ignored (it is not a module. rules/keys are just mixed in by eslint). so when you run lint there is an error that "babel-eslint is not found".,negative
airbnb/javascript,eslint,2015-07-15T15:38:42Z,peerdeps have been deprecated. so prob it will not work,neutral
airbnb/javascript,eslint,2015-07-16T17:42:30Z,update react style guide with new rules. this formalizes the rules that we've been following for class extends react.component and also updates our ordering with whats in the eslintrc file.,neutral
airbnb/javascript,eslint,2015-07-16T17:42:49Z,also related: #420,neutral
airbnb/javascript,eslint,2015-07-16T19:33:40Z,nice.,positive
airbnb/javascript,eslint,2015-07-17T01:41:30Z,why does the .eslintrc prohibit unused function parameters? . hi.i'm coming at this from a node point of view. so sorry if it's weird for client side js.why do you prohibit unused function parameters in the .eslintrc? in node. (and afaik in the browser). ignoring one or more of your parameters for now isn't that big a deal (for example. if a callback gets err. info. res. ignoring info is fine.)thanks!ari,negative
airbnb/javascript,eslint,2015-07-20T19:14:00Z,where are the changes to the .eslint for this? someone submitted a pr to put `constructor` in the eslint file here: i don't want to abandon their pr in favor of this one without the .eslint change from #420 or similar,negative
airbnb/javascript,eslint,2015-07-20T19:18:43Z,no changes to eslintrc in this pr. #420 takes care of adding constructor. the rest of the order is already present in our eslintrc.,neutral
airbnb/javascript,eslint,2015-07-20T19:24:35Z,ok. lgtm,neutral
chaijs/chai,sauce,2012-11-29T08:03:07Z,you should be able to change your tests to `assert.strictequal(nan. nan)` and they will function as expected. basically. to maintain feature parity with node.js' include assertions. `assert.equal` must do only `==` testing with no special sauce. if you do `assert.strictequal()` that is the equivalent of using `expect(nan).to.equal(nan)`. which is where your `_.samevalue` comes into play.,neutral
velesin/jasmine-jquery,jasmine,2012-12-01T20:09:33Z,allows inclusion in specs even when jquery (specifically $) may not be defined.. this allows me to always include jasmine-jquery even if jquery isn't being used for a given spec.,neutral
velesin/jasmine-jquery,jasmine,2012-12-01T20:58:52Z,hmm. this seems kind of strange. can you you give me a code example of an actual use case? why would you jasmine-jquery/jquery for all but specific specs?,neutral
velesin/jasmine-jquery,jasmine,2012-12-07T08:05:08Z,i opted to not auto include it.  i appreciate the library. it's super useful.,positive
velesin/jasmine-jquery,jasmine,2012-12-07T08:07:56Z,i just got busy and forgot about this. jejacks0n i'm fine merging in the change if that's what holding you back from including it?,positive
velesin/jasmine-jquery,jasmine,2012-12-07T21:26:59Z,cool,positive
velesin/jasmine-jquery,jasmine,2012-12-11T04:45:47Z,i'm pretty sure jasmine-jquery is functioning properly and it's a problem with your environment. i'm going to close this issue. perhaps try on stack overflow or with the jstestdriver devs?,positive
opentable/hobknob,eslint,2015-10-07T16:20:17Z,bro. do you even lint?. switch the linter to eslint and be a lot stricter,neutral
opentable/hobknob,eslint,2015-10-07T16:26:46Z,i'll fix that. this was more to check i hadn't borked anything,neutral
googlemaps/google-maps-services-js,jasmine,2015-12-03T02:42:32Z,we've decided not to do this.i should also mention that i really missed jasmine's `objectcontaining` and `arraycontaining` matchers.,negative
solid/node-solid-server,standard,2015-03-25T18:34:54Z,at this moment. webid authentication already works. there are minor enhancements to be done. such as forwarding http requests to the https server. this problem is trivial when the two standard ports (80 and 443) are used but it's quite cumbersome when trying to use the same port. and i still haven't come up with a clean solution.,negative
sequelize/sequelize,eslint,2016-07-16T09:25:06Z,add eslint. first step towards #5963 even though a great part of the library (tests) is not in es6 yet and there are a whole lot of lint issues. i noticed that the continued development already introduced more style issues that did not get caught by jshint. i decided it would be the best to add the `.eslintrc` now. so ides can pick it up and warn contributors about style issues while writing code.i tried to match the current code style of the library as much as possible. some issues like `no-extra-boolean-cast` are heavily used in the whole library. so i added them as warning for now. it is configured to especially error on not using es6 (let/const/arrow functions etc) and i already used this file to do my refactors. one really nice thing is also that eslint detects indentation errors while jshint did not.after this. i will try to fix as many style issues i find. starting with the simple ones like indentation. and when everything is resolved we can remove jshint and add eslint to travis.,positive
sequelize/sequelize,jshint,2015-05-05T09:02:04Z,no problem itsravenous  :)assigning names to closure functions would also sometimes make debugging easier (you get the function name instead of undefined). if you can find a jshint optioon that enforces names to closure functions i think we'd be open to support and enforce iut,neutral
TryGhost/Ghost,mocha,2013-10-16T18:01:37Z,infra: intermittent test failures. it appears we're having stability issues again with the mocha unit tests and that some of the `before`. `beforeeach`. and `aftereach` hooks are timing out. as well. i sometimes see an issue with the casperjs test on the splitbutton tests.i think this is related to our switch from private travis to public travis but probably still deserves a look into a better solution than just increasing the timeouts.**edit:**apparently the database calls are just plain slow sometimes depending on the environment. even paralleling them doesn't help. as well. express can take a sec or two to spin up sometimes which causes the one api test to bomb. as a result we probably just need to set a high default timeout for the mocha tests.,positive
TryGhost/Ghost,mocha,2013-10-16T23:03:04Z,fixed intermittent test errors. fixes #1124- updated default mocha timeout to 15 seconds. any future tests that  depend on a timeout (and thus might be better off with a lower value)  can override the default setting which is now 15 seconds.- removed test-specific timeout overrides for the mocha tests.- fixed the editor/splitbutton tests to wait for the appropriate  selector instead of assuming the dom has been updated immediately.  should resolve intermittent timeouts when checking the splitbutton's  applied classes.,positive
TryGhost/Ghost,mocha,2013-10-17T05:41:14Z,do you know why those tests take so long? they seem very slow for unit tests.,neutral
TryGhost/Ghost,mocha,2013-10-17T10:23:43Z,jamesbloomer the main problem is the whole bringing up and tearing down of the db and fixtures before/after each test. this way we're ensuring clean and consistent fixtures. but due to the fact that we use sqlite (by default). each transaction requires opening the file. reading the file. writing to the file and saving the file -- which as it sounds can be very slow depending on the fs.,neutral
TryGhost/Ghost,mocha,2013-10-17T12:38:41Z,gotdibbs ah okay. they're db tests. i'd probably call them integration tests rather than unit tests. maybe a distinction in the grunt task might be useful? so then the fast tests can be run on their own. i'll have a look.,positive
thoov/mock-socket,mocha,2015-03-12T15:32:19Z,multiple sockets share connection. if you create multiple sockets pointing to the same server they will all share a single connection (i.e. when one is connected they all are. when a message is sent to one they all receive it. etc.)note: i ran into this running mocha tests in node.,neutral
thoov/mock-socket,mocha,2015-03-13T05:14:26Z,ghirigoro thanks for finding this. let me look into it and send an update.,positive
gaearon/react-hot-loader,eslint,2016-05-02T19:25:12Z,> should we have a different .eslintrc for the tests folder?yea. this is usually sensible.,neutral
gaearon/react-hot-loader,eslint,2016-05-02T20:38:43Z,(wip) added eslint. gaearon want to review the config?i still need to fix most of the files to conform to the configcloses #274,neutral
gaearon/react-hot-loader,eslint,2016-05-02T20:53:15Z,yeah --fix helps at least with the semicolons. adding semicolons in hundreds of lines manually would have been terrible,negative
gaearon/react-hot-loader,eslint,2016-05-02T21:06:12Z,gaearon you wrote some of the files without `const`. `import`. stuff like that. any reason to keep them like that. since we're building everything with babel? i need to either change them or change the eslint rules,neutral
gaearon/react-hot-loader,eslint,2016-05-02T21:33:48Z,if we use es modules everywhere. we should add the commonjs compat plugin so that `react-hot-loader/webpack` and  `react-hot-loader/babel` keep working as they are.,neutral
gaearon/react-hot-loader,eslint,2016-05-02T22:07:12Z,add the plugin to babel?,neutral
gaearon/react-hot-loader,eslint,2016-05-02T22:46:30Z,i’m a bit confused. i meant that we can use es modules everywhere in the code. we just need to make sure that the commonjs compat code is generated as part of babel compilation for entry points like `/babel` and `/webpack`. does this make sense? or are you saying this makes eslint fail?,negative
gaearon/react-hot-loader,eslint,2016-05-02T22:48:50Z,what i'm saying is that it currently works great the way it's written so instead of changing everything to es6 modules just to appease eslint it's easier to selectively disable the offending rule. no?,positive
gaearon/react-hot-loader,eslint,2016-05-02T23:24:37Z,> what i'm saying is that it currently works great the way it's written so instead of changing everything to es6 modules just to appease eslint it's easier to selectively disable the offending rule. no?works for me,positive
gaearon/react-hot-loader,eslint,2016-05-03T20:48:18Z,alright. i've finished fixing all the linting errors. give it a look if you want. i think/hope i didn't break anything. let's merge this soon to avoid merge conflicts,negative
simplabs/ember-simple-auth,eslint,2017-01-26T08:58:23Z,yes. we use them in ember cli itself. and now that `ember-source` is a thing they are used there as well. we've also used them for e.g. `ember-cli-eslint` last year when we had to support eslint 2 and 3 at the same time.,positive
simplabs/ember-simple-auth,eslint,2017-01-27T15:52:26Z,use "eslint-config-simplabs". marcoow please check if those changes are okay. otherwise we'll have to adjust the linting rules.,neutral
simplabs/ember-simple-auth,eslint,2017-01-31T12:19:57Z,marcoow pangratz updated the pr with a few adjustments,neutral
simplabs/ember-simple-auth,eslint,2017-01-31T12:35:52Z,marcoow i'll release `eslint-config-simplabs`. update this pr and then merge it,neutral
simplabs/ember-simple-auth,eslint,2017-02-11T15:51:49Z,add ember import to torii authenticator. a jshint/eslint error was thrown after generating an authenticator that extends the torii one:> ember g authenticator github-auth-code --base-class=toriithis pr adds the missing line.,negative
simplabs/ember-simple-auth,eslint,2017-02-13T10:16:02Z,hm. failing tests - seem unrelated though…,negative
simplabs/ember-simple-auth,eslint,2017-02-13T10:24:37Z,the tests have passed but the build failed because of this message:> no output has been received in the last 10m0s. this potentially indicates a stalled build or something wrong with the build itself.could you restart the build?,negative
simplabs/ember-simple-auth,eslint,2017-02-13T10:28:14Z,the fastboot tests are failing. this is consistent across all jobs so restarting will most likely not help…,negative
simplabs/ember-simple-auth,eslint,2017-02-13T21:07:13Z,indeed. sorry for being sloppy. i pushed the fix that made tests pass locally. fingers crossed for travis.,negative
simplabs/ember-simple-auth,eslint,2017-02-13T21:08:02Z,btw. how do you filter tests with `npm test`? i haven't found anything that works and thus needed to run the whole suit.,neutral
simplabs/ember-simple-auth,eslint,2017-02-14T11:40:32Z,i always ran all of the node tests - no idea how to filter them actually ;),neutral
simplabs/ember-simple-auth,eslint,2017-02-14T16:08:26Z,it seems like the tests haven't rerun after i added my second commit.,positive
simplabs/ember-simple-auth,eslint,2017-02-14T19:05:51Z,balinterdi: i restarted the build manually,neutral
simplabs/ember-simple-auth,eslint,2017-02-14T19:26:05Z,balinterdi: you had pushed a modified `bower.json` as well - i assume that's what broke the build.,negative
simplabs/ember-simple-auth,eslint,2017-02-15T08:49:33Z,i rebased commits and removed the `bower.json` - everything fine now,positive
simplabs/ember-simple-auth,eslint,2017-02-15T08:50:01Z,ah. that explains it. thanks!,positive
sequelize/cli,eslint,2016-12-06T16:21:23Z,i primarily use the cli for managing migrations on postgresql.i use raw sql. rather than sequelize. if i'm doing something db-specific.  for example:```  down: function (queryinterface. sequelize) { // eslint-disable-line no-unused-vars    return queryinterface.sequelize.query(`      drop function mm_to_numeric(text);    `);  }.```will that work for you?,negative
Hacker0x01/react-datepicker,karma,2014-09-22T09:32:11Z,ref #33,neutral
webpack/webpack,uglify,2017-04-06T12:45:39Z,try to remove the `lodash`. `moment` entries.also can you check if `module.context` is really what you are after? not `module.request`?that yielded quite ok results for me. also remove uglifyjs to check if it looks like what you are looking for.,neutral
webpack/webpack,uglify,2017-04-08T20:54:40Z,wait. does it mean that webpack doesn't have any tree shaking. it's just uglify with `unused: true`?i've read somewhere that it's using rollup.js. is that not true?,negative
webpack/webpack,uglify,2017-04-18T10:21:18Z,i have similar issue . hangs on  91% additional asset processing too long.my solution is use 'webpack-parallel-uglify-plugin' to replace uglifyjs plugin;hopes help```var paralleluglifyplugin = require('webpack-parallel-uglify-plugin');new paralleluglifyplugin({   cachedir: '.cache/'.   uglifyjs:{     output: {       comments: false     }.     compress: {       warnings: false     }   } })```for me. it reduce building time from 400s to 40s,positive
webpack/webpack,uglify,2017-04-19T15:01:42Z,also the uglifyjs compressor options need to be respected.  havent checked that they arent.,neutral
webpack/webpack,uglify,2017-04-25T19:12:07Z,make sure the js going "in" uglifyjs is compiled down to plain old js (es5),neutral
webpack/webpack,uglify,2017-04-27T13:07:35Z,i have noticed similar behavior. with commons chunk. source map dev tool plugin. and uglify no maps are generated. any update on this (or an alternate way to exclude vendor files from having sourcemaps generated) would be appreciated.,positive
webpack/webpack,uglify,2017-04-28T19:43:55Z,makes sense. i just don't understand why it's trying to pull uglifyjs into the bundle. i'm hoping it's just a dumb configuration error in my project.(i submitted the issue. just used my other account accidentally),negative
webpack/webpack,uglify,2017-05-02T02:52:29Z,chouhan - questions regarding the angular-cli belong in whatever medium the have designated for support requests.,neutral
webpack/webpack,uglify,2017-05-02T18:37:01Z,d3viant0ne - i did not get you. are you expecting me to rewrite the question in a proper format?i am looking for a solution to the above issue posted.,neutral
webpack/webpack,uglify,2017-05-03T20:28:07Z,priyajeet i'm not a webpack user. so i can't confirm this firsthand. if webpack is able to export just the used symbols from each module based on static analysis of an entire application then the `/*#__pure__*/` annotation would drop the unused down-levelled class iifes with the aforementioned babel plugin + uglify. otherwise it will not.rollup has the advantage of putting everything into the same namespace. webpack does not perform this optimization as far as i know. webpack puts each module into a separate function namespace.,negative
webpack/webpack,uglify,2017-05-04T22:49:23Z,`unusedcomp` wasn't dropped because it was referenced by the static `unusedcomp.proptypes` outside the class iife which is considered a side effect from uglify's perspective.i'm guessing that babel generated `unusedcomp.proptypes` outside of the iife? if it were generated inside the class iife. then the unreferenced `unusedcomp` would have been dropped.,negative
socketstream/socketstream,mocha,2014-01-02T15:53:18Z,i also got here by googling "nodeunit vs mocha". i'd like to point out that the op is misrepresenting mocha because the test was written incorrectly. the invocation of `done` should be inside the timeout callbacks. here's a corrected implementation:``` jsdescribe('test'. function() {    it('should pass'. function(done) {        settimeout(function(){            (true).should.be.equal(true);            done();        }. 300);    });    it('should fail'. function(done) {        settimeout(function(){            (true).should.be.equal(false);            done();        }. 100);    });});```this is not an argument for using mocha instead of nodeunit. i'm simply pointing out the error. and therefore the flaw with the logic in the op.,negative
acuminous/yadda,mocha,2014-10-10T07:28:51Z,i'm afraid i'm not sure. i don't use coffeescript. i can reproduce in the casper project. but not the mocha ones (not much use i know).,negative
prebid/Prebid.js,standard,2017-02-08T19:10:37Z,how do you reconcile these two statements?> prebid reserves the right to monitor and report on the performance of adapters.> prebid reserves the right to throttle. deactivate. or remove adapters programmatically or manually. based on defined performance standards and/ or run-time conditions.and> prebid will continue to support analytics via the registration of analytics adapters. all analytics will be subject to publisher opt-in.my understanding is that prebid reserves the right to phone home from a given client. which is. in essence. analytics. i am all for gathering data across the ecosystem about performance. though i would say:- if it is bundled into prebid code. it is a burden (albeit a small one) on a given publisher's website. performance data should probably be phoned home on a sample set (say 1%). with a customer toggle to disable (opt-out).- if is it not bundled into prebid. then what mechanism would we be using? we could setup a pingdom account which hits a representative endpoint provided by each bidder?,negative
prebid/Prebid.js,standard,2017-02-09T22:22:22Z,i haven't looked into all the details as of yet. but my hope was that a mono structure would give us a good compromise between single and multi repo structure. i feel like having separate repos for each adapter as a big overhead to manage.,positive
prebid/Prebid.js,standard,2017-02-16T20:38:23Z,prebid.js 0-19-0 javascript code contains non-standard characters.  0-19-0 prebid.js breaks the javascript code and i get a "invalid or unexpected token" error.,negative
prebid/Prebid.js,standard,2017-02-17T15:21:15Z,headerbidding i can't reproduce this issue. edit: sent you an email,neutral
prebid/Prebid.js,standard,2017-02-18T14:48:58Z,error was caused by using a text editor that dropped "text containing characters that cannot be represented in the file’s character set”  from the javascript code.,neutral
prebid/Prebid.js,standard,2017-02-18T15:09:43Z,headerbidding sorry for all the hassle. glad you figured it out finally.,positive
prebid/Prebid.js,standard,2017-02-18T16:00:52Z,is it allowed for javascript code to have non-standard characters?up to version 18. running the prebid.js  javascript through a html text editor has not been a problem.,neutral
prebid/Prebid.js,standard,2017-02-18T18:38:17Z,the exact character that broke the code for my javascript editor (microsoft expression web) was this one:�it is part of this sequence:w=["\n�\f\r â áš€á žâ€€â€�â€‚â€ƒ"."â€„â€…â€†â€‡â€ˆâ€‰â€šâ€¯â�ÿã€€\i am suspicious that the code may be corrupted... and even though it "works". i am hesitant to use it. it just doesn't look right to me. and even microsoft expression web's javascript editor can't handle it....note: the character "�" does not display correctly here. it is the circle with arrow (male sign) ♂ symbol.,negative
prebid/Prebid.js,standard,2017-02-18T18:55:24Z,after further testing. i found that this issue does also occur if i only choose the appnexus adapter.suspicious code section: regexp.prototype.test.e).i=["\n\f\r   ᠎    "."         　\u2028"."\u2029﻿"].you'll find it if you search for "regexp.prototype.test",neutral
prebid/Prebid.js,standard,2017-03-02T19:52:06Z,another option is to do the above with an additional api endpoint very similar to the command que.  one uncommon use-case missing above is module configuration.  so if we had an endpoint like `pbjs.registermodule("module". function({dependencies}. {configuration}){` you could use another endpoint to configure a module by name before it is run.there's possibly other ways to configure a module that don't require api changes that i'm not thinking of...edit - perhaps a `pbjs.config` object that gets passed into all modules as an additional dependency and they can do with it as they wish..,neutral
prebid/Prebid.js,standard,2017-03-03T02:46:29Z,cool stuff. let me simmer on this a bit.,positive
prebid/Prebid.js,standard,2017-03-06T23:11:05Z,can you modify this so that you can pass in a path to the file. the same way you can for standard adapters? thanks!,positive
arose/ngl,standard,2016-09-06T15:37:50Z,so the moto g4 (which doesn't work) says this:angle_instanced_arraysext_blend_minmaxext_texture_filter_anisotropicwebkit_ext_texture_filter_anisotropicoes_element_index_uintoes_standard_derivativesoes_texture_floatoes_texture_float_linearoes_texture_half_floatoes_texture_half_float_linearoes_vertex_array_objectwebgl_compressed_texture_atcwebkit_webgl_compressed_texture_atcwebgl_compressed_texture_etc1webgl_debug_renderer_infowebgl_debug_shaderswebgl_lose_contextwebkit_webgl_lose_contextstill trying to get hands back on the other devices (their owners are out of the office...),neutral
Automattic/mongoose,mocha,2012-12-17T17:54:26Z,not sure about why mocha is failing. maybe `mongoose.connect(cfg.mongo.uri. cfg.mongo.db)` is in every file which would be reopening the same connection over and over?,negative
pouchdb/pouchdb,eslint,2015-04-21T10:19:21Z,maybe a good time to look into eslint,positive
pouchdb/pouchdb,jshint,2013-02-21T00:54:42Z,modularise utils so it can be included as a whole. so we dont have to write ```for (var k in utils) {  global[k] = global[k] || utils[k];}```or masses of global statements for jshint everywhere,neutral
pouchdb/pouchdb,jshint,2013-03-09T11:56:04Z,daleharvey any ideas for this?i realised the the files werent being linted while mucking around for #549 changing `gruntfile.js` to lint the files breaks the build (due to numbers lint errors)i'm thinking we can abstract out the jshint options into a `.jshintrc` and specify individual rules at the top of the individual files,neutral
pouchdb/pouchdb,jshint,2013-03-09T19:29:05Z,awesome. thanks for this. just a nitpick but we are trying to use (#495) - fix jshint-grunt setupfor commit messages. but just for next time. glad to get linting back,positive
pouchdb/pouchdb,jshint,2013-03-10T00:32:25Z,i linted the actual gql plugin a while back.  i don't think i linted the tests; i can do that if you want.i see that you are using jshint instead of jslint.  i will rerun (i don't expect too many issues).,neutral
pouchdb/pouchdb,jshint,2013-03-19T06:56:15Z,strange. i can't replicate the error from the travis build._[edit]_ oh wait. those are jshint errors. i'll fix it.,negative
angular/protractor,jasmine,2015-05-22T14:05:26Z,as per our `contributing.md` guidelines. please ask questions like this on stackoverflow.also. i do not run into this problem running jasmine on my machine.  presumably you have an `it()` or something somewhere with an asynchronous callback function that you're failing to call,negative
angular/protractor,jasmine,2015-05-22T18:03:37Z,unfortunately. it's pretty hard to give any feedback on this then. it seems like  your second error is coming from `jasmine-spec-reporter`. so i can't really offer any feedback about that either.i'm going to close this as non-actionable - please open up a new issue if you can reproduce in one of the supported browsers.,positive
angular/protractor,jasmine,2015-05-28T22:04:44Z,same issue here. if you follow aksimo's suggestion above. it fixes the issue:'jasmine' instead of framework: 'jasmine2'.,neutral
angular/protractor,jasmine,2015-05-31T00:20:38Z,hint.file `jasmine-core/lib/jasmine-core/jasmine.js` contains  constant `var maximumspeccallbackdepth = 20;` and method `queuerunner.prototype.run`. method  `queuerunner.prototype.run clearstack`  runs callback 9 times sync. then it wraps callback in a `settimeout(.... 0);`.because of this callback is triggered async. jasmine runs next spec before webdriver quite current session => webdriver does not start new session => jasmines show timeout error.,negative
angular/protractor,jasmine,2015-06-09T14:26:11Z,thanks eddywashere you saved my day. this error is such a pain ...,negative
angular/protractor,jasmine,2015-06-16T09:20:48Z,where is default timeout for browser.wait?. i'm running tests with jasmine2. and have config set up with:```allscriptstimeout: 11000.getpagetimeout: 10000.jasminenodeopts: {  defaulttimeoutinterval: 90000}```i used to specify a timeout with each `browser.wait` call. e.g.:```browser.wait(function () {   ...}. 3000);```but when getting cross-browser tests to run. i discovered i didn't need to specify the 3000 manually and was better off letting it run until it hit the configured limits.but... now i'm running the tests locally again and it seems to ignore the configuration. i've checked that it is set up in the same way (using `browser.getprocessedconfig` and reviewing the output). but all my `browser.wait`s are failing too quickly. e.g. `failed: wait timed out after 110ms`.am i missing something obvious?,negative
angular/protractor,jasmine,2015-06-16T17:32:36Z,could you give a small example?,neutral
angular/protractor,jasmine,2015-06-16T20:33:14Z,not sure if this is related. but it'd be nice to suppress all the webdriver info messages (eg. 'executing'. 'done' messages). while helpful. it can be a bit 'noisy'.  i'm sure this is a webdriver preferences settings. just not sure how to configure it via protractor (or at least not seeing where that is documented).,negative
angular/protractor,selenium,2014-05-20T21:54:00Z,already did. trying to get some more information also here. thxis there a way to run protractor without selenium. are you giving some thought on this for the future?,neutral
angular/protractor,selenium,2014-05-20T22:34:34Z,fix(webdriver-manager): use follow-redirects instead of http. google changed selenium-server-standalone.jar's location and is returning 302http module does not follow redirectscloses #826,neutral
angular/protractor,selenium,2014-05-20T22:42:00Z,:+1:,neutral
angular/protractor,selenium,2014-05-20T22:43:04Z,sweet. thanks cesarandreu,positive
angular/protractor,selenium,2014-05-20T22:48:15Z,only problem is it doesn't seem to break out of the update script properly now. it just hangs (even though the chromedriver zip file was successfully unzipped).,positive
angular/protractor,selenium,2014-05-20T22:54:06Z,just noticed this by running it in my ci. looking into it now :(.,negative
angular/protractor,selenium,2014-05-20T22:54:36Z,you're referring to the script hanging. right?,neutral
angular/protractor,selenium,2014-05-20T22:59:10Z,i get the same. it just never breaks out and puts me back in the console. after ctrl+c'ing it's fine. because the files are cached at that point. so subsequent runs will succeed.,positive
angular/protractor,selenium,2014-05-21T01:33:53Z,fix(webdriver-manager): use request module instead of http. google changed selenium-server-standalone.jar's location and is returning 302http module does not follow redirectscloses #826,neutral
angular/protractor,selenium,2014-05-21T01:38:11Z,awesome. much appreciated.edit: verified the fix. thanks!,positive
angular/protractor,selenium,2014-05-21T03:57:13Z,verified working with circleci. my builds are now proceeding as expected. they're not public though.,neutral
angular/protractor,selenium,2014-05-21T11:23:02Z,i don't like selenium. it is really buggy. and special browsers need special drivers. that don't work on all platforms. i would like to create a runner. that will open browsers and close them when the test (running/done). nodejs has this child_process library. and it can be done with this.,positive
angular/protractor,selenium,2014-05-21T11:35:39Z,replace webdriver(selenium). i don't like selenium. it is really buggy. and special browsers need special drivers. that don't work on all platforms. and then configuring them takes time and its painfull.i would like to create a runner. that will open browsers and close them when the test are running/done. nodejs has this child_process library. and it can be done with this.,positive
angular/protractor,selenium,2014-05-21T16:35:08Z,sorry. protractor is based pretty heavily on top of webdriver and there is a lot of infrastructure around webdriver such as saucelabs and many companies internal setup. selenium does more than open browsers and close them. it takes care of all communication between the test and the browser.,positive
angular/protractor,selenium,2014-05-21T16:57:30Z,verified that this hangs. closing in favor of #830,neutral
angular/protractor,selenium,2014-05-21T17:11:47Z,sigh. it makes me super sad to have to muddy the dependencies with request and all of its sub-dependencies. but since follow-redirects isn't working. this seems preferable to re-writing the redirect following wheel. i'll fix up the style to be consistent and commit.,negative
angular/protractor,selenium,2014-05-21T17:20:39Z,there's also dealing with things like infinite redirects - i'm surprised this isn't natively part of the http module. oh well.,positive
angular/protractor,selenium,2014-05-21T17:20:55Z,merged as 6249efe57109d238044394636d623e0bd93dd4ad,neutral
angular/protractor,selenium,2014-05-21T21:43:20Z,ok. thxis there maybe a library that will allow me the following.i would like to have a server. where my app is running and all the tests are. then i have some virtual machines that are running e2e with protractor and are connected to the server running the app. i would like that server tells the clients(other machines) that the tests and/or app changed. and that they need to run the (new) tests again. something like karma does with socket.io. does anyone know if someone is already working on something like that.,neutral
angular/protractor,selenium,2014-05-23T04:27:30Z,output is `[launcher] chrome passed` when i close the browser. if a test is running and i accidentally close the browser or selenium goes down protractor test exit code is 1. which is fine. but the output doesn't suggest the test errored:```[launcher] chrome passed```branch: master,negative
angular/protractor,selenium,2014-05-27T08:13:18Z,protractor parallel test using selenium grid. hi all.i have read the #111 post (closed). where the last question raised was very relevant:"glepretre ... i want to split up my tests across several machines so that i can get a quicker result. multicapabilities allows you to do that across browsers. but i want to split up my tests even if i'm just using one browser."does anyone knows if there was any progress in that direction?many thanks.omer,negative
angular/protractor,selenium,2014-05-27T08:46:57Z,yay. they added it to selenium!,positive
angular/protractor,selenium,2014-05-27T17:12:27Z,do something like this: ```specs: [    './*_spec.js'].splittestsbetweencapabilities: true.  multicapabilities: [{    'browsername': chrome.    count: 10}].```note however. that keyword 'count' might be replaced with the keyword 'maxinstances' soon. also. this feature is in master right now and not yet released.,positive
angular/protractor,selenium,2014-05-28T14:33:12Z,i have tried this. but i saw it doesn't run in parallel but run all the tests on the same browser ten times.,neutral
angular/protractor,selenium,2014-05-28T16:56:13Z,you need this flag:```splittestsbetweencapabilities: true.```also. like i said. this feature isn't released yet. you need to grab it from master if you want it now. or you can wait for the next release.,positive
angular/protractor,selenium,2014-06-02T20:33:30Z,any output from the selenium standalone?,neutral
angular/protractor,selenium,2014-06-04T18:16:37Z,test(selenium): add a mock driver provider for integration testing. with `mockselenium: true` in the config. an instance of webdriver using afake executor will be used. this executor returns a successful test responsefor any command. and never connects to a real browser.,positive
angular/protractor,selenium,2014-06-04T19:48:10Z,hankduan quick look?,neutral
angular/protractor,selenium,2014-06-04T20:02:03Z,merged into master,neutral
angular/protractor,selenium,2014-06-04T20:16:45Z,looks good,positive
angular/protractor,selenium,2014-06-04T20:21:52Z,merged as ad33da8ecc76322cee36a7344042a52ff33c280c,neutral
angular/protractor,selenium,2014-06-04T21:13:19Z,iedriver also available at  - added it to the link description. fixed the platforms link.,neutral
angular/protractor,selenium,2014-06-05T19:22:12Z,how to run a standalone selenium server?,neutral
angular/protractor,selenium,2014-06-05T21:23:35Z,the getting started instructions page explains - look at the webdriver-manager command in your node command prompt. then set the seleniumurl in your config and set chromeonly=false.,neutral
angular/protractor,selenium,2014-06-05T22:47:44Z,huh. same thing seems to work for me. have you updated selenium standalone and chromedriver?,neutral
angular/protractor,selenium,2014-06-06T13:56:59Z,tested today and... it's working perfectly as expected! :) thanks a lot hankduan and the rest of the team. keep up the good work.,positive
angular/protractor,selenium,2014-06-17T17:24:30Z,protractor is limited by the features available in selenium/webdriver. so there is no better way to close the print dialog. you might be able to do the same as the solution you linked (sending the escape key. which would look like ```     browser.actions().     sendkeys(protractor.key.escape).     perform();```i haven't tried this yet though.,neutral
angular/protractor,selenium,2014-06-18T16:55:13Z,the problem is that you're specifying a port for the selenium server to be started on. and then trying to start two instances of it. the first one uses up the port and the second tries to get the same port `4444` and causes an error. you could fix the issue by not specifying `seleniumport` and letting the server pick an unused port. then. two servers will start in parallel and everything should work.there are a couple things protractor could do to make this experience better. we could have only one server start and provide both browsers. but that breaks our underlying structure of what's owned by the launcher and what's owned by an individual runner instance. we could also just provide a better warning if you attempt to use `seleniumport` and more than one capability.,neutral
angular/protractor,selenium,2014-06-18T17:25:12Z,can you share your configuration (or at least. how you're setting up the selenium server)? i tried this and can't reproduce the error.,neutral
angular/protractor,selenium,2014-06-19T12:13:03Z,ok thanks for your answer. it makes sense and it's pretty obvious...i got confused because the default `protractor.conf.js` that i had seemed to imply that specifying a `seleniumport` was compulsory to let protractor manage its own server. closing this.,negative
angular/protractor,selenium,2014-06-20T17:30:22Z,you're right. the error is in not starting chrome. can you post the logs from the selenium stand-alone server?,neutral
angular/protractor,karma,2015-04-15T17:04:22Z,sure.thanks spenoir for your suggestions and input,neutral
erming/shout,mocha,2014-11-17T20:18:39Z,add basic environment for unit testing with mocha. includes one test for link plugin and `util.js` file containing some helper methods for creating dummy irc-client/network/webservertests can be run with `npm test`,neutral
erming/shout,mocha,2014-11-17T20:21:44Z,also now you could add this project to  and include the badge to readme.md :),neutral
benbria/coffee-coverage,mocha,2014-07-14T04:31:19Z,add coffee-coverage/register for easier mocha testing. it's kinda annoying to have to add a `coverage.js` to every project with the same code that just registers coffee-coverage for mocha tests.  by adding this file. users can get sensible defaults for coffee-coverage without needing to add a registration file to their project at all. just install coffee-coverage and use the following command to run mocha:```mocha --require coffee-coverage/register --reporter html-cov > coverage.html```,negative
meanjs/mean,mocha,2015-03-06T19:22:22Z,#450 fix for hanging gulp on mongoose connections being left open. i updated the gulp build so that the mongoose connect/disconnect take place in the mocha task based on the lifecycle of the stream. this way. we can guarantee that the disconnect function is always called regardless of if the mocha tests fail or not. i'm also sending an error message to the task callback in the event that an error is generated by the tests. this way. gulp will finish in an error state if the tests fail and will finish in an ok state if they pass. i've tested this with passing and failing tests and the gulp build closes correctly now.,negative
meanjs/mean,mocha,2015-03-06T19:51:51Z,i'm fine with the change. it's actually what i've been doing in my projects before mean.js added gulp support. what happens when you don't have the error listener?,positive
meanjs/mean,mocha,2015-03-06T20:08:11Z,you want to report the error still so that a ci server will be able to see that the build failed if some of the tests failed. karma already reports the error because in the karma task you return a handle to the stream. the mocha task needs to manually send the error back up to gulp since you are not returning the reference to the stream.,neutral
meanjs/mean,mocha,2015-03-09T16:47:49Z,lgtm.,neutral
videojs/videojs-contrib-hls,standard,2015-05-13T19:16:33Z,how did you produce your blob file? does it have the same issues if you access it over standard http instead of through `blob:`?,neutral
rooseveltframework/roosevelt,eslint,2016-03-11T19:28:16Z,paging alallier for a pr on this.,neutral
electrode-io/electrode,karma,2017-02-01T04:31:32Z,is the karma test files the only ones you want to be able to structure differently?,neutral
admc/wd,selenium,2013-09-04T21:51:58Z,```http error: 500</h2><pre>org.openqa.selenium.webdriverexception: java.lang.nullpointerexcept```check your selenium  server log.btw you can run this just to rerun the cookie test:```mocha test/local/per-method-test.js -g 'comp|cookie'```,neutral
admc/wd,sauce,2012-05-07T12:59:23Z,new methods. new tests. - new methods: forward/back + elements related method (most from gamechanger)- added sauce test suite + initialization unit tests - an object may be passed to wd.remote. allowing base path modification. and more flexible config. (but passing parameters still works).,neutral
admc/wd,mocha,2013-01-25T08:01:29Z,ok this was merged into master since it is just a wrapper. i removed `mocha-with-promised` since i had some issue with running `mocha` and `mocha-with-promised` at the same time. i also wrote some sample code in the example dir. could someone familiar with q review it?,neutral
angular/angular-cli,uglify,2016-11-19T19:08:50Z,source maps are generated for production. there is currently no way to disable them.,neutral
angular/angular-cli,uglify,2016-11-23T21:40:42Z,it would be good if the files could at least be in folders or something. most clients complain about having one folder full of fonts. images. scripts. and styles. if they were at least broken into folders it would be less of a mess. is there anyway to have it keep the folder structure or have a folder structure?,neutral
angular/angular-cli,uglify,2016-12-09T05:54:46Z,i'm looking for disabling source map in production :p,negative
angular/angular-cli,uglify,2016-12-15T15:48:25Z,this is the expected behavior of uglifyjs.  is there an underlying issue you're trying to solve?,neutral
angular/angular-cli,uglify,2016-12-15T21:21:09Z,clydin thanks for looking at this issue.i have a vendor product ( including a command line tool written in java which i am using it with my gulp script to push generated js files by cli ) rejects invalid characters such as raw 0x1b in bundled js file per xml standard. also. mainly due to certain file size restriction by the product. i also got to supply --prod option to cli while bundling my project code.i tried following uglifyjs options against app.component.js transpiled by tsc just for my test.1)  uglifyjs -c -m **-b beautify=false -b ascii-only** -o a.js -- app.component.js2)  uglifyjs -c -m -o b.js -- app.component.jsseems both produce same uglified code except the escaped \x1b. so. if the options in 2) are used by default in cli. i like to set the options in 1) with cli and try to bundle actual my project.even though i am not sure the options in 1) will solve my issue but at least i like to try. but. i don't know yet how to specify the options with cli so if someone sheds a light on that. that would be great.,negative
angular/angular-cli,uglify,2016-12-16T23:10:52Z,the chatter in the logs looks like fairly normal info/warnings from uglifyjs. the error in your browser console is a different story. are you expecting your app to do a post here?,positive
aksonov/react-native-router-flux,eslint,2016-05-19T14:37:08Z,can you fix eslint errors? :),neutral
aksonov/react-native-router-flux,eslint,2016-05-26T13:42:22Z,charpeni looks like i've broken it during my previous commit. what kind of command i should run locally to prevent that? i've run npm run eslint. but it outputs a lot of errors always.,negative
aksonov/react-native-router-flux,eslint,2016-05-26T13:51:06Z,aksonov you're right. i added example folder into eslint scripts but not into ci since it contains a lot of errors. i'll do a pull request to remove example folder from `npm run eslint`.,negative
aksonov/react-native-router-flux,eslint,2016-05-26T14:31:20Z,remove example folder from eslint. cc aksonov,neutral
aksonov/react-native-router-flux,eslint,2016-05-26T14:31:21Z,by analyzing the blame information on this pull request. we identified mokto. ffxsam and lelandrichardson to be potential reviewers,neutral
aksonov/react-native-router-flux,eslint,2016-06-07T20:12:53Z,please fix the eslint errors.you can test it locally with `npm run eslint`.,neutral
aksonov/react-native-router-flux,eslint,2016-06-08T19:20:17Z,indeed there were some space indentation errors. haven't checked eslint to make sure it passes. thanks for the heads up.,positive
aksonov/react-native-router-flux,eslint,2016-06-09T07:57:07Z,rseemann could you also fix eslint errors?,neutral
aksonov/react-native-router-flux,eslint,2016-06-14T06:13:53Z,swordsman-inaction it doesn't matter actually. if your pr changes state properly without settings action.parent. could you fix conflicts and eslint errors?,neutral
aksonov/react-native-router-flux,eslint,2016-06-14T06:42:05Z,swordsman-inaction ok then i can see how this makes sense.  besides the eslint and conflicts. the only other thing that comes to mind is using `action.data`.  should that be so generic. or should it be `action.popnum` or something?,neutral
aksonov/react-native-router-flux,eslint,2016-06-16T04:57:11Z,looks ok to me but i don't fully understand - maybe i haven't needed this myself yet.  would it be possible to make the tab have its own `<touchableopacity>` that intercepted the tap if there is a need to do something (non-standard?) like this?  is this just a more convenient alternative or are there other benefits?can you resolve conflicts and eslint?as a side note (not about this pr). that `condition` and how this whole section of the code works gives me a headache.,negative
Project-OSRM/osrm-backend,standard,2017-04-06T15:04:16Z,i couldn't find a more general discussion on highway=service without extra tags. shouldn't they be considered as at least as restrictive as access=destination? or is it really a choice to allow them for standard routing?,neutral
npm/npm,standard,2014-09-03T21:14:28Z,it could be a problem with the openssl built into node. yeah. are you able to use node to connect to other ssl-protected sites. do you know?npm does not authenticate clients over ssl using client certificates. assuming you have a standard ssl ca bundle included with the synology linux distribution. the connection should establish correctly. if not. you may need to figure out how to provide the relevant ca certificate for npm's registry (globalsign is the vendor npm uses for its certificates). you can provide the certificate to npm using either the `--ca` (for the certificate file contents) or `--cafile` (path to the certificate file) configuration settings.,neutral
testem/testem,jshint,2015-02-09T15:00:31Z,jshint and editorconfig,neutral
DevExpress/testcafe,mocha,2016-03-01T13:26:05Z,when we say `should pass` or `should fail` we talk about underlying **tescafe test**. not the mocha test. is it clear?,negative
mochajs/mocha,mocha,2012-04-12T17:48:11Z,visionmedia  so this is a mocha bug or firefox/firebug exposing a global?,negative
mochajs/mocha,mocha,2012-04-12T18:00:25Z,it's definitely not mocha,neutral
mochajs/mocha,mocha,2012-04-13T16:48:35Z,is this a feature that should be added to commander.js. or something to be added to mocha?,neutral
mochajs/mocha,mocha,2012-04-13T17:40:24Z,fixes #158: removes jquery include from browser tests. removes jquery include from `test/browser/large.html`also updated unload  in `large.html` and `opts.html` to pass a functioninstead of `mocha.run` so that callback can be run on `end`,neutral
mochajs/mocha,mocha,2012-04-13T17:40:49Z,shwaydogg there's a js api now. but it's built to be.. an api haha not a super simple repl thing. if you wanted that why not just use the cli?,positive
mochajs/mocha,mocha,2012-04-13T19:43:23Z,should the browser reporter just append a `<div>` to the end of the body if one doesn't exist?  then it will work even if someone forgets `<div id=mocha></div>`,neutral
mochajs/mocha,mocha,2012-04-13T22:13:17Z,mocha.css is duplicated. the `makefile` creates a `mocha.css` in the project root by copying `/test/browser/style.css`. but this isn't used anywhere.  what is the purpose of this?  can it be removed to reduce the duplicated code?,neutral
mochajs/mocha,mocha,2012-04-13T23:11:22Z,brendannee we could do things like that but you never know how people will use it. for example what if there's a drupal module that wants to display mocha test output within the admin interface. i dont really want to introduce multiple options for something so simple/explicit (even if people forget it sometimes),neutral
mochajs/mocha,mocha,2012-04-13T23:12:33Z,awesome :d ideally we have some unit tests. my test/jsapi/index.js is just because i dont have time. so probably something more like the first,positive
mochajs/mocha,mocha,2012-04-14T17:02:49Z,tests added - should be good to go :),positive
mochajs/mocha,mocha,2012-04-15T17:43:58Z,weird git wont let me curl the `.patch`. i was going to squash these into one commit,negative
mochajs/mocha,mocha,2012-04-15T22:52:27Z,cool - i cleaned up those lines - ya the commits are a mess sorry. curling the patch works for me.,negative
mochajs/mocha,mocha,2012-04-16T16:06:27Z,i can just create a new branch with the one commit. and pull request that. if that's easier for you.,neutral
mochajs/mocha,mocha,2012-04-16T21:02:06Z,we have an issue for this. it's a known issue that we need a mechanism to defer mocha for these use-cases,neutral
mochajs/mocha,mocha,2012-04-18T22:32:13Z,no clue. doesn't sound like a mocha thing,positive
mochajs/mocha,mocha,2012-04-18T23:26:01Z,respect --expose-gc from mocha.opts,positive
mochajs/mocha,mocha,2012-04-19T21:31:39Z,before i filed this issue. i tried running my existing qunit test suite using that interface.  it failed. as it didn't recognize the module() api.  closer inspection of that code revealed that the interface only implements some of the apis listed at  and uses different names for certain things (eg suite vs. module).  what i'm suggesting is that if the file you linked to were extended to implement the majority or entirety of the actual qunit apis. this would lower the barrier existing projects using qunit to switch. because they'd be able to run their existing qunit test suite using mocha itself without making (many) changes.,negative
mochajs/mocha,mocha,2012-04-27T20:08:18Z,configure 'slow' property per test. hi! i'm using mocha in the browser.just the same way i can configure a single test 'timeout' threshold:``` javascriptit('should take less than 500ms'. function(done){  this.timeout(500);  settimeout(done. 300);});```it would be great to configure 'slow' threshold as there may be some functions heavier than others. maybe:``` javascriptit('would take less than 500ms'. function(done){  this.slow(500);  settimeout(done. 800);})```cheers.,positive
mochajs/mocha,mocha,2012-04-27T21:15:31Z,+1 from me,neutral
mochajs/mocha,mocha,2012-04-28T23:38:54Z,yeah that should have nothing to do with mocha since node caches require() exports. you would be dealing with the same object each time,neutral
mochajs/mocha,mocha,2012-04-29T02:19:04Z,yup. mocha doesn't clean up state for you. and it has no knowledge of third-party stuff like mocking libs so you use the before/after hooks to tear that stuff down. these libs could potentially listen on some mocha events but im not aware of any that do,negative
mochajs/mocha,mocha,2012-04-29T03:09:11Z,thank everything!! i'm your big fan.i will subscribe mocha mailing list.,positive
mochajs/mocha,mocha,2012-05-02T11:18:32Z,+1. because bug tracker is getting cluttered,negative
mochajs/mocha,mocha,2012-05-02T11:23:37Z,i am running into those too. and often (chai. node. mocha. all up2date).if it should not be happening...it there a test for that in mocha test suite? :),neutral
mochajs/mocha,mocha,2012-05-02T17:35:22Z,feature: add flag to show slow/pending tests. i would be nice if you could just do `mocha --print slow.pending` or something and. even though i'm using the dot matrix or spec reporters. at the end it would output the slow and pending tests.  when you start having hundreds or thousands of tests this would be a real help.  just a thought.,positive
mochajs/mocha,mocha,2012-05-02T22:20:45Z,allow multiple globals in mocha.opts. i tried doing the following in the mocha.opts file. none of these methods allowed for ignoring more than one global.```--globals "one. two. three"``````--globals one. two. three``````--globals one--globals two```,negative
mochajs/mocha,mocha,2012-05-02T22:33:27Z,weird ill patch that,neutral
mochajs/mocha,mocha,2012-05-02T22:34:24Z,seems ok to me (the first few are from mocha.opts):```./bin/mocha test --globals foo.bar.baz[ 'okglobala'. 'okglobalb'. 'okglobalc'. 'foo'. 'bar'. 'baz' ]```,neutral
mochajs/mocha,mocha,2012-05-02T22:34:58Z,in mocha.opts within mocha i have:```--globals okglobala.okglobalb--globals okglobalc```those work fine for me,positive
mochajs/mocha,mocha,2012-05-02T22:36:24Z,ah. the difference is that i had:```--globals one. two. three```with the spaces. it does indeed work when there are no spaces between the commas.,neutral
mochajs/mocha,mocha,2012-05-02T22:44:45Z,yeah spaces will cause it to be interpreted as separate args (unless quoted obviously),neutral
mochajs/mocha,mocha,2012-05-04T10:12:20Z,+1 as well.  i'm waiting in a fork that has this patch and would love to go back to mainline mocha.,positive
mochajs/mocha,mocha,2012-05-08T16:49:20Z,i figured out what the problem was for me. it's the same as this issue: visionmedia/mocha#316my callback function had already been executed with the `done()` call inside. and then another function threw an exception which causes mocha itself to call `done()`. the problem is actually just the wrong error output.maybe you have something like that as well? try removing the `done()` callback altogether and see if you have an uncaught exception.,negative
mochajs/mocha,mocha,2012-05-08T21:25:01Z,more reasonable arguments for callback of mocha.run. using the mocha.run callback in js api is pretty useless givin back only the (number of?) failures. so the `cb` in``` javascriptmocha.run(cb);```wouldn't receive anything sensible.usecase would be any of the js-api-using ones. for example running specific tests on request and responding with well... anything but just the number of failures.,neutral
mochajs/mocha,mocha,2012-05-08T21:31:24Z,yup. agreed. the js-api needs work in a few spots still,neutral
mochajs/mocha,mocha,2012-05-09T23:24:18Z,should timing badges take into account beforeeach/aftereach?. my beforeeach functions are pretty slow. and sometimes even dominate test time. (i set up test fixture data and initialize an ember app.) but the little timing badges that show up in the browser (above 50ms or so) do not include this time. they only seem to measure the time of the test functions themselves.i'm thinking that it would be sensible for the badges to include the beforeeach/aftereach time.(perhaps there are also other parts where these timings are used. like timeouts -- i'm fairly new to mocha.)what do you think?,positive
mochajs/mocha,mocha,2012-05-09T23:28:13Z,hmm tough call. maybe as a flag or something. i wouldn't want to see them all the time personally but yeah i see what you're saying,neutral
mochajs/mocha,mocha,2012-05-10T20:24:35Z,jgonera you don't need to load a url or a webserver with the grunt task. just local html files.i maintain html specs anyway. since i run them in browsers other than a less-than-perfectly simulated webkit. they are also very convenient for debugging. the fragility only comes from changes in mocha's api. which all reporters will run into. i have not run into any issues at all so far.,neutral
mochajs/mocha,mocha,2012-05-10T20:59:49Z,would it make sense to segregate fast and slow tests into separate files/directories and run them separately?,neutral
mochajs/mocha,mocha,2012-05-10T21:45:42Z,nanodeath if you wanted to yeah sure. no reason you couldn't. or you could even keep them in context and "tag" them. something like `it('should do something slow'. callback)` and `--grep slow` etc,neutral
mochajs/mocha,istanbul,2016-03-26T08:01:24Z,josmardias `mocha` exists so that `_mocha` can be run with node flags.  you will need to execute istanbul with node flags.,neutral
jantimon/html-webpack-plugin,eslint,2016-06-27T18:07:25Z,so in my examples. i am showing that you can use this plugin to bundle valid html web components.  web components feature 4 new technologies that exists native-ly in a few popular browsers including chrome and firefox.  one main feature of web components is "custom element" which exposes an api class called "htmlelement"  which you can extend and create your own custom element.  semistandard is using eslint or standard or something to make a check in the js files and doesn't recognize "htmlelement" as a valid class possibly there's a setting or the library is outdated. hence it fails.  how familiar are you with the semistandard library and are there ways to stub in the htmlelement class?,negative
jantimon/html-webpack-plugin,eslint,2016-07-05T14:58:32Z,sasslint run twice with html webpack plugin. i got your plugin working to create index.html from your bone stock index.ejs and it correctly creates my assets/index.html in development mode. however. it now runs sasslint (via sasslint-webpack-plugin) twice on every startup (& possibly eslint). if i comment the plugin out. it definitely only runs once. both runs happen immediately before packages are analyzed and emitted. i tried adding ''html-webpack-plugin' to sasslint-plugin's 'ignoreplugins'. but that did not make any difference,neutral
jantimon/html-webpack-plugin,eslint,2016-07-06T07:12:17Z,the html-webpack-plugin uses a child compiler like extract text plugin and some other loaders.a child compilation starts another compile run.if the lint plugins don't handle this correctly they run twice,neutral
jantimon/html-webpack-plugin,eslint,2016-07-07T03:53:06Z,found the problem - sasslint allows you to ignore other plugins. but html-webpack-plugin uses a unique name for each compiler instance that includes the output filename.it would be nice to add a new "compilername" option to your plugin so that you can explicitly name each child process. that way each plugin instance can listed individually in sasslint's ignore list to support multiple output files without having to include the full path and quote marks.for anyone who finds this - here is a workaround```new plugins.sasslint({    ignoreplugins: [        'extract-text-webpack-plugin'.        // html plugin name contains output filename        'html-webpack-plugin for "index.html"'    ]})```,positive
jantimon/html-webpack-plugin,eslint,2016-07-07T21:58:08Z,cool,positive
ipfs/js-ipfs,uglify,2017-01-31T09:09:23Z,just had a conversation on irc with dignifiedquire:```04:07 <dignifiedquire> haad: webpack numbers in the log are usually nonminified04:07 <+haad> dignifiedquire: even with after uglifying? :o04:07 <dignifiedquire> yes```**so it may be that the numbers here are incorrect**. will investigate. mark this issue as invalid for now. but don't close until we've verified that that's the case.,negative
google/closure-library,selenium,2015-09-09T21:52:20Z,always install selenium,neutral
mapbox/carmen,mocha,2013-07-18T17:30:12Z,y. not done porting all old tests... you should be able to get a good run with```mocha test/geocode.test.js```,neutral
wwayne/react-tooltip,standard,2015-11-03T13:54:52Z,maximum call stack size exceeded.. installed the tooltip with the standard settings from the example.  using latest chrome.`<p data-tip="hello world">tooltip</p>        <reacttooltip />` getting `uncaught rangeerror: maximum call stack size exceededdefineproperty`.no issue is present it we have `effect="solid"`.,neutral
wwayne/react-tooltip,standard,2015-11-06T10:59:26Z,thank you very much.,positive
apache/zeppelin,jshint,2016-03-25T09:05:47Z,felizbear thank you for a review!johnnyws thank you for stepping up and bringing this back to life. ci is failing on web application build. so may be you should check what `./grunt jshint` returns.,positive
apache/zeppelin,jshint,2016-04-04T01:45:50Z,mwkang great job! but as you can see - ci is failing now. you probably need to check in `zeppelin-webapp` what does `./grunt jshint` complain about.,positive
assaf/zombie,standard,2013-06-15T14:10:17Z,fix: xhr security check false positive. the xhr security check triggers a false positive (a security error). if a url provides a port even if this port is the standard one for http or https.so i added a normalization function that removes the port from the url object. when the port specified is the same as the protocol's default (443 for https and 80 for http).this error wis triggered on my side when using zombie.js to visit a site that used socket.ioit's a small issue. albeit annoying.this is a simple but good fix.,positive
MithrilJS/mithril.js,eslint,2016-04-21T16:30:04Z,i have a .eslintrc file that i haven't committed (and is currently full of too-strict rules). i ran the recommended rules and that caught a few things already.,neutral
datproject/dat,standard,2014-08-27T01:16:03Z,"to fully understand a particular object (e.g. a star. a planet. a galaxy). one wants to collect as many observations covering as many wavelengths as possible. "how can dat help solve this ?  automatic collections from various sites with various data file formats. sounds like a coordination problem at the initial stages.  getting observations in a standard format. and getting community / publishers agreement is a challenge.  how do you propose to solve that 1st step. despite dat ?,negative
nathanboktae/mocha-phantomjs,mocha,2014-09-24T06:22:14Z,right! how could i not have seen this.unfortunately this is only working when invoking mocha-phantomjs from the command line but how would i use this when invoking it programmatically using spawn ?`phantomjs lib/mocha-phantomjs.coffee <page> <reporter> <config-as-json>`,neutral
nathanboktae/mocha-phantomjs,mocha,2014-09-30T16:32:41Z,running the remote debugger. is there a way to run the [remote debugger]( from mocha-phantomjs?,neutral
godaddy/javascript,eslint,2016-04-01T12:20:19Z,update dependencies. update eslint and babel-eslint to fix the estraverse-fb dependency issue.to pass our own styleguide/tests the `'use strict'` was required.this works for es6 would like someone that still uses es5 to confirm.also had to change `"sourcetype": "string"` to `"sourcetype": "module"` for the linting to work on es6 import styles at all. i think this is fine since we create mostly modular es6 modules anyways that are then later packed/bundled with builders.,neutral
godaddy/javascript,eslint,2016-04-04T12:32:43Z,this lgtm :+1:. still passes on an es5 project,neutral
godaddy/javascript,eslint,2016-04-04T18:49:05Z,i updated my pr but `argv._` is not gonna work for me. my lint scripts look like this:```godaddy-js-style-eslint -c .eslintrc server common testgodaddy-js-style-jscs -r checkstyle server common test```using `argv._` strips out `-c .eslintrc` and `-r checkstyle` which allows me to pass my own eslint config file (which extends the gd config) or change the output format for jenkins.,negative
godaddy/javascript,eslint,2016-04-04T18:51:14Z,interesting. i would file those use cases under "worked by accident." let me think about how to support those and this at the same time. will get back to you.edir: when i say "worked by accident" i mean that from a `fashion-show` perspective. the `targets` option is meant to be the set of file path targets passed to `eslint` and `jscs`,neutral
godaddy/javascript,eslint,2016-04-12T04:49:18Z,gzurbach unfortunately i have not had a chance yet to really think through it yet. my current thought process is to expose programmatically in `fashion-show` a way to optionally specify either the `jscs` or `eslint` config and then pass those down in our binary scripts.,negative
rooseveltframework/teddy,mocha,2016-05-09T20:34:44Z,blocked by #32,neutral
SparkPost/node-sparkpost,mocha,2016-02-22T18:28:32Z,add a bare mocha test run to the default grunt tasks. the default 'test' grunt task uses istanbul to produce coverage data from the mocha test suite.  the test suite itself is not executed alone so the results are not visible.  adding a bare mocha test suite run to the test task would improve test result visibility.,negative
SparkPost/node-sparkpost,mocha,2016-02-23T13:12:53Z,#102: add mocha test call to default grunt task,neutral
SparkPost/node-sparkpost,mocha,2016-02-23T13:27:24Z,#102: added a mocha test task to the default grunt task. resolves #102,neutral
SparkPost/node-sparkpost,mocha,2016-03-03T15:24:54Z,we still need to be able to pass the reporter in. it looks like this is missing from the new task.,neutral
cloudchen/grunt-template-jasmine-requirejs,jasmine,2013-03-25T23:25:52Z,are you starting up a server for this configuration? you may be able to get away with basic configurations of requirejs without running the server (as long as there are no plugins that make ajax calls) but i can't tell from the config.have you tried running your specrunner in the browser?use `grunt jasmine:client:build` to generate a _specrunner.html file in your project root and open that in the browser. that might give more debug output than phantomjs and is a more familiar environment to troubleshoot in.,neutral
cloudchen/grunt-template-jasmine-requirejs,jasmine,2013-04-13T22:31:08Z,move require up above helper and vendor script references.  . allows for specifying require config files in the helpers. ```jasmine: {  src: 'app'.  options: {    helpers: [      'app/config.js'    ].    specs: ['spec/out/*_spec.js'].    template: require('grunt-template-jasmine-requirejs')  }}```,neutral
appium/appium,selenium,2013-08-14T08:21:24Z,appium setup. just started to use appium for mobile web app automation in ios and android.i download appium.dmg and ran the appium app. i already have a webdriver-testng framework using java with maven. i want to understand whether i need to use any appium jar file or put any maven dependency (appium server dependency like selenium server) in pom.xml ?,neutral
appium/appium,selenium,2013-08-14T22:07:41Z,guys - any solve for this yet??i have been trying for two days but not able to run multiple instruments on one machine- did any one gave this a try??,negative
appium/appium,selenium,2013-08-16T19:36:46Z,all tests pass.the purpose of this patch is to ensure appium responds to pending queries made by the selenium driver during an instruments shutdown.  this patch does _not_ handle the case where there are no pending queries and instruments dies.  in other words. when testing. you can't kill instruments any time. it has to be during a selenium call.a good test would be to take one of the test apps and set "application does not run in background" to yes in it's plist.  then. in a test. send the app to to the background via "mobile: background" and verify that selenium doesn't hang on the command for 60 seconds when the app and instruments die.thoughts?,neutral
appium/appium,selenium,2013-08-19T18:38:35Z,> cannot set the selection endi've never seen this before. what are you trying to do? also. someone on irc #selenium might know more about what this error means.,neutral
appium/appium,mocha,2013-07-23T18:16:16Z,i'd like to keep implementation code and test code in the same language. there are alternatives to the verbose way of writing mocha tests we currently use.,neutral
appium/appium,mocha,2013-07-23T18:33:13Z,> i'd like to keep implementation code and test code in the same languagemost of the contributors seem unable to write tests using the existing framework. if someone submits a pull request. are we going to write the tests for them? in contrast. it's easy for someone with no programming experience to write tests in ruby.if mocha wasn't such an obvious disaster in terms of callbacks then i'd be more open to writing tests using it.,neutral
agda/agda-stdlib,standard,2017-03-06T16:19:32Z,overloading of 'just' in data.maybe causes problems. i discovered this while trying to prove that `just` is injective.```open import data.maybe using (maybe ; just)open import relation.binary.propositionalequality using (_≡_ ; refl)bad : ∀ {a} {a : set a} {x y : a} → (just x) ≡ (just y) → x ≡ ybad p = {!!}good : ∀ {a} {a : set a} {x y : a} → (maybe.just x) ≡ (maybe.just y) → x ≡ ygood refl = refl```it's impossible to prove `bad`. but i had to ask in `#agda` before we figured out why.  as far as error messages go. it looks as though there are some unsolved metas in `just x ≡ just y`. but really the problem turns out to be that `just` is ambiguous. because it is defined as a constructor for not only `maybe` but also `any` and `all`. which are also defined in `data.maybe`.  i'm not really sure what the right solution is. but this seems like poor design on the part of the standard library (probably unintentional. but still).,negative
agda/agda-stdlib,standard,2017-03-06T16:23:48Z,on second thought. the standard library is probably fine. i think the biggest problem here is the error messages (or lack thereof).  there was nothing that even hinted to me that the problem might be ambiguity.,negative
jpuri/react-draft-wysiwyg,eslint,2017-01-06T11:36:29Z,using editor inside an iframe. hello.i tried to use editor inside an iframe that i have on the page. but it's not really working. it breaks on adding event listeners. i looked into it  and i think the problem is in `init` function inside **modals.js**.```javascriptconst wrapper = document.getelementbyid(wrapperid); // eslint-disable-line no-undef```error:```javascriptuncaught typeerror: cannot read property 'addeventlistener' of null    at t.init (react-draft-wysiwyg.js:34)    at e.value (react-draft-wysiwyg.js:32)    at reactcompositecomponent.js:265    at measurelifecycleperf (reactcompositecomponent.js:75)    at reactcompositecomponent.js:264    at callbackqueue.notifyall (callbackqueue.js:76)    at reactreconciletransaction.close (reactreconciletransaction.js:80)    at reactreconciletransaction.closeall (transaction.js:206)    at reactreconciletransaction.perform (transaction.js:153)    at reactupdatesflushtransaction.perform (transaction.js:140)```i tried to build it myself but faced some problems...is this something you can look into?thanks,negative
jpuri/react-draft-wysiwyg,eslint,2017-01-06T12:18:21Z,hey rogyvoje: i will check this issue soon. thanks a lot for bringing it up.,positive
jpuri/react-draft-wysiwyg,eslint,2017-01-09T10:16:43Z,hey jpuri. will do as soon as possible. thanks for letting me know,positive
jpuri/react-draft-wysiwyg,eslint,2017-01-22T10:32:17Z,closing the issue as there is no response. issue can be re-opened if required.,neutral
angular/angular-seed,selenium,2014-08-20T19:41:07Z,document that protractor requires jdk. the error message resulting from a missing jdk is somewhat cryptic:```------------------------------------pid: 20518 (capability: chrome #1)------------------------------------starting selenium standalone server...events.js:72         throw er; // unhandled 'error' event          ^error: spawn enoent    at errnoexception (child_process.js:998:11)    at process.childprocess._handle.onexit (child_process.js:789:34)[launcher] runner process exited with error code: 8```it appears that i'm not the only person that's run into this (#200). it would be helpful to mention the jdk requirement in the docs.,negative
angular/angular-seed,selenium,2014-08-31T21:16:10Z,jrothenbuhler - do you fancy putting together a pr on the readme for this?,neutral
angular/angular-seed,selenium,2014-09-03T16:28:29Z,yeah no problem. i'll take a stab at it.,negative
jshint/jshint,jshint,2012-03-22T16:04:40Z,may i request that this be reconsidered?for my own code i do indeed use a jshintrc file. however. i've just spent ages trying to work out why having 'nomen: false' in my config still resulted in 'dangling _' errors for some libraries i was using.turns out that some of these libraries already have their own jslint comments. one of which was 'nomen: true'.i agree that the jslint setting is unhelpfully backwards. but since the comment starts with 'jslint' rather than 'jshint' i see no alternative but to keep compatibility.as an aside. why is this option called 'nomen'? what does that mean?thanks.,negative
jshint/jshint,jshint,2012-03-22T17:23:12Z,antonkovalyov that's a very good question. i'm not aware of a specific case for `var`. i'm using the plates.js 3rd party file which includes it.the problem is my company's build process needs to successfully lint all code before it can go to production. including 3rd party code. yes. i could just remove the semicolon from plates.js and it would pass. but i was wondering if there was a jshint option that would simply allow it.by the way. the solution in #218 doesn't solve this:var x = 0[x. x+1. x+2].foreach(console.log)it seems like an option to allow defensive semicolons at the beginning of any line should be added. and that it shouldn't be specific to what the next symbol on the line is like the solution in #218 is (must have an open parenthesis as next symbol).,positive
jshint/jshint,jshint,2012-03-23T08:57:14Z,in addition: i think we should add a style warning (in jshint.next) if `default`is not the last block ;),neutral
jshint/jshint,jshint,2012-03-24T00:29:39Z,provide more information on how to fix issues. when an error is found. it would be nice if in addition to a message a link was provided to further information on how to fix the issue. for example the following two errors lead to an inevitable google search to find a stack overflow post that explains the problem. it would be nice to cut out the middle man and explain the solution on jshint itself.```line 7: var m = $(spec.id);missing "use strict" statement.line 2: "use strict";use the function form of "use strict".```,negative
jshint/jshint,jshint,2012-03-28T13:14:30Z,otakustay how does using that reporter differ from running `jshint --show-non-errors`? trying to decide whether we need it or not :),neutral
jshint/jshint,jshint,2012-03-31T00:52:54Z,parser not loading options comment correctly. having a hard time tracking down why the code supports parsing options from comments with "/\* jshint" and not "/_jshint". notice the white space. it's strange because i see the /_jshint into a "special" switch-case. but it doesn't seem to be working correctly.,neutral
jshint/jshint,jshint,2012-04-03T04:51:43Z,can you please provide more details?,neutral
jshint/jshint,jshint,2012-04-03T05:26:08Z,crazy. i just tried to repo and it's working as expected now. sorry for the mixup.,negative
jshint/jshint,jshint,2012-04-03T22:14:06Z,can we add 'collectgarbage()' to this list? it's a stupid ie idiosyncrasy. but when you need it. jshint can really ruin your day....,negative
jshint/jshint,jshint,2012-04-04T16:27:18Z,jshint-rhino.js default of rhino=true undocumented. counter-intuitive. when running jshint in rhino (using build/jshint-rhino.js produced by `make rhino` it defaults to having the rhino jshint option set to true.  i found this to be quite counter-intuitive because although i am using rhino on my development machines to run jshint on my javascript files. it does not imply that the javascript i am writing is intended to be run using rhino.  is this really a fair assumption?  note also that this assumption is not made in jshint-wsh.js as it does not set the wsh option to true.,negative
jshint/jshint,jshint,2012-04-04T22:23:17Z,make jshint-rhino.js runnable. as a convenience to users. it would be nice if `jshint-rhino.js` were directly runnable rather than requiring the user to invoke rhino and pass the script as an argument for every use of jshint.  to that end. these commits add a shebang line and mark `jshint-rhino.js` executable during build.,negative
jshint/jshint,jshint,2012-04-05T15:07:46Z,tried to apply the patch but there's a test failure. will check it later (gotta run now).,negative
jshint/jshint,jshint,2012-04-06T06:30:09Z,the test failure was caused by a different issue.,negative
jshint/jshint,jshint,2012-04-06T13:05:35Z,great.  thanks for merging it!,positive
jshint/jshint,jshint,2012-04-08T16:19:04Z,it turns out it isn't necessary at all. the problem was occurring because i was using a jsc wrapper to pipe stdin into jshint. and jsc `readline()` internally uses `getchar()`. which ends up separating the bytes in utf-8 and creating a string of nonsense that has a good chance of failing the unsafe character test.,negative
jshint/jshint,jshint,2012-04-17T16:55:18Z,can't turn off scripturl. smarttabs options from command line. using jshint-jshint-09e24d8. jshint ignores some options (including scripturl=false.smarttabs=false) when running from the command line (using env/rhino.js).,neutral
angular/angular.js,jasmine,2013-06-19T01:05:20Z,feat(minerr): add error stripping build step. here's a first pass at the error stripper. it strips and collects errors just fine. i'm have jasmine-node tests for this. but i'm not sure how to tie them in with the rest of angular. i would appreciate any feedback.,negative
angular/angular.js,jasmine,2013-06-19T01:43:45Z,i'd call the task something like `striperrors`. since `strip` is a little ambiguous (comments. eol whitespace. etc).also curious why you chose `multitask` over `task` (this is something that legitimately confuses me about grunt).otherwise lgtm.,negative
angular/angular.js,jasmine,2013-06-19T18:50:55Z,updated. the task is now called `strip-errors`. the grunt configuration uses an improved schema. i brought in tests. right now it's somewhat awkward because the tests are under lib/minerr/spec and we have a whole grunt task dedicated to running tests in that directory. thoughts?,positive
angular/angular.js,jasmine,2013-06-19T20:03:35Z,> ...the tests are under lib/minerr/spec and we have a whole grunt task dedicated to running tests in that directory. thoughts?this seems to be the grunt preferred way of doing things. as awkward as it is.,neutral
angular/angular.js,standard,2015-01-05T14:06:05Z,lgalfaso - so you are referring to the standard `select` and `option` directive combination rather than `ngoptions`? i don't know if this was ever supported either since the `addoption` method always took the value of the option as its parameter. which means that you would only get one option in the `selectcontroller`'s map,neutral
angular/angular.js,standard,2015-01-17T04:02:23Z,multiple support would be nice!,positive
angular/angular.js,standard,2015-01-20T13:22:17Z,pkozlowski-opensource you said you want to look into this later. right? i'll tentatively assign you for it.,neutral
angular/angular.js,standard,2015-01-20T13:27:14Z,yes. i will take care of this one. thnx narretz,positive
eventbrite/britecharts,eslint,2017-04-07T23:37:21Z,updating linting files. fixing code climate error related to old settings of esling## descriptionit seems that now the eslint configuration files need to have an extension (.json)## motivation and contextremove that error from code climate checks## types of changes- [x] bug fix (non-breaking change which fixes an issue),neutral
