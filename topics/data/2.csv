liferay/alloy-editor,karma,2015-03-25T12:55:50Z,remove singlerun config from karma.js,neutral
liferay/alloy-editor,karma,2015-03-25T12:56:23Z,just started reviewing :) <br><br>:octocat: _sent from [gh]()._,positive
liferay/alloy-editor,karma,2015-03-25T12:57:26Z,thank you. pull request merged! <br><br>:octocat: _sent from [gh]()._,neutral
pubnub/chat-engine,codacy,2017-11-15T17:44:22Z,added codacy badges,neutral
redux-saga/redux-saga,eslint,2017-10-07T11:42:08Z,ok. so one need to be careful when dealing with sparse arrays - empty indices are non-enumerable and `deepequal` uses `object.keys` under the hood. therefore we cannot simply compare explicit undefined with the implicit one in sparse array.personally i think that just suppressing eslint warning is enough and no more trickery should be added to that test.it has also an interesting side-effect for our use case - returned array (if not destructured) remains sparse. so it potentially could surprise someone. but until somebody reports this with some valid use case why he/she would like to have it non-sparse. i dont consider this much of a problem.thanks for patience and the pr. gonna merge this in a moment.,neutral
webpack-contrib/sass-loader,eslint,2017-02-15T13:57:07Z,that would be awesome. could you create a pr?  just create a directory called `examples` (thus it will be ignored by npm as configured in the `.npmignore`). please also setup eslint for the examples directory.,positive
ramda/ramda,mocha,2014-09-02T17:21:35Z,i'm glad to see that old stuff go!  that was one of the first things i did on this library. just trying to get the mocha asserts to work in the browser so that we could get the same tests to run both client and server.  i never expected it to last.  (but i also never wanted to revisit it!)  thanks!,positive
ramda/ramda,mocha,2014-09-06T17:33:50Z,example updates and fixes. hi all.i just recently stumbled on this whole "functional programming" thing and shortly after that stumbled on ramda. seems really neat!i noticed an error or two in the examples. one thing lead to another. and i ended up writing a mocha test to compile and run all the examples. i went through and tried to get them all in working order. i changed some around slightly but mostly just little syntax fixes.this commit only includes my fixes to the examples. if you would like me to add the mocha test that compiles and runs the examples as well. let me know and i will issue a separate pull request. thanks!,positive
ramda/ramda,mocha,2014-09-06T18:01:49Z,this is fantastic. kedashoe!> if you would like me to add the mocha test that compiles and runs the examples as well. let me know and i will issue a separate pull request.i would _love_ to see this. :),positive
ramda/ramda,mocha,2014-09-06T18:43:46Z,this looks good to me. apart from the notes davidchambers and i made on it. thanks for doing all this work!,positive
ramda/ramda,mocha,2014-09-06T21:51:50Z,commit updated with suggestions,neutral
ramda/ramda,mocha,2014-09-06T22:08:35Z,lgtm!,neutral
ramda/ramda,mocha,2014-09-07T00:28:15Z,agreed. looks good. thanks,positive
ramda/ramda,mocha,2014-09-07T01:59:38Z,this is great stuff!  thank you very much!i'd also love to see your mocha test to run the examples. but as you can see in the comments to #338. i'm sceptical about overloading the use of comments.  (note. however. that i'm sceptical enough that i don't particularly like using them both to annotate the code for its developers and to generate api documentation; that's a battle i've long lost.)  so i'd love to see this. but am not guaranteeing that i would actually want to use it.,negative
ramda/ramda,mocha,2014-09-07T04:40:59Z,sounds good. i won't have a ton of time the rest of the weekend but should have it up monday or tuesday (need to clean it up at least _a little_. i figured i may as well use this little exercise as a way to start learning this stuff.. you all can have a good laugh at my functional programming :),negative
ramda/ramda,mocha,2014-09-09T04:24:27Z,mocha test to compile and run ramda.js examples. alright. here is my frankenstein imperative/functional mocha test for the examples. there was really no hope i could write anything properly functional in a couple days so i just got what i had written to pass the lint checker and here it is.basic idea:- parse the function comments (and function declarations for mocha it() descriptions)- extract example. parse example so we can test the //=> 'eg' as assertions- inject our executable example source as a function in ramda (so that we can also run internal function examples)- run our example function. see what happensif you want to see all the assertions being run. you can just add `console.log(msg);` to `assertpairequal` (maybe grunt option for more verbose?),negative
ramda/ramda,mocha,2014-09-09T05:58:34Z,did you consider using jsdoc programmatically (or falling back to esprima) to access the examples without resorting to gnarly regular expressions?,neutral
ramda/ramda,mocha,2014-09-09T13:39:38Z,i won't have time to look over the code until this evening.  but i'm looking forward to it.you should know. though. that it's failing the travis build -- it just seems to be hanging.  i haven't investigated any further.,negative
ramda/ramda,mocha,2014-09-13T22:27:39Z,nicely done!i'm still not sure i'm a believer (doubts described in #338). but this in nice work. and as it's so unobtrusive. it seems well worth including for now.,negative
ramda/ramda,sauce,2014-11-14T11:42:09Z,_concat appears to be the secret sauce to alot of the function implementations. as a side note. i would be very interested to know if ramda provides a r object toarray() function?  i am still pulling in lodash frequently. just for this one function facility. looking at the implementation of concat. part of that could be pulled out and exposed as toarray?,negative
ramda/ramda,sauce,2014-11-14T16:19:38Z,can fix that problem by moving ie8-shim.js after ramda.js in index.html and aliasing `window.ramda = window.r`. but then it is failing silently after that for some reason.,negative
ramda/ramda,sauce,2014-11-14T16:41:43Z,thanks. buzzdecafe! i was planning to spend some time debugging this issue in a vm over the weekend. but it appears you beat me to it. i look forward to seeing what changes were required as i had difficulty reasoning about the problem.,negative
ramda/ramda,sauce,2014-11-14T16:54:37Z,this appears to solve the es3 problem. i am hoping it knocks off the android problem as well.,positive
ramda/ramda,sauce,2014-11-14T21:38:07Z,> [c]an you look into that?yes. i'll have time to do so during the weekend.,neutral
ramda/ramda,sauce,2014-11-14T21:41:27Z,btw. `unapply` used json in its tests--which is not defined in ie7 :stuck_out_tongue_winking_eye:,neutral
ramda/ramda,sauce,2014-11-14T22:04:51Z,d'oh! i didn't think of that.,neutral
ramda/ramda,sauce,2014-11-17T10:49:52Z,i attempted to `git bisect` my way to the problem commit. but `grunt sauce` has stopped cooperating (it's now hanging after printing `22 / 22 tests started`). i'll try again another time.it would be nice if sauce gave us a log of some sort. knowing that something is failing but not knowing _how_ it is failing is not particularly helpful.,negative
ramda/ramda,sauce,2014-11-17T12:19:44Z,i feel your pain. i have found it difficult to test sauce locally because of frequent timeouts. were you able to make any progress? i expect it is something to do with reporting to mocha. so i'm hoping it's a simple fix once we isolate where to work. and isn't it _really early in the morning_ there?,negative
ramda/ramda,sauce,2014-11-17T14:09:43Z,created "badsauce" branch for testing.,neutral
ramda/ramda,sauce,2014-11-17T16:33:18Z,> [i]sn't it _really early in the morning_ there?it was. rather. i had a lot of code to write in one weekend. i hope to open a substantial ramda pr today. :),positive
ramda/ramda,sauce,2014-11-18T14:35:28Z,hey! android tests all just started passing--did someone change something?,positive
ramda/ramda,sauce,2014-11-18T15:05:24Z,closing this one. since sauce seems happy now. weeeeeeeeeee,positive
ramda/ramda,sauce,2014-11-18T22:22:43Z,:tada:,neutral
ramda/ramda,sauce,2014-11-19T00:23:34Z,next time the sauce tests break :volcano:,neutral
ramda/ramda,sauce,2014-11-19T14:35:41Z,dare i ask: did you try this in sauce? if so let's merge it,neutral
ramda/ramda,sauce,2014-11-25T22:28:48Z,let's keep an eye on the sauce tests please. all are now failing. not sure who did it. but pretty sure it wasn't me . . .,negative
ramda/ramda,sauce,2014-11-25T23:09:03Z,davidchambers buzzdecafe - it is almost certain to relate to this merge. it is now 8 am here in tokyo. so i am heading out the door for work right now - will try to get some time around lunch here (next 4-5 hours) to try and work out what has happened. apologies. but as i have indicated above. unless there is away to test sauce locally. it did look like it was going to be a blind merge.,negative
ramda/ramda,sauce,2014-11-26T22:18:27Z,this looks very much like the same error we are seeing in sauce.,positive
ramda/ramda,sauce,2014-11-26T22:46:34Z,sauce passed on my local machine. so feeling good.,positive
ramda/ramda,sauce,2014-12-05T17:41:28Z,generate html test runner. need this for saucelabs. which is once again broken. should be able to browserify.,negative
ramda/ramda,sauce,2014-12-05T22:46:55Z,mostly fixes broken sauce. yet again.. still fails for ie < 9 :scream:,negative
ramda/ramda,sauce,2014-12-05T23:02:08Z,is it necessary to commit **test/bundle.js**?,neutral
ramda/ramda,sauce,2014-12-05T23:09:11Z,it is if you wanna look at the html test runner without running `grunt test`,neutral
ramda/ramda,sauce,2014-12-05T23:15:18Z,that sounds like an edge case we needn't support. the most likely reason to run the tests is to test _changes_. i imagine.,positive
ramda/ramda,sauce,2014-12-05T23:16:57Z,i disagree. it can be quite useful to run the test suite from rawgithub.com,positive
ramda/ramda,sauce,2014-12-05T23:23:22Z,> it can be quite useful to run the test suite from rawgithub.comah. i see. that option hadn't occurred to me.,positive
ramda/ramda,sauce,2014-12-06T16:22:54Z,#655,neutral
pixijs/pixi.js,eslint,2016-12-08T00:09:25Z,for the `hasownproperty` thing. you can put `// eslint-disable-next-line no-prototype-builtins` on the line above it - interactionmanager created and owns the object in question. so we can be pretty sure that it has the `hasownproperty` method.,positive
pixijs/pixi.js,eslint,2016-12-16T18:55:25Z,i've add the parameter  in `apply` of filter.js . but eslint failed. because it doesn't be used.,negative
dresende/node-orm2,mocha,2014-10-22T14:51:52Z,cache clear documentation. for many use cases. the orm module cache needs to be manually cleared.this is useful in cases where you are bootstrapping mocha tests and need isolation. or are pooling resources on a server.this can be done by calling orm.singleton.clear().can someone update the documentation to reflect this?,positive
actionhero/actionhero,istanbul,2015-01-08T21:49:42Z,any idea why this might break istanbul? for some reason it just hangs when writing coverage,neutral
reactjs/react-docgen,eslint,2016-08-18T20:12:19Z,fix intersection and union flow types. this is basically #97 but without throwing an error.i also enabled to eslint rules to detect undefined and unused variables.closes #97,neutral
reactjs/react-docgen,eslint,2016-08-18T22:13:25Z,thanks for that! i added two comments which i guess don't show in here because the branch got deleted. but they should be visible when you click on "files".,positive
softlayer/sl-ember-test-helpers,eslint,2015-10-08T15:36:47Z,upgrade sl-eslint dependency. and update any files as necessary to comply with new rules.,neutral
Zarel/Pokemon-Showdown,mocha,2015-04-26T23:59:54Z,i built a mocha test to automate set generations for lower-tier (ru/nu/pu) pokemon as if it were a rain team. and the only pokemon that came up with bad sets in my first run (i only had each pokemon generate one set for now) were pyroar. lilligant. every mono-fire pokemon (rejected under rain automatically anyways) and pokemon that ended up with sunny day (which also get rejected). there might be more that i missed. of course.i think it's best if i took the pokemon that have the worst sets under sun/rain and hardcode them out as well.,negative
serverless/serverless,mocha,2016-11-04T08:02:49Z,ac360 wouldn't this be a problem for loading devdependencies like mocha as npm expects them to be in a local node_modules folder? so when i want to execute the mocha binary will it be found?just tested it by installing mocha in a parent npm folder (and looked into the docs) and it seems like npm is then only loading dependencies in the node_modules folder in the same directory?to optimise your dependencies and remove dev dependencies you can also use `npm prune --production` which will remove all dev dependencies from your node_modules folder.or is this only for additional plugins for users? because i think the impact of only having support for plugins in other node_modules folders will be pretty minimal.,positive
serverless/serverless,mocha,2016-11-06T13:20:40Z,lardee i went with -f since it is the option used also by `deploy function` (and `serverless-mocha-plugin` command invoke test). this can be easily changed if `-n` is preferred.,neutral
serverless/serverless,mocha,2016-11-06T16:30:52Z,usage of sinon and mocha toolings for tests. # this is a feature proposal## descriptionour current test codebase could be improved so that we e.g. use sinon sandboxes (rather than restoring our stubs by hand) or mocha helpers (e.g. to fake a "waiting 5 seconds" command).this also means that we should use `beforeeach` and `aftereach` more wisely for independent test setups and cleanups.,neutral
serverless/serverless,mocha,2016-11-06T19:50:11Z,make test discovery automatic. closes #1337 (maybe)## how did you implement it:uses globs to match instead of the require() files.i did not implement the random ordering. that's a much bigger problem to tackle and the linked issue in mocha has not made much traction yet.## how can we verify it:`npm test` hits the same number of tests (563 at the time of writing this) before and after these changes.## todos:- [x] write tests- [x] write documentation- [x] fix linting errors- [x] make sure code coverage hasn't dropped- [x] provide verification config/commands/resources- [x] change ready for review message below***is this ready for review?:*** yes,neutral
serverless/serverless,mocha,2016-11-06T20:34:04Z,then coverage decrease is because the 'require files' weren't being ignored from coverage ;),neutral
serverless/serverless,eslint,2016-06-28T22:11:17Z,i had the same problem.the problem was that **some dependencies were not included in the distribution directory**.i solved the thing by updating my `excludepatterns`.``` json"custom": {  "excludepatterns": [    ".git".    "node_modules/eslint"  ].}.```to``` json"custom": {  "excludepatterns": [    ".git/".    "node_modules/eslint"  ].}.```indeed patterns do not seems to work as we could expect: `".git"` was preventing the dist to include `github` folder and `github.js` file.is it a bug ? maybe `excludepatterns` should require to define patterns in a more restrictive way.though in the building step. when creating `_serverless_handler.handler`. if something check that function dependencies exist in the dist folder. it **should return an explicit error** when some are missing.,neutral
serverless/serverless,coveralls,2016-11-08T11:57:20Z,eahefnawy. the last build seems to fail in a weird way on coveralls... it looks like a glitch... can you have a look at it?,negative
serverless/serverless,coveralls,2016-11-08T15:43:02Z,kbariotis lmammino thanks a lot. this is g2m. i'll just ignore the coveralls glitch and merge ☺️,positive
xodio/xod,mocha,2018-01-12T15:50:50Z,> move universal func-test’s from xod-client-electron to xod-client. rewrite them with puppeteer.this part is done in #1015,neutral
valor-software/ngx-bootstrap,codecov,2016-07-19T14:01:30Z,fix(ci): upload test coverage report to codecov,neutral
NativeScript/nativescript-imagepicker,sauce,2018-02-02T13:10:46Z,fix tests to work for both sauce labs emulators,neutral
Azure/autorest,standard,2016-09-28T23:56:50Z,hi yugangw-msft. are you able to confirm whether the response body returned by the webapp api conforms to the standard clouderror?for example. i see that the c# implementation has details as a list of clouderror objects. where as in the response details has a list of key value pairs. only one of which is an "errorentity".,neutral
airbnb/javascript,eslint,2016-06-15T17:18:27Z,it looks like you have `repos/spa-admin.eslintrc`. but your actual project is `repos/spa-admin/`. you want an `.eslintrc` in every project with "root" set to `true`. so that the project-specific config is not affected by a config file higher in the directory tree.,neutral
airbnb/javascript,eslint,2016-06-16T06:28:18Z,there's already an eslint rule in our config that prevents dupes. so there's no need for a human to ever worry about that anymore.,neutral
airbnb/javascript,eslint,2016-06-18T15:40:11Z,thanks! the test failures are due to an eslint bug. so i'll merge through it.,negative
airbnb/javascript,eslint,2016-06-20T18:18:09Z,they are intentionally false. because you should not be importing anything except `dependencies` in your app. in your test directory. you'd probably want an `.eslintrc` file that enables `devdependencies`.`optionaldependencies` and the requisite lazy loading are an antipattern anyways. so if you need that in your project. it's appropriate to override it in your own project.i'll be enabling this rule soon as well.,neutral
airbnb/javascript,eslint,2016-06-25T00:14:14Z,constant conditions in generators. currently eslint warns user if constant condition like `while (true) {}` is used. which is pretty understandable most of the times. although it could be really useful when used inside of generators. for example in sagas. i think generators should be an exception to this rule?,positive
airbnb/javascript,eslint,2016-06-25T00:31:50Z,this style guide discourages any use of generators. for any purpose.,neutral
airbnb/javascript,eslint,2016-06-27T18:15:30Z,i assume if you remove "extends airbnb" that it no longer errors out?if so. this sounds like an eslint bug itself. not an issue with our config plugin. can you file it there?,negative
airbnb/javascript,eslint,2016-06-28T07:12:03Z,yes. the transform would go in whatever runs babel. you need to add a root `"parser": "babel-eslint"` as well.this isn't the proper venue for this kind of help tho - please feel free to join babel's slack. or our gitter channel. or freenode on irc.,neutral
airbnb/javascript,eslint,2016-07-06T01:11:50Z,>  in your test directory. you'd probably want an .eslintrc file that enables devdependencies.will be helpful if mentioned in the document.,neutral
airbnb/javascript,eslint,2016-07-06T21:22:16Z,i also think that it could be better if not all rules to be like errors. my point is following: i'm using eslint in atom to see if i have any errors in my code and also i use webpack with eslint-loader and noerrorsplugin. so when there is any eslint error in my code - it does not compiling. which is good. because it saves a lot of time when it detects an error that makes unable for my code to run. but the thing is that sometimes when developing i need to insert console.log. or i need to quickly add an element to array to test something (and sometimes i'm doing it too quickly and not adding comma in the end of a line) and in this case webpack will just not compile my code because eslint tells that there are errors. but from my point of view they are more likely warnings. not errors. because code will work. but it will be just not perfect at this point.i think that it would be much better if all critical rules which can detect places that can break something to be like errors. but for other ones that are more like stylistic - everything that is not good to commit. but that will work - to have warning level. so it will more like informative. btw. for ci systems you can set --max-warnings 0 flag for eslint and it will fail build even if there are any warnings detected. so it is possible setup it correctly when building project. but it is not so usable for development in some cases. what i'm doing right now is just redefining some rules in my local .eslintrc. setting some rules to warning instead of error,negative
airbnb/javascript,eslint,2016-07-08T18:01:17Z,`guard-for-in` just requires any conditional check - often it false-negatives on places where people aren't checking "own property". precisely to allow the use case you mean.if eslint added a more specific way to block for-in loops or an easier way to override it. i'd be all for that - but imo the annoyance of overriding it for a small handful of edge cases is worth the benefit of never having to see a for-in loop anywhere else :-),neutral
airbnb/javascript,eslint,2016-07-09T18:24:12Z,the main reason for me submitting this pull request is that the latest documentation for eslint rules all use the string enums rather than numbers.,neutral
paulmillr/es6-shim,mocha,2013-10-11T15:51:53Z,phantomjs is just a headless webkit.  that probably adds minimal value. above the node tests (since both are v8-based).  it would be better to use something which could actually test against mozilla. ie. etc.  testling seems to do that (but it's slow and a bit flakey).,positive
jashkenas/backbone,karma,2015-04-29T07:08:28Z,formatted changes for consistency karma.conf.js. removed period from line 1 to be consistent with rest of file.changed first letter of the first word on lines 1. 2. 42 and 46 to be consistent with rest of file.,neutral
chaijs/chai,sauce,2013-11-30T18:12:20Z,looks like they all passed. never used saucelabs before! i am impressed :),positive
chaijs/chai,karma,2013-11-26T07:19:21Z,logicalparadox it seems that travis is affected by this as well. prs #211 and #214 fail with `.bin/karma: no such file or directory`.,negative
chaijs/chai,karma,2013-11-26T14:37:48Z,there was an issue with karma stable that caused sauce-labs browser tests to timeout. prs don't invoke the full suite. did you run the sauce labs tests using local credentials?,negative
chaijs/chai,karma,2013-11-27T08:22:16Z,i have tried sauce labs with both karma stable and canary. they both seem to work fine but they are slow on my machine: i have killed both runs after ~10 minutes. canary seemed to be able to get further in the list of browsers than stable. however i would be careful in interpreting this as an issue with karma stable.to continue using karma canary you should add `karma-cli` dependency. as that's the place where `.bin/karma` has been moved to. however you are trading build stability for sauce labs support. is it really worth it?,negative
chaijs/chai,karma,2013-11-27T16:34:25Z,given the issue we have experienced with karma. can you please rebase this pr with master to force a proper ci run. thanks!,positive
jxnblk/rebass,standard,2016-05-10T05:53:03Z,justingreenberg jxnblk as per justingreenberg 's solution above. why can't the prop name be ref rather than baseref or am i missing something?also when can we expect a fix for this? are there concerns?,negative
jxnblk/rebass,standard,2016-05-10T19:02:20Z,i don't think it's wise for this library to implement some solution for `ref`s outside of react.  the 2 solutions i see are making form elements class components (as originally suggested) or add a higher-order component that wraps the stateless component in a class component.,neutral
jxnblk/rebass,standard,2016-05-10T19:26:26Z,phated the proposed solution above just provides a hook for `ref` on the base component... > the 2 solutions i see are making form elements class components (as originally suggested) or add a higher-order component that wraps the stateless component in a class component.can you provide some code or a demo? since all rebass components are wrapped in stateless function component (base hoc). afaik there is no other way to implement this functionality,neutral
jxnblk/rebass,standard,2016-05-10T19:37:45Z,theseyi renaming ref to `baseref` prevents namespace conflicts and keeps the ref provider explicitly outside react's component api,neutral
jxnblk/rebass,standard,2016-05-22T00:56:03Z,justingreenberg shouldn't it be that case that if the proposed solution is just a 'hook for `ref`' (which i'm interpreting as a proxy). then it should be the same name and just fall through to the react component?,neutral
velesin/jasmine-jquery,jasmine,2013-12-06T16:22:27Z,just curious. what's the present eta on this?  i have a zepto-based project that i'm currently having to do some ugly hacks to get working with jasmine-jquery.  i'd love to see _official_ zepto support at some point! :smile:,negative
ninjadev/nin,eslint,2017-03-13T19:05:50Z,add .eslintrc to project. this continues our standard of good project defaults.,neutral
ninjadev/nin,eslint,2017-03-14T20:26:18Z,add nin global variables to default project eslint,neutral
Modernizr/grunt-modernizr,uglify,2013-07-11T18:09:59Z,does the build complete if uglify is disabled?,neutral
videojs/video.js,sauce,2014-08-02T00:18:33Z,disable saucelabs until we figure it out,neutral
videojs/video.js,sauce,2014-08-02T00:28:42Z,failed because of a previous pr that was merge without tests run on it. apparently travis decided to skip that one.,neutral
videojs/video.js,sauce,2014-08-05T17:22:13Z,ha. thanks! this probably worked in our favor last week when we were having sauce labs testing issues. :),positive
expressjs/express,mocha,2013-05-03T16:43:28Z,visionmedia thanks. i'll look into it.on the same computer. i'm able to run an express app and mocha test it without incident. maybe there's a config option that helps.,positive
expressjs/express,mocha,2013-05-03T18:17:12Z,req.subdomains tests fail in windows. trace:```$ mocha test/req.subdomains.js  .....  × 3 of 5 tests failed:  1) req .subdomains when present should return an array:     error: expected '["ferrets"."tobi"]' response body. got '[\n  "ferrets".\n  "tobi"\n]'      at test.assert (c:\documents and settings\apenneba\desktop\src\express\node_modules\supertest\lib\test.js:177:21)      at c:\documents and settings\apenneba\desktop\src\express\node_modules\supertest\lib\test.js:124:10      at test.request.callback (c:\documents and settings\apenneba\desktop\src\express\node_modules\supertest\node_modules\superagent\lib\node\index.js:575:3)      at test.<anonymous> (c:\documents and settings\apenneba\desktop\src\express\node_modules\supertest\node_modules\superagent\lib\node\index.js:133:10)      at test.eventemitter.emit (events.js:95:17)      at incomingmessage.<anonymous> (c:\documents and settings\apenneba\desktop\src\express\node_modules\supertest\node_modules\superagent\lib\node\index.js:703:12)      at incomingmessage.eventemitter.emit (events.js:117:20)      at _stream_readable.js:883:14      at process._tickcallback (node.js:415:13)  2) req .subdomains when subdomain offset is set when subdomain offset is zero should return an array with the whole domain:     error: expected '["com"."example"."sub"."ferrets"."tobi"]' response body. got '[\n "com".\n  "example".\n  "sub".\n  "ferrets".\n  "tobi"\n]'      at test.assert (c:\documents and settings\apenneba\desktop\src\express\node_modules\supertest\lib\test.js:177:21)      at c:\documents and settings\apenneba\desktop\src\express\node_modules\supertest\lib\test.js:124:10      at test.request.callback (c:\documents and settings\apenneba\desktop\src\express\node_modules\supertest\node_modules\superagent\lib\node\index.js:575:3)      at test.<anonymous> (c:\documents and settings\apenneba\desktop\src\express\node_modules\supertest\node_modules\superagent\lib\node\index.js:133:10)      at test.eventemitter.emit (events.js:95:17)      at incomingmessage.<anonymous> (c:\documents and settings\apenneba\desktop\src\express\node_modules\supertest\node_modules\superagent\lib\node\index.js:703:12)      at incomingmessage.eventemitter.emit (events.js:117:20)      at _stream_readable.js:883:14      at process._tickcallback (node.js:415:13)  3) req .subdomains when subdomain offset is set when present should return an array:     error: expected '["ferrets"."tobi"]' response body. got '[\n  "ferrets".\n  "tobi"\n]'      at test.assert (c:\documents and settings\apenneba\desktop\src\express\node_modules\supertest\lib\test.js:177:21)      at c:\documents and settings\apenneba\desktop\src\express\node_modules\supertest\lib\test.js:124:10      at test.request.callback (c:\documents and settings\apenneba\desktop\src\express\node_modules\supertest\node_modules\superagent\lib\node\index.js:575:3)      at test.<anonymous> (c:\documents and settings\apenneba\desktop\src\express\node_modules\supertest\node_modules\superagent\lib\node\index.js:133:10)      at test.eventemitter.emit (events.js:95:17)      at incomingmessage.<anonymous> (c:\documents and settings\apenneba\desktop\src\express\node_modules\supertest\node_modules\superagent\lib\node\index.js:703:12)      at incomingmessage.eventemitter.emit (events.js:117:20)      at _stream_readable.js:883:14      at process._tickcallback (node.js:415:13)```,negative
valor-software/ng2-tree,karma,2017-04-25T05:30:12Z,can't bind to 'nodes' since it isn't a known property of 'tree-root' : karma unit testing. i am using angular-tree-component for my angular2 project. facing 'can't bind to 'nodes' since it isn't a known property of 'tree-root' error while running karma unit test cases.import { treecomponent. tree_actions. keys. iactionmapping. treenode. treemodel } from 'angular-tree-component';i also have imported/added above line in my spec filecould someone help?,negative
babel/babel-loader,eslint,2017-01-14T12:14:39Z,remove plugin-babel. obsolete since eslint-config-babel 4,neutral
anvilresearch/connect,eslint,2015-11-09T22:31:38Z,looks good. thanks!,positive
prettier/prettier,codecov,2017-09-16T09:34:06Z,did we enable the codecov github app?!,neutral
prettier/prettier,eslint,2017-07-16T06:02:57Z,do'h! i just realised the message `"cannot read property `'loc'` of null"` is not coming from that function. it's from somewhere in `typescript-eslint-parser`.,neutral
prettier/prettier,eslint,2017-07-18T13:16:48Z,inconsistent new lines on function arguments. i'm using prettier with eslint plugin and have the following rules in my eslint file:```js'prettier/prettier': ['error'. {  printwidth: 100.  singlequote: true.  trailingcomma: 'es5'}].```it looks like both this:```jsconst settings = merge(    {}.    {      array: ['lorem ipsum dolor sit amet.'].    }.    options);```and this:```jsconst settings = merge({}. { array: ['lorem ipsum dolor sit amet.'] }. options);```are valid even if the second goes over the max-line length.is there a way to force consistent line breaks? or have it always break when the second example overflows the max-line length?,positive
prettier/prettier,eslint,2017-07-18T13:44:13Z,`const settings = merge({}. { array: ['lorem ipsum dolor sit amet.'] }. options);` is exactly 100 columns. so it stays there.,neutral
prettier/prettier,eslint,2017-07-18T13:54:43Z,what about the trailing commas? shouldn't the second one be broken into new lines for the array to get trailing commas?,neutral
prettier/prettier,eslint,2017-07-18T13:56:55Z,trailing commas are added when it's multiline. we don't put trailing commas when it fits in a single line.,neutral
prettier/prettier,eslint,2017-07-26T12:46:09Z,when this patch is gonna be released? i hope that this will result in prettier-eslint to be updated because right now it causes conflicts with eslint config.,positive
prettier/prettier,eslint,2017-07-26T22:38:35Z,hi all.maybe i am missing something. but this seems to be possible...i am using visual studio code. with the prettier extension (and eslint extension). and i can achieve this for javascript / javascriptreact by setting the vs code settings to `"prettier.eslintintegration": true`. and then setting rules in `.eslintrc.json` such as:        "space-in-parens": [            1.            "always"        ].this works. even if i disable the eslint extension. or set eslint to be disabled in vs code preferences. perhaps this feature has been added to prettier since this issue was closed..?but i am also using typescript. and trying to keep my styles in sync between javascript and typescript. and i can't find a way to use eslint settings in prettier with typescript. and it seems. as mentioned above. no option to set this _directly_ in prettier.has anyone found a workaround (or alternative to prettier) that supports something like this for typescript? if only prettier settings supported specifying this behaviour. it would be possible to use it as the single style formatter... sigh :),positive
prettier/prettier,eslint,2017-07-28T15:56:44Z,charlike prettier has never outputted that. it must be an eslint rule with autofix,positive
prettier/prettier,eslint,2017-07-31T22:23:07Z,i added this rule in my `.eslintrc` to not block my workflow::```"max-len": ["error". 120. { "ignorepattern": "[^\\n\\r]{115.120}\\{(?:'|\") (?:'|\")\\}" }]```,neutral
prettier/prettier,eslint,2017-07-31T23:25:59Z,i can totally see people writing eslint rules to forbid this syntax :wink:,neutral
prettier/prettier,eslint,2017-08-07T08:48:08Z,purge usage of `.eslintrc`. because `.eslintrc` is deprecated and should not be used anymore.,neutral
prettier/prettier,eslint,2017-08-07T09:03:40Z,didn't know that. thanks.,positive
prettier/prettier,eslint,2017-08-11T07:37:24Z,i already had `eslint-config-prettier` installed but it seems i had to remove that extra `indent` config as well.`./node_modules/.bin/eslint-config-prettier-check` helped.thanks!,negative
prettier/prettier,eslint,2017-08-11T07:51:11Z,> i already had `eslint-config-prettier` installed but it seems i had to remove that extra `indent` config as well.yep. rules that you yourself add to your eslintrc always override every config that you `extend`. (eslint-config-prettier can only override other configs you extend. but not your own rules.)> `./node_modules/.bin/eslint-config-prettier-check` helped.correct. this is exactly what that cli tool is supposed to help with! glad it was of use to you.,negative
prettier/prettier,eslint,2017-08-14T07:11:11Z,cannot format json-like files such as .editorconfig. .eslintrc. files like .editorconfig. .eslintrc. eslintrc.json (mainly some kinds of config files) have a similar format as json. but they do not follow the strict json rule. for example. these files allow comment.therefore. if i want to format a .eslintrc file which contains some line comment like ```// comment```. the formatter would report ```(json-to-ast) cannot tokenize symbol </>``` error.is it possible to allow comment in such kind of files?,neutral
prettier/prettier,eslint,2017-08-15T19:06:41Z,how do i disable a prettier rule on an individual file.. is there a way to disable a prettier rule for an individual file? for example the the default printwidth is 80 characters. is there a way to disable this rule or add a custom rule for an individual page?it would be nice to be able to do something like you can with tslint or eslint./* tslint:disable:max-line-length */,positive
ocombe/ocLazyLoad,karma,2015-01-06T10:31:25Z,feat(test): allow to manually declare initmodules. bonjour olivier.i find some difficulties to use oclazyloading in karma testing context. karma doesn't bootstrap application and hack about angular.bootstrap isn't executed. in init phase. oclazyload throw the following exception :  no module found during bootstrap. unable to init oclazyloadto allow correct init in unit test. i have included a method in angular object (can't find a better way) that allow "manual init"regards,negative
ocombe/ocLazyLoad,karma,2015-01-06T10:42:49Z,i added this error in my last commit but maybe this was a mistake. i could just remove the throw. it was just a failsafe but it is not really a necessity.otherwise we might find a better way to do that. could you give me the source code of a test failing to see what i can do?if i don't find a better way i'll merge your commit,negative
ocombe/ocLazyLoad,karma,2015-01-27T11:52:56Z,error in karma testing. i am getting this error in karma while testingerror: [$injector:modulerr] failed to instantiate module **\* due to:    error: [$injector:modulerr] failed to instantiate module oc.lazyload due to:    no module found during bootstrap. unable to init oclazyloadthis is my angular init:angular.module('***'. [        'oc.lazyload'.        'ui.router'.        'ngresource'.        'pascalprecht.translate'.        'nganimate'.        'ui.bootstrap'.        'tmh.dynamiclocale'    ])    .run(function($rootscope. $state. $stateparams. $window) {```});```,negative
ocombe/ocLazyLoad,karma,2015-01-27T12:19:44Z,this is fix in the current master file (see #111). but there is no release for it yet.could you try the file in the current src folder and tell me if it's ok with you ?i'll make a new release soon (fixing a bunch of stuff before).,neutral
ocombe/ocLazyLoad,karma,2015-01-27T12:53:46Z,yes. just pass the first test :),neutral
ocombe/ocLazyLoad,karma,2015-01-27T15:09:46Z,karma jasmine issue. i am trying the new master src with karma test runner.  for first test. everything was ok.  second test. i am getting an error as soon as the module is initialized with. ``` jsbeforeeach(module('***'. function() {    }));```,negative
ocombe/ocLazyLoad,karma,2015-01-27T15:13:09Z,ah that's the bug i'm trying to kill before i make a new release. is it possible to have the source causing the trouble? i haven't been able to replicate it so far,negative
ocombe/ocLazyLoad,karma,2015-01-28T15:12:59Z,you can test the current src file. it should work with karma without the need for a special parameter :)i'm closing this pr as it is no longer necessary.,positive
ocombe/ocLazyLoad,karma,2015-01-28T20:25:42Z,ok i will try > le 28 janv. 2015 à 16:13. olivier combe notificationsgithub.com a écrit :> > can you test the src current file. it should work with karma without the need for a special parameter :)> i'm closing this pr as it is no longer necessary.> > —> reply to this email directly or view it on github.,positive
ocombe/ocLazyLoad,karma,2015-01-29T08:42:32Z,can you send me your package.json & bower. or is it same as the the repo?,neutral
ocombe/ocLazyLoad,karma,2015-01-29T08:45:19Z,my tests are very basic really.  errors happen after the second test module init.,negative
ocombe/ocLazyLoad,karma,2015-01-29T08:57:47Z,yes the same as the repo,neutral
ocombe/ocLazyLoad,karma,2015-01-29T09:24:20Z,ok. i will give that a shot as well.,positive
ocombe/ocLazyLoad,karma,2015-01-29T12:17:24Z,so i tried it with your configuration. and it didn't work.  as soon as i remove oclazyload. i get success.  i will try some other variations.,positive
ocombe/ocLazyLoad,karma,2015-01-29T12:26:55Z,ok!  i figured it out.  i probably didn't know this to start with.  oclazyload needs to be loaded before angular-mocks in the karma.conf file.,neutral
ocombe/ocLazyLoad,karma,2015-01-29T12:28:02Z,oh yes. it makes a lot of sense. i should mention it in the readme.sorry for making you struggle with your tests :),neutral
ocombe/ocLazyLoad,karma,2015-01-29T12:31:00Z,oh not at all. thank you for such a great product.,positive
NodeRedis/node_redis,coveralls,2015-09-13T20:27:12Z,bcoe do you have any idea why coveralls does not run?,neutral
sequelize/sequelize,jasmine,2013-05-18T20:58:18Z,i updated the jasmine spec for postgres and tried running it with "npm run test-jasmine" but i don't get any test results from jasmin. except for a warning "[...]possible eventemitter memory leak detected[...]".i commited the test update to my fork.,negative
sequelize/sequelize,mocha,2013-11-11T18:39:12Z,i'm using mocha. just like sequelize is.  that's why i'm confused that this doesn't show up in the normal run.i grep'ed through the code base for settings to disable global leak detection and didn't find anything.  after putting some console log()s in. the test suite is definitely running the code. but mocha isn't complaining.,negative
sequelize/sequelize,mocha,2013-11-11T18:49:26Z,well. i managed to force mocha to check for global leaks by adding the --check-leaks command line param to the makefile.  i thought that was the default. but...  i don't know.  at least it complains now.should i add that change to the makefile to this pull request (along with other global fixes) or should i start a separate pull request?,negative
james-proxy/james-browser-launcher,eslint,2016-10-14T00:38:14Z,can't merge this as it doesn't satisfy the `peerdependency` from `eslint-config-airbnb-base`.,neutral
TryGhost/Ghost,mocha,2014-09-17T17:54:17Z,misterdjules yeah. i think just changing the `mochacli` `reporter` option to `reporter: grunt.option('reporter') || 'spec'` like you have it currently in this pr would get the job done.,neutral
swagger-api/swagger-ui,mocha,2015-05-08T18:41:10Z,spec converter doesn't strip `.json` when building tags. as visible in e2e tests when running `mocha`. you will not see the proper descriptions for each tag because they don't match.,neutral
swagger-api/swagger-ui,mocha,2015-05-08T18:54:45Z,this requires an update in swagger-js.,neutral
postcss/postcss-cli,standard,2017-05-23T13:13:46Z,gucong3000 postcss-cli does support custom syntaxes via the `--syntax` option. however. since your syntax uses the non-standard `result.content`. postcss-cli can't work with that.we can't be special-casing everything. if postcss-html was a postcss-sponsered project. i'd consider it; but for now. not interested.,negative
ariatemplates/hashspace,karma,2014-03-28T13:10:11Z,build: use karma-hsp-processor from npm. small change to the build - this is one of needed steps to seemly run transpilation on hsp code.,neutral
ariatemplates/hashspace,karma,2014-04-09T08:59:02Z,it's always the same question. in aria templates the choice was to put everything in one repository (core library. ui. widgets. test tools). more recently there's a tendency instead to create modules.angular stress the importance of tests. yet you need to install karma yourself. if you need help you can use `angular-seed`. neither karma nor angular-seed is part of the same repository as angular.,neutral
caolan/async,karma,2015-10-14T14:08:41Z,agreed. it'd be sweet to set up sauce labs however the test runner isn't currently supported. as we transition to karma this may be something we can do,positive
bermi/sauce-connect-launcher,sauce,2013-07-16T02:52:43Z,johanneswuerbach i meant something different. there are two callbacks you can register with sauce-connect-launcher:- when starting: `var process = sauceconnect(opts. callback1)`- when closing: `process.close(callback2)` (the one you are adding)if an error happens when closing the process. both callbacks will be called. that's not correct. only the callback2 should get called. the callback1 should only get called if it starts successfully or if it fails to start - just once.hope this explains it better. also. check my comment on the outdated diff.,negative
nightwatchjs/nightwatch,jshint,2014-05-21T15:43:00Z,do you mean just adding it as a build step. like:``` yamlscript:  - npm run-script jshint  - npm test  - npm run-script coveralls```,neutral
nightwatchjs/nightwatch,mocha,2015-11-06T03:18:01Z,how to use tags on mocha?,neutral
nightwatchjs/nightwatch,mocha,2015-11-28T21:31:12Z,closing due to inactivity and also this is now possible with using mocha runner.,neutral
simplabs/ember-simple-auth,mocha,2014-05-14T18:54:26Z,update mocha to use promises feature. ...so all the done()s could be removed.,positive
videojs/videojs-youtube,sauce,2014-07-23T23:34:13Z,a sauce lab test could be very interesting,positive
angular/zone.js,jasmine,2017-03-03T10:23:03Z,fix(jasmine): support "pending" `it` clauses with no test body,neutral
angular/zone.js,jasmine,2017-03-08T16:27:25Z,just ran into this issue today. would love to use it. any idea on the timeline for the next release cut?,positive
angular/zone.js,jasmine,2017-03-08T18:25:19Z,after revert. the types/jasmine still report error. i will just close this one for now.,negative
angular/zone.js,sauce,2015-05-01T14:29:17Z,i thought that karma used websockets on sl. but it doesn't. i agree that we should disable the ws test on sauce for now. maybe we could add write at least one test that would fake ws communication or at least check if the ws methods are being patched.,neutral
angular/zone.js,sauce,2015-05-02T09:19:27Z,for some reason saucelabs fails to provide us with ff37 at the moment. hopefully this is just a temp issue. feel free to rerun the build when you are reviewing this. it should pass all tests.,negative
angular/zone.js,sauce,2015-05-07T17:49:40Z,igorminar two pending issues before this can get merged:- it's still not clear to me what we should do with ff. i vote for disabling it on sauce now (ff38 works locally).-  ~~when i tried to install the package (see package.json below). i get all the files instead of /dist and /lib only~~ checked with `npm pack` only dist & lib are includedfeedback welcome,neutral
angular/zone.js,sauce,2015-05-07T21:04:06Z,vicb you do want the sauce connect update. please cp that as well,neutral
angular-fullstack/generator-angular-fullstack,mocha,2014-09-24T13:21:34Z,feat(gen): unify testing framework. changes:- add prompt for jasmine or mocha- if mocha choosen. prompt for expect or should- use `<%= does() %>` to dynamically insert assertions (expect|should)- add mocha variants for protractor tests- add mocha options to protractor.conf- remove `test/fixtures/(bower|package).json` from repo- move rune2e functionality to runtest and simplify switch- comment generator test functionsnote:server-side jasmine test are needed to fully unify testing frameworks.once jasmine tests are included for server. mocha dep can be removedfully when selecting jasmine.,neutral
angular-fullstack/generator-angular-fullstack,mocha,2014-09-25T07:28:05Z,jakxz. i know you don't have a lot of extra time. but i could use some server side jasmine tests to match the ones written in mocha. even a 'call' for tests would help. especially coming from a 'collaborator'. i need to adjust timeouts for protractor/mocha. but other than that; this pr simply lacks server side jasmine tests. my main issue is the differences in flow control such as before. beforeeach. after. aftereach. i'm not sure how to structure the before clauses in jasmine. also i'm pretty busy with several client's atm. but i'll try to do what i can. just wondering if i might be able to get some help on this one. thanks.,positive
angular-fullstack/generator-angular-fullstack,mocha,2014-09-25T18:22:53Z,kingcody i hear you. committing to get you a pr on your feature branch soon.those who are familiar with jasmine. please feel free to contribute as well.,positive
angular-fullstack/generator-angular-fullstack,mocha,2014-09-26T01:44:17Z,updated the travis config so e2e tests should run on pull requests now. you'll need to merge canary back into your branch.edit: actually i spoke to soon. need to work on this a bit more to get it working for pull requests,neutral
angular-fullstack/generator-angular-fullstack,mocha,2014-09-28T09:47:01Z,nope. it's for the mocha text diff feature. that way unexpected files show up as red in an error report.,negative
angular-fullstack/generator-angular-fullstack,karma,2014-09-30T09:29:03Z,server side jasmine tests needed!!!. this is more of a call to the community than an issue.we've recently implemented a prompt (in canary) for the generator that gives you the option of having jasmine or mocha tests generated for your project. there is one catch. we don't have any server side jasmine tests to generate atm. there are client (karma & protractor) and server tests written in mocha (which i know much better) but only client for jasmine.i've been fairly busy lately and could really use some help if anyone here has experience writing jasmine tests. we simply need them to make the same assertions as the existing ones written in mocha do. preferably with the same style if at all possible.also there is a bonus!!! (everyone likes bonuses :smile:)if anyone would like to extend the server and/or client jasmine tests to cover more than the existing ones do. i'll match them in mocha ;),positive
angular-fullstack/generator-angular-fullstack,karma,2014-10-14T19:00:01Z,i'm guessing that after your login directive successfully logs a user in that it calls `$state.go('main')`? that would cause ui-router to make additional calls that karma was not aware of. hence the error. if that is the case. then stubbing out ui-router would allow `$state.go` to be called without error or actually making a state change.,neutral
angular-fullstack/generator-angular-fullstack,karma,2014-10-14T21:26:55Z,are you using jasmine for your testing framework in karma?,neutral
adamgruber/mochawesome,mocha,2015-04-23T12:58:50Z,configuration. how do you configure it when used with mochaphantomjs?this is my gulp file: ``` jsgulp.task('test'. function () {    return gulp.src('tests/runner.html')        .pipe( mochaphantomjs({            reporter: 'mochawesome'        }) );});```what do i have to drop into runner.html to make it work?,neutral
adamgruber/mochawesome,mocha,2015-04-23T18:33:24Z,boom. thanks for explanation.,positive
alexa-js/alexa-app,mocha,2016-07-18T02:55:16Z,any updates on this? i can submit a pr if you would like,neutral
Reactive-Extensions/RxJS,standard,2013-10-13T16:12:28Z,theghostbel i don't understand as they bridge native events to observables.  the fromevent is obviously more complex as it has to account for non-standard events such as ie 6-8. as well as node.js.,neutral
Starcounter-Jack/JSON-Patch,jasmine,2017-02-08T12:34:13Z,my main comment is :i think it's worth to describe side-effect of `_proxy` hack in readme. if user object contains `_proxy` property it will not get recursively proxified.maybe we could advertise it as a feature?rename it to `_dontproxify` so we will ~"set" it in a getter during recursive proxification. but users may set a real property to block proxification/observing on some level?i'll like to do another round of review once you are done with this.,negative
Starcounter-Jack/JSON-Patch,jasmine,2017-02-08T12:38:46Z,tomalec your reviews are always on point. will fix these today for sure.,neutral
Starcounter-Jack/JSON-Patch,jasmine,2017-02-15T15:40:11Z,tomalec could you look at this please? i'm desperate for work.,negative
Starcounter-Jack/JSON-Patch,jasmine,2017-02-17T11:08:17Z,other than- `_isproxified` vs. `_dontproxify`- `jsonpatchproxy` vs.  `jsonobserver`i have no other comments.lgtm,neutral
linkedin/hopscotch,jasmine,2015-04-02T06:50:19Z,remove sinon and add few unit tests to increase test coverage. - following up on #140 and replacing sinon with jasmine's native spyon.- adding few unit tests to bump up test coverage.- few small clean up items:  renaming orientation to placement and removing private getwindowwidth function that is not used anywhere.,neutral
optimizely/nuclear-js,coveralls,2015-07-15T20:42:15Z,coveralls ci hangs.. jordangarcia - on the last 3 prs it seems that coveralls ci task is just hanging. i don't think we changed anything from our side. so not sure what's up there. could this have to do with the new eslint ci configuration?,negative
optimizely/nuclear-js,coveralls,2015-07-18T10:30:04Z,issue was from coveralls side of things. closing.,neutral
webpack/webpack,uglify,2018-04-02T17:34:22Z,also i think by default should used warnings and errors preset. a lot of problems when people don't see warnings or errors. example uglify show warnings on mangling and if people don't see this warnings they can create issue and it is not good.,negative
webpack/webpack,uglify,2018-04-04T08:52:26Z,facing the same problem. it is uglifying when not told to and not having the devtool source map in cheap-source-map. source-map or any devtool option like inline-source-map.,neutral
webpack/webpack,uglify,2018-04-13T20:31:08Z,ooflorent if my configuration is in another package. evilebottnawi variant is more convenient. there is no need to add uglifyjs-webpack-plugin in dependencies.,neutral
webpack/webpack,uglify,2018-04-22T14:41:24Z,in my opinion. production mode should also have `uglifyoptions.output.comments = false` by default,neutral
webpack/webpack,uglify,2018-04-24T13:46:33Z,so setting `uglifyoptions.output.comments` back to `false` might solve the problem```js  new uglifyjsplugin({    uglifyoptions: {      output: {        comments: false      }    }  })```,neutral
webpack/webpack,uglify,2018-04-24T14:03:06Z,whtsky can you create issue in uglify plugin repo what comments should be removed?,neutral
webpack/webpack,uglify,2018-04-24T17:48:28Z,well i removed the service-worker and still have the same problem.the problem disappear as soon as i remove `uglifyjs`. maybe i have a problem with my `uglifyjs config` ?```js new uglifyjsplugin({  cache: true.  parallel: true.  sourcemap: false.  uglifyoptions: {    output: {      comments: false    }  }})```montogeek could you re-open the issue ?,negative
webpack/webpack,uglify,2018-04-25T05:53:39Z,sounds like an uglify-es bug. it only happens in production mode. does it?,negative
webpack/webpack,uglify,2018-04-26T18:21:16Z,i guess the problem is the `inline` option of uglifyjs. you can try disabling only this option. it causes many problems.,negative
webpack/webpack,uglify,2018-04-27T16:01:15Z,ran into this today as well. here is the config that worked for me:```jsnew uglifyplugin({  uglifyoptions: {    compress: {      unused: false    }  }})```,neutral
webpack/webpack,uglify,2018-04-29T19:11:24Z,no. this is correct. just docs are not updated. the removal of webpack.optimize.uglifyjsplugin was announced during the v4 release.,neutral
webpack/webpack,eslint,2015-07-08T12:20:58Z,feat(app): git ignore *.log files. a small change that avoid commiting an `npm-debug.log` file when for example the command `npm run eslint` fails,negative
webpack/webpack,eslint,2015-07-08T15:20:17Z,an [editorconfig]( exists in the repository. which addresses code style. the fact that you ran into this issue is a documentation problem. in my opinion. i'm not sure if `jsbeautify` is useful. but the `.eslintrc` changes are good :+1:,negative
webpack/webpack,eslint,2015-07-12T19:55:20Z,thanks,positive
stealjs/steal,sauce,2017-03-15T17:04:24Z,matthewp finally got the saucelabs build passing,neutral
brianc/node-sql,jshint,2016-03-19T05:05:59Z,jshint-fix: fix for jshint error. brianc. fix for the jshint error.,negative
acuminous/yadda,mocha,2015-09-28T16:30:19Z,samzhao i am not sure why i took issue with sync ajax. i went ahead and disabled async and got it working. and that's really what matters.i'm not sure that i am forfeiting any feature by disabling the async. i am using yadda with the mocha plugin. so it feels a bit handicapped in spirit to not have async tests. but honestly. i'm just happy to have it working.,negative
acuminous/yadda,mocha,2015-10-10T21:29:34Z,if you're using the mocha plugin. you can use before. beforeeach. aftereach and after in the normal way,neutral
acuminous/yadda,mocha,2015-10-10T22:04:04Z,awesome! that works. so each mocha test corresponds to a scenario?,positive
acuminous/yadda,mocha,2015-10-11T00:36:04Z,when you use the steplevelplugin. each step in your scenario is executed inside a mocha `it` call. i.e. each step is a separate mocha test. this is generally better for output. because you see all the steps execute. with the scenariolevelplugin you only see the scenario title in the mocha output.to setup / teardown a database use mocha's `before` and `after` functions. however you need to take care where you position them in your test. make sure they're outside any calls to `feature` and they should execute before and after the yadda test suite.,neutral
acuminous/yadda,karma,2016-06-09T20:11:59Z,renaming global to lower case breaks karma,neutral
CityWebConsultants/Iris,jasmine,2016-05-10T09:15:19Z,updating jshint and removing jasmine tests. removed jasmine testsamending jshint settingsalready setup on my local so not sure if these are all the steps...in irisjs root:`npm install --only=dev``npm install -g grunt-cli``grunt jshint`,neutral
sidorares/node-mysql2,eslint,2016-07-13T03:24:06Z,note that #342 changed eslint in package.json to be able to pass tests so you might need to rebase on top,neutral
melonjs/melonJS,jasmine,2014-06-12T06:06:30Z,obiot please remove the plugin test from the grunt config. it's broken because there is a bug in phantomjs. see previous discussion in this ticket for details.i was asking you to try the test in a _browser_ ... not in broken phantomjs (grunt-contrib-jasmine),negative
babel/babylon,codecov,2016-09-27T15:41:53Z,danez i know we spoke in slack. but wasn't sure if there is anything i need to do for the failing codecov checks?,negative
sasstools/sass-lint,eslint,2015-11-12T18:07:38Z,i deviated from scss-lint's approach by allowing per-line (like eslint) and making the block syntax more explicit.gist of approach: run a rule that returns a mapping of where rules are disabled (both globally and per rule). filter the results for each "file" via that mapping. this approach definitely relies on correct line numbers to be reported from rules (i'm sure a bunch of bugs will follow).,neutral
sasstools/sass-lint,eslint,2015-11-12T18:14:10Z,maybe with this much developer attention on this issue. now is the time to move to the single-traversal approach to our core functionality.i'm not sure how you could disable certain rules on certain lines right now without modifying all rules to check for comments or having to process all lint warnings after all the rules have run. if we perform a single traversal like eslint. we can simply track which rules are enabled and disabled as we traverse.,positive
sasstools/sass-lint,eslint,2015-12-08T23:59:58Z,updating the cli to work the same way as eslint in regards to logging errors by default and introducing a silent flag would also be good here as we've discussed it briefly before.,positive
sasstools/sass-lint,coveralls,2016-01-26T20:15:10Z,amazing. thanks idok! this is great news! i don't know why coveralls is even reporting that as a problem. snugug could you just force merge this anyway? i don't have access to temporarily disable it.,positive
ipfs/js-ipfs-api,sauce,2015-12-18T13:48:58Z,run tests on saucelabs and add a badge to readme,neutral
ipfs/js-ipfs-api,uglify,2017-11-21T14:53:40Z,> let me enphasize that there is an update uglifyjs that does indeed support es6uglify may support minifying es6. but the code will then not run in ie 9 (syntactically).we expect support for compiling package code sometime next year. so this package will probably remain broken or require you to eject until then.,positive
vega/vega-lite,uglify,2016-02-19T02:26:24Z,remove uglify warning caused by enum. it's giving us ```warn: side effects in initialization of unused variable sortorder [vega-lite.js:4115.4]warn: side effects in initialization of unused variable scaletype [vega-lite.js:4125.4]warn: side effects in initialization of unused variable nicetime [vega-lite.js:4135.4]warn: side effects in initialization of unused variable dataformat [vega-lite.js:4141.4]warn: side effects in initialization of unused variable axisorient [vega-lite.js:4148.4]warn: side effects in initialization of unused variable fontweight [vega-lite.js:4153.4]warn: side effects in initialization of unused variable shape [vega-lite.js:4162.4]warn: side effects in initialization of unused variable horizontalalign [vega-lite.js:4168.4]warn: side effects in initialization of unused variable verticalalign [vega-lite.js:4174.4]warn: side effects in initialization of unused variable fontstyle [vega-lite.js:4179.4]warn: side effects in initialization of unused variable stackoffset [vega-lite.js:4186.4]```we probably should move each of these enums into the correct schema files,neutral
vega/vega-lite,uglify,2016-02-19T03:52:38Z,maybe worth doing #1154  at the same time.,neutral
vega/vega-lite,uglify,2016-02-25T00:36:06Z,we're not really causing side effect in the global namespace so this is not a big deal.  i'll punt on this.,neutral
pouchdb/pouchdb,eslint,2016-04-16T17:32:43Z,looks great. thanks! i'll follow up on eslint issues in another pr,positive
pouchdb/pouchdb,eslint,2016-04-16T17:48:02Z,(#5069) - fix eslint rules. a few changes here to better match our previous jshint rules:- `function () {}` not `function() {}`- `if (condition) { ... }` (braces required)- spaces after unary (e.g. `typeof(foo)` is wrong)as it turned out. there were very few fixes to make. and eslint's`--fix` feature did a great job here.,negative
pouchdb/pouchdb,eslint,2016-04-17T16:14:18Z,very nice.,positive
pouchdb/pouchdb,uglify,2014-08-02T20:17:39Z,hm. doesn't seem to be a browserify transform or a uglifyjs command-line option for this.,neutral
pouchdb/pouchdb,uglify,2014-08-13T12:40:57Z,(#2597) - use ccjs as well as uglify,neutral
pouchdb/pouchdb,mocha,2014-04-28T13:26:02Z,this pr has nothing to do with mapreduce. on top of that i just used a previous test and added there some stuff. the double catch was there (i do not like it either). with the latest mocha you can completely get rid of it returning just the promise itself.,positive
pouchdb/pouchdb,mocha,2014-04-28T14:46:21Z,update mocha. suggested by valotas in #2068,neutral
pouchdb/pouchdb,mocha,2014-05-08T00:41:31Z,so the rest have been merged so this can be rebased hmm the mocha thing is annoying. it should be ok to load mocha on demand as you said. not sure about adding phantom though. its adding a bit of complexity. some more deps and will bump up our test time. not sure its worth it?,negative
pouchdb/pouchdb,mocha,2014-05-10T12:38:54Z,could you try the dynamically loading mocha + the shims? i dont want to add both build time complexity (it would be nice to be able to switch browser tabs. one with shims one without). and polluting globals in the tests. (this works as it should. but writing the empty file on build and loading it is confusing)if theres something that makes that really annoying. then +1 for this. but would be nice to fix those before going in,positive
pouchdb/pouchdb,selenium,2014-02-19T23:58:46Z,calvinmetcalf any chance you can take a quick look? with these in we are down to pretty much 2 errors in travis. the constrainterror which is a real bug (thats impossible to reproduce) and 'selenium just crapped out',positive
pouchdb/pouchdb,jshint,2014-02-16T21:46:14Z,alternatively i still kind of like `pouchdb.create()`; jshint won't warn about that. unlike `pouchdb()`.,neutral
pouchdb/pouchdb,jshint,2014-02-17T07:43:38Z,yeah. even before promises. the error with undefined db names was pretty opaque: `typeerror: cannot call method 'match' of undefined`.also. i realize functions in javascript can return new objects. but the only reason i propose `pouchdb.something()` is because crockford has dissuaded people from using bare functions that start with a capital letter (without using `new`). so differentiating between `pouchdb()` and `new pouchdb()` would be weird per jslint/jshint.also notice that the "promise-y pouch" you mention is only returned when there are no errors; otherwise. the user just gets a basic promise.either of your solutions seems fine to me. but i'll leave it up to you and daleharvey to decide. since this is a pretty big question that impacts a core part of the api.,negative
pouchdb/pouchdb,jshint,2014-02-24T17:16:31Z,hey. so this failed due to a jshint warning. you use 4 space tabs in side the if statement. so its a simple fix. just remove 2 spaces then```$ git add lib/adapter.js$ git commit --amend $ git push --force```you can test with ```$ npm run jshint```cheers,negative
pouchdb/pouchdb,jshint,2014-02-24T17:32:16Z,awesomeone small thing was the commit message. it was right on the first commit. but on this on it wasnt clear. calvin ammended it before push to " (#435) - new test and fix for db.bulkdocs with new_edits:true" the main reason i do the 'get a first simple patch in' is to get past the jshint / commit message / github workflows up. now thats done. cheers :),positive
pouchdb/pouchdb,jshint,2014-02-27T10:07:00Z,add maxlen: 80 to jshintrc. long lines hurt my head,negative
pouchdb/pouchdb,jshint,2014-03-05T01:15:12Z,ok cool sorry misunderstood that. looks like it was moved but forgotten in websql. +1 but needs a jshint fix,positive
pouchdb/pouchdb,jshint,2014-03-10T03:43:58Z,heh i mostly did that because jshint moaned about it. i knew it was a keyword but didnt think it would cause a parse error,negative
pouchdb/pouchdb,jshint,2014-03-13T17:52:08Z,the mapreduce project is using `maxlen: 100`.  might be a bit easier to achieve?,neutral
pouchdb/pouchdb,jshint,2014-03-13T19:38:04Z,i could start going through and fixing files to be <= 80 chars.,neutral
pouchdb/pouchdb,jshint,2014-03-13T23:40:18Z,heh yeh thats an annoying one```abstractpouchdb.prototype.post =   utils.adapterfun('post'. function (doc. opts. callback) {  //other code}```has been my preference. definitely not 2. i wouldnt be particularly fussed between the other 3 though,negative
pouchdb/pouchdb,jshint,2014-03-15T12:35:07Z,this breaks jshinting (specifically we want a space after function and before the `(`) they way to fix the  80 character issue is to add the line `"maxlen": 100` to the `.jshintrc` file and then fix the errors that it finds.  you can run jshint by going `npm run jshint`,negative
pouchdb/pouchdb,jshint,2014-03-15T18:10:53Z,1533 maxlen. same as before. but passes jshint now.,neutral
pouchdb/pouchdb,sauce,2013-04-17T00:13:56Z,ah- yeah i didn't run the entire test suite before committing. yep. guilty.that said. i'm trying to get a fresh dev environment set up so i _can_ run tests. and `npm install` keeps hanging while trying to install grunt-saucelabs. it installs other packages and other grunt-related stuff fine. but hangs at grunt-saucelabs. on both linux and mac. any ideas? /cc axemclion,negative
pouchdb/pouchdb,sauce,2013-05-03T16:38:21Z,daleharvey looks like there is an issue with the logic in grunt - build says all tests passed. but the publish seems to think they did not. i will look into that. also. i am not able to see your saucelabs test videos. are they private ?,neutral
pouchdb/pouchdb,sauce,2013-05-03T17:53:44Z,why is it so terribly difficult to have a decent test results report from saucelabs in travis ci? and how can i help improving that? is it the problem that qunit does not have any good cli report of the tests?,negative
pouchdb/pouchdb,sauce,2013-05-05T23:05:52Z,(#747) - test reverting saucelabs upgrade,neutral
pouchdb/pouchdb,sauce,2013-05-11T18:51:28Z,noticed that this is caused because saucelabs times out. i have split the tests into sets of 3. and that seems to work well. without timing out - it is kind of ugly. but i think we should look at splitting the tests into logical sets so that they are not run all at once. instead. they are run in sets. will prevent timeouts.,negative
pouchdb/pouchdb,istanbul,2015-10-16T11:43:44Z,i r=me'd a one like istanbul comment so we should be back at 100%,positive
lodash/lodash,uglify,2013-04-27T04:44:21Z,building without the minify parameter can lead to subsequent builds failing. when the minify parameter is given. the build callback isn't called until the closure compiler and uglifyjs are fully downloaded and the minify process completes. this works fine.when the parameter isn't given. lodash is built without minify. the build callback is invoked. then the minify process is started. the minify process then begins downloading the closure compiler. the code that started the lodash build continues on its merry way (because the build callback has been invoked) then exits. aborting the download. the next time the build is run. lodash is built. the callback is invoked. then the minify process is started. the minify process sees that the closure compiler has already been downloaded (sorta). so starts downloading uglifyjs. uglifyjs is small enough that it completes before the calling process exits. the actual minify starts. which tries to use the bad closure compiler jar and errors.basically. the minify process should only be started and the closure compiler and uglifyjs downloaded if the minify parameter is given.,negative
lodash/lodash,uglify,2013-04-27T05:17:44Z,if neither -d nor -m is specified then isminify = false and isdebug = false. i've also not specified -c. so isstdout = false.`if (!isminify && (iscustom || isdebug || istemplate)) {` gives true`if (isdebug && isstdout) {` gives false`else if (!isstdout) {` gives truethe build callback is invoked.`if (!isdebug) {` then gives truethe minify process is started and begins downloading the closure compiler.the callback has been invoked. as far as any caller is concerned. the lodash build is finished and it's free to exit. so it does. aborting the download.you perform the build again. the minify process is started and tries to use the corrupted jar. it errors. aborting the script.i think the disconnect may be that i'm actually running the lodash build as part of a grunt script. so the build method is being invoked with a different callback than if i were to run it standalone.-e i do get the message to manually download. however. since i'm running this as part of a build script and a ci build. i'd rather not have to do it manually.,negative
lodash/lodash,uglify,2013-04-27T07:40:48Z,ok. i've updated the packages :d,neutral
mojotech/pioneer,mocha,2014-07-30T12:32:34Z,what would be the difference between this and the --tag feature?,neutral
mojotech/pioneer,mocha,2014-07-30T13:05:55Z,i want to be able to pass a line # for the feature. ruby cucumber has this baked in,neutral
mojotech/pioneer,mocha,2014-08-12T13:08:55Z,this is a cucumber thing and not a pioneer thing,neutral
angular/protractor,jasmine,2016-05-17T09:36:16Z,require documentation for protractor with jasmine/cucumber. hi there!i wanted to create a testing framework with jasmine and cucumber. can you please let m know if you have any documentation link. that would really be a greate.thanks somesh,neutral
angular/protractor,jasmine,2016-05-29T14:20:20Z,i can't run my test cases if i changed the framwork from "jasmine" to "jasmine2" in the conf filethis issue doesn't recreate in my local machine only when i run it on linux by jenkins.can you please help me to enlarge the screensize to maximum (or to simulate a widescreen) ? thanks.,positive
angular/protractor,jasmine,2016-06-06T17:08:18Z,xotabu4 thank you so much ... that worked for me !!!!,positive
angular/protractor,selenium,2015-05-18T19:40:51Z,using file uploads is confusing. protractor needs documentation/helpers. at the moment. protractor has no special support for file uploads. everything is available through the wrapped instance of `selenium-webdriver`. but this is not well documented anywhere and causes lots of confusion. especially with remote file uploads.should document/helper/make clearer.,negative
angular/protractor,selenium,2015-05-20T16:41:27Z,does chromedriver in fact exist at `d:\web\angular-phonecat\node_modules\protractor\selenium\chromedriver.exe`?,neutral
angular/protractor,selenium,2015-05-21T06:48:46Z,i'm very sorry. this was my fault!. i've recently changed my testsetup wich now doesn't start selenium server any more. when selenium server is running everything is working fine.,negative
angular/protractor,selenium,2015-05-26T13:34:04Z,paolodm. dalssoft have you managed to find a solution? the ptoblem is that it's not possible to run protractor in selenium grid with all of the great features of grid,positive
angular/protractor,selenium,2015-06-03T08:17:01Z,can anyone of you please explain me how to write "pageloadtimeout()" for selenium webdriver on node.js by jasmine?thanks.,neutral
angular/protractor,selenium,2015-06-05T05:14:37Z,not able to set the iedriverserver.exe path via command line. i would like to give the path of iedriverserver.exe in order to start working with internet explorer. i am providing the seleniumargs: ['-dwebdriver.ie.driver=../selenium/iedriverserver.exe'] in the conf.js file. the above is working fine. but when i am trying to provide the same as a command line argument likeprotractor -dwebdriver.ie.driver=path to the iedriverserver.exe conf.jsit is not executing the script instead it shows that the driver executable path must be set.please let me how to set this as command line argument.,negative
angular/protractor,selenium,2015-06-05T07:38:04Z,sjelin: thank you for you comment. i am looking for the same. but the above command is not working.,neutral
angular/protractor,selenium,2015-06-05T17:58:39Z,uh. i think it might actually be `protractor --seleniumargs "['-dwebdriver.ie.driver=../selenium/iedriverserver.exe']"`.  regardless. if you can't find the question on stackoverflow. you should just ask it yourself,neutral
angular/protractor,selenium,2015-06-08T09:29:20Z,unable to set --seleniumargs through command line . hi team.i am unable to use some selenium arguments like setting iedriver path using the --seleniumargs argement via command line. also. if i look for help using ```c>protractor --help.```the options doesn't include --seleniumargs.is there anyway to set the iedrvierserver.exe path using command line argument?,negative
angular/protractor,selenium,2015-06-08T10:07:30Z,it's true that `protractor --help` doesn't list `--seleniumargs` but that shouldn't matter.  what is the exact command you're running when you try to set `--seleniumargs` and what is the error you're getting?,neutral
angular/protractor,selenium,2015-06-08T10:16:57Z,update: presumably it's because what you're passing from the commandline would be interpreted as a string. where as you'd like it to be parsed as a json object.,neutral
angular/protractor,selenium,2015-06-10T06:53:40Z,able to run protractor test without starting webdriver-manager. team.i am able to run my protractor test without starting selenium-server via webdriver-manager or having the seleniumaddress parameter in the conf.js for firefox and chrome browsers. but i have to start the webdriver-manager in order to run my test against ie browser along with seleniumaddress parameter in the conf.js file.is the above two features are bug or the intended behavior of protractor. please let us know. as we are little confused. also let us know the main purpose to use webdriver-manager,negative
angular/protractor,selenium,2015-06-10T18:06:27Z,praveenjagarlamudi  can you share your project? or how where you able to configure it?it'll be much appreciated!!!! thanks,positive
angular/protractor,selenium,2015-06-10T23:54:43Z,you should always be able to execute your tests. regardless of if a selenium-server server is running.  however. if you try to actually interact with the browser. and there's no selenium-server. your tests will fail.,neutral
angular/protractor,sauce,2014-03-18T09:49:36Z,just to add that without proxy the test runs fine with saucelabs.,positive
angular/protractor,sauce,2014-04-02T22:01:37Z,idea: surface information about latency for webdriver commands. this could be helpful for debugging where some environments (e.g. travis -> sauce) have much longer command round-trip times than others (local -> local).,positive
appium/appium-uiautomator2-driver,eslint,2016-12-07T03:12:05Z,please fix the linting issues. run `gulp eslint` .also squash the commits in to one.,positive
leonardoanalista/cz-customizable,jasmine,2016-01-11T10:50:59Z,it looks good! i found the `wascalled` in the jasmine-node source code. api is a bit diff.you should be able to merge pr's now. let me know if you can't.,negative
leonardoanalista/cz-customizable,eslint,2016-01-11T11:04:52Z,the symlink and auto-file creation was a bit arguable. jshint. eslint and others you have to create config file manually. also now this module is more inclusive to windows clients.,neutral
ripple/ripple-lib,eslint,2015-05-20T06:38:38Z,fix eslint issues,neutral
ripple/ripple-lib,eslint,2015-05-20T16:52:28Z,you can do `/* eslint-disable no-var. no-param-reassign */` in the sjcl-custom files to allow es5 syntax.,neutral
ripple/ripple-lib,eslint,2015-06-05T23:12:55Z,add flow type checking. esprima-fb is deprecated. but it seems to work better than babel-eslint currently. we can switch to babel-eslint later.,neutral
ripple/ripple-lib,eslint,2015-06-08T21:02:35Z,lgtm! thank you for walking me through the changes.,positive
kennethlynne/generator-angular-xl,karma,2014-02-25T01:07:44Z,run unit test before production build. and after (targeting the minified code). solved by having two separate karma tasks with different target configurations.,neutral
kennethlynne/generator-angular-xl,karma,2014-03-05T11:59:02Z,started work in `grunt-traceur` branch6ed4e4a337d139b4d8eed79208c5449c36cdee57,neutral
benbria/coffee-coverage,mocha,2015-07-12T11:59:00Z,not using `--recursive` causing problems?. hey there.thanks for making such a fantastic project! just a quick question -- i'm setting up a existing large project that formerly compiled code in order to get coverage so that it works with coffee-coverage. however. i'm finding that the report generated shows little to no actual coverage at all. while the compiled report was quite high and the project is tested thoroughly. i have followed instructions exactly. and it's not erroring out. just giving an incorrect report. the one thing i am not including is the `--recursive` flag. as it's not needed to run my test suite. i tried including this. but then mocha tried to run some of the fixtures included in the tests folder and errored.is the `--recursive` flag necessary to generate correct coverage? if not. what further information could i provide to make this incorrect coverage issue easier to shed light on? and if so. how do people typically deal with fixtures being run as tests with the recursive flag?thanks again!,negative
benbria/coffee-coverage,mocha,2015-07-23T08:00:57Z,huh. very strange. thanks for investigating this. and glad it's not just me doing something stupid! if there's anything else i can help with here happy to do so. just let me know :grinning:,positive
benbria/coffee-coverage,mocha,2015-08-03T13:59:53Z,add new howto: use tape but not mocha. i hope this is something you can use. it sure would have saved me some time! :smile: this demonstrates how to use coffee-coverage with tape. or really with any basic command-line test harness.,positive
benbria/coffee-coverage,mocha,2015-08-03T14:02:34Z,thanks. sir.  it's a holiday here today. but i'll try to remember to merge this tomorrow morning when i get to work.  :),positive
benbria/coffee-coverage,istanbul,2015-07-09T14:40:03Z,i've never used nodeunit. but in theory it shouldn't be too different from anything else.  at some point before you load up any of your code. you want to `require 'coffee-coverage/register-istanbul'`.  this will cause .coffee files to be instrumented by coffee-coverage as they are loaded. and will create `coverage/coverage-coffee.json` when your process terminates.  then just run your tests.if that doesn't get you going. if you have a sample project using nodeunit i can play with. i can try to help you out a bit.,neutral
benbria/coffee-coverage,istanbul,2015-07-09T17:11:03Z,that was the key to getting it running. i was already running nodeunit programmatically and i was already registering coffee-script. so i just replaced. `require 'coffee-script/register'` with `require 'coffee-coverage/register-istanbul'` and everything worked fine from there. thanks.,positive
balderdashy/sails,mocha,2013-08-21T18:37:00Z,make sense. thanks for the examples.  i like the option of using supertest.  i guess the bottom line is that none of you actually spawn a separate process for the sails application; it seems that the sigint signal isn't correctly received by sails on kill(). which may be a node problem and not a sails problem (the code in sailsjs looked logical for shutdown).i've tried the code here and it seems to work with the exception that mocha leak detection goes crazy.  have you noticed that?```  1) starting sails server with lift "before all" hook:  error: global leaks detected: config. [every model object]. _. async. sails. localappurl```are you just disabling leak detection in mocha?  i know it is used in the adapter tests.,negative
balderdashy/sails,mocha,2013-08-24T04:43:32Z,mikermcneil i was bit by this same lowercase issue; your commit 0b11e140863b57904c74dcfdef4ff2b25aa83135 fixes it for me.+1 to adding the test cases from miangraham's pr,positive
balderdashy/sails,mocha,2013-08-27T08:25:14Z,hi polastre i am not sure where you have placed your `before()` and `after()` statements. do you know. that they are _place_ sensitive? that means: if you place the code block outside the `describe`element. it will only be started once during test (suite) run. if you place your blocks inside the `describe`element it should work as expected.i made a very easy test example for you. if you save this as an extra file in your test dictionary (folder) and run them all. you can see the according console log. hope that works for you.**filename: test.workflow.js**``` javascript// this is a small example about workflow in mochabefore(function () {  console.log("simple workflow test before all tests (suite) on start.")})after(function () {  console.log("simple workflow test after all tests (suite) on end.")})describe('simple workflow test'. function () {  before(function () {    console.log("run before all (it) tests inside a section describe")  })  after(function () {    console.log("run after all (it) tests inside a section describe")  })  beforeeach(function () {    console.log("run before each (it) test")  })  aftereach(function () {    console.log("run after each (it) test")  })  it("test 1". function () {    console.log("run test 1")  }).  it("test 2". function () {    console.log("run test 2")  }).  it("test 3". function () {    console.log("run test 3")  })})```remark: you can use `before`. `beforeeach`. `after`. `aftereach` multiple times if you cascade the `describe` sections in your tests. they will all run in reverse order from inner to outer placements.greetingstomp.s.: i am not in knowledge in the moment how to start/stop the adapter correctly.,negative
balderdashy/sails,mocha,2013-08-29T09:56:20Z,hi.i only call mocha like this:`bin/mocha --reporter spec --colors --recursive test``and get not such output as you.i do not use the option `--check-leaks`hopefully that helps.,neutral
balderdashy/sails,mocha,2013-08-29T23:32:03Z,im going to try to add some testing docs soon (this week?). i have a working mocha + assert thing going now which tests a controller. i'll put that up. something is better than nothing :),neutral
balderdashy/sails,mocha,2013-09-07T23:31:31Z,run tests. add tests to `mocha.opts` so travis runs them. also fix up tests so they all pass on travis.,neutral
balderdashy/sails,mocha,2013-09-08T20:55:12Z,xdissent thanks!  glad the tests actually mean things now :),positive
balderdashy/sails,mocha,2013-09-13T06:32:30Z,unit tests layout when a project gets created. it would be a really nice feature to have a /specs directory with either mocha or jasmine ready to go. then sails users could start doing tdd/bdd out of the box.,positive
meanjs/mean,selenium,2015-10-16T03:10:11Z,lirantal . there were 2 prs that can resolve this bug:#968 - merged - fixes the issue with selenium not starting#993 - new - fixes configuration for grunt task to fail if e2e test fails which will fail the travis build,negative
css/csso,mocha,2013-12-24T10:27:26Z,update mocha,neutral
mozilla/nunjucks,mocha,2015-04-29T03:59:11Z,i'm not clear; if you are using phantomjs aren't you still really in a browser? you won't have access to the node apis required by filesystemloader.regardless. you can always construct the environment yourself and use `filesystemloader`:``` jsvar env = new nunjucks.environment(new filesystemloader('views. true));```,neutral
mozilla/nunjucks,mocha,2015-05-15T14:39:00Z,thanks jlongster. i'm not sure if i explained myself correctly. but we basically need a way to load a template file in the browser. without using ajax. i'm not sure if this is actually possible.we're simply using phantomjs to look at an html file. not a server. as a result ajax requests don't work. as it is requesting a local file instead of a file on a server.,negative
mozilla/nunjucks,mocha,2015-05-15T15:11:36Z,the simple way to do that is precompile your templates. then you can just load them in when the page loads.there is simply no way to external data without ajax. you can't get access to the filesystem. i can't think of another way that you'd be able to get it. you have to precompile.,neutral
ariatemplates/ariatemplates,selenium,2015-02-04T09:54:38Z,allowing the robot not to be available immediately (waits for 2s). sometimes. if the first test to be executed by a browser is a robot test. it can fail with the error "the robot is not available." even if the browser was started with `selenium-java-robot` because `selenium-java-robot` has not yet injected the `seleniumjavarobot` object in the page. this pr makes sure we wait up to 2s before raising the error that the robot is not available.,neutral
ariatemplates/ariatemplates,selenium,2015-02-04T16:37:34Z,ab10210 fine for me,positive
videojs/videojs-contrib-hls,karma,2014-05-20T23:43:08Z,hls tech. this is pretty close to being done. the tests pass if run directly but currently karma is being flaky and stalling for some reason.,positive
melonproject/protocol,jasmine,2017-12-13T09:44:44Z,yes. parallelisation is a big plus for ava. do you know if the expectation syntax is compatible with jasmine/jest? would be great to share and reuse some expectation across projects. it's also helpful to use similar tools along the way.,positive
melonproject/protocol,eslint,2018-03-16T19:22:45Z,use prettier. eslint-airbnb. solium,positive
melonproject/protocol,eslint,2018-03-17T15:10:05Z,i'll setup a base repo with everything configured and we can bring this in here then.,neutral
melonproject/protocol,eslint,2018-03-17T15:10:19Z,(except solium),neutral
uxsolutions/bootstrap-datepicker,jshint,2014-02-11T21:37:31Z,i've made my best effort to follow the guidelines in contributing.md and readme.md's (jshint. tests. less. etc). but i have my doubts about the tests i created and about the documentation (should i put more details on it? should i update the screenshots to include one of the horizontal layout?).i'll try to put some notes in some of the lines of code to explain what i've done.,negative
uxsolutions/bootstrap-datepicker,jshint,2014-03-02T22:41:14Z,needs jshint fixing.,neutral
ModuleLoader/es-module-loader,mocha,2015-04-04T19:37:52Z,how do we run the mocha tests in the browser?,neutral
cerebral/cerebral,standard,2016-04-08T18:11:32Z,haha. yeah :) i think we'll get further if we favor some convention over configuration. at least at first. so. i'd say we include the router by default and standardize on webpack for building. same for testing. just pick one library. and leave other modules and packages up to the developer.,positive
twbs/bootstrap,sauce,2014-02-25T00:12:14Z,thanks for the update!,positive
Azure/azure-xplat-cli,jshint,2013-07-29T17:06:55Z,that's really weird. the jshint failure was in a file i never touched?,negative
rwjblue/ember-template-lint,eslint,2018-01-11T12:55:48Z,check presence of attributes specified on component in js file of that component. hello. i would like to write a lint rule that would check whether all attributes that are specified on component are present in component js file as well. i wrote a bit more about it here ember-cli/eslint-plugin-ember/issues/204 but i thought it might be more relevant in here. i don't have much experience writing eslint rules so i want to verify first it something like this is even possible with the current toolset. thanks for any ideas.ondrej,negative
rwjblue/ember-template-lint,eslint,2018-01-16T13:02:06Z,ability to warn instead of error. example scenario:i want to use `quotes: ['double']`. but our existing templates have a mixture of single and double quotes.to add this rule now. would mean a big-bang fix pr.i would like the ability to just receive a warning. and gradually move over. much like eslint allows.,neutral
rwjblue/ember-template-lint,eslint,2018-01-16T14:24:55Z,ah. fab thanks,positive
softlayer/sl-ember-behavior,eslint,2015-10-08T15:36:29Z,upgrade sl-eslint dependency. and update any files as necessary to comply with new rules.,neutral
websockets/ws,eslint,2017-01-11T09:28:06Z,done! i think there's an eslint rule for the spaces-in-objects. btw :),neutral
atecarlos/protractor-http-mock,jasmine,2016-04-11T12:11:49Z,improve documentation around requestsmade() promise. i wanted to do a partial response assertion to a request. it took a little bit of digging but eventually realised that requestsmade() returns a promise.here's the initial behaviour i expected:``` javascriptexpect(require('protractor-http-mock').requestsmade()[0].data)  .toequal(jasmine.objectcontaining({      token: 'abc'    });```and the actual behaviour``` javascriptrequire('protractor-http-mock').requestsmade().then(function(requests){  expect(requests[0].data)    .toequal(jasmine.objectcontaining({      token: 'abc'    });});```the second attempt is the correct way. as provided by protractor-http-mock.. but this isn't clear in the documentation. if this is correct. i'll try and open a pr for it today.,neutral
atecarlos/protractor-http-mock,jasmine,2016-04-27T17:05:44Z,update grunt-contrib-jasmine dependency. fixes #93,neutral
atecarlos/protractor-http-mock,jasmine,2016-04-29T13:10:45Z,thanks arnaugm . i went ahead and did a full library update that was way overdue. thanks!,positive
atecarlos/protractor-http-mock,jasmine,2016-04-29T13:19:49Z,done! eddie .,neutral
ember-cli/ember-cli-mocha,mocha,2017-03-23T08:01:56Z,i can reproduce this with just:```shember new foo --yarncd fooember install ember-cli-mochaember serve```aexmachina thanks for the reproduction!,positive
bitpay/bitcore,mocha,2014-06-24T14:49:40Z,mocha:  2969 passing (5s)index.html: passes: 2943code review: skipped,neutral
bitpay/bitcore,mocha,2014-07-09T08:08:10Z,solved: test vector that passes in node. but fails in browser/sjcl. there is some kind of problem either in bitcore or sjcl involving thedecodeuricomponent function. i discovered this issue while working on thenetwork protocol for copay.  decrypting binary data in sjcl produces problemsdue to the way sjcl is interpreting data as strings. i will have to investigatefurther tomorrow. for now i am producing this test vector to demonstrate theissue. this test passes in mocha node. but fails in mocha browser.,negative
bitpay/bitcore,mocha,2014-07-10T01:31:16Z,great job! reviewing,positive
benjamn/recast,mocha,2014-02-19T21:55:56Z,fixed by d77da1367ca2d24f52ded30f5f2203498460271a.,neutral
vkbansal/react-contextmenu,eslint,2017-03-10T02:41:54Z,thanks for the pr.sorry for the eslint issues! i was experimenting with the new rules.can you please revert the eslint changes?,positive
admc/wd,sauce,2013-05-01T12:07:39Z,travis does not support secure_env_vars for pull requests. skip sauce_tests for pull request so build does not fail,negative
angular-ui/bootstrap,karma,2013-06-25T11:37:23Z,i finally was working on my other project that was using this popup to show a login form and thought i'd make the change a little more generic like suggested.i wrote some tests. although i am quite new with karma so let me know if they're ok.you can now have an attribute close-on-click="false" on the dropdown-toggle element and it will prevent the dropdown from closing when clicking in the dropdown-menu area.the issue i had it finding the dropdown-menu element. i loop through the parent element items to find one with the class set.i thought about just using the second child but i'm not sure if the order for the dropdown-toggle and dropdown-menu is important or not.let me know what you think.cheers.luke,negative
angular-ui/bootstrap,karma,2013-06-30T10:56:18Z,ajoslin i did a quick-fix in 7e178a38ce5878e8ec09aab255c8f8d6ebd7f620 to unblock the situation. fortunately all the tests are passing on all browsers which is amazing given that we've been running tests on chrome and ffox only for 2 months.the current fix changes the way things work as previously karma config was passed in command-line options. now it is hard-coded in the gruntfile.js. on top of this it seems like i can't specify a reporter / no-color options for grunt-karma (or at least i don't know how to do it :-()re-opening this one - even if the situation is un-blocked this issue requires more work.,negative
NativeScript/nativescript-geolocation,uglify,2017-10-26T13:11:43Z,fix webpack uglify and snapshot,neutral
needim/noty,standard,2017-06-29T12:15:20Z,scss file separation . would it be possible in the noty.scss file to either remove the themes imports or move the standard noty css to it's on scss file. this way we could compile the noty.css without the need to take in all the themes. we could choose which ones we want or use our own custom ones.,neutral
Polymer/polymer,eslint,2017-11-15T23:20:06Z,closing this per above comment. as this is a request for a specific tool (as linked above).,neutral
Polymer/polymer,eslint,2017-11-29T18:44:12Z,the only way this would break tests is with `eslint` failing. but that would fail before the actual test runner started. rerunning the tests again. and if they fail the same way i'm just going to merge.,negative
angular/angular-cli,mocha,2016-09-23T08:21:08Z,i am experiencing a simmilar error during `ng serve` when installing `types/mocha`:```[error in [default] c:\users\user\project\node_modules\types\jasmine\index.d.ts:9:17duplicate identifier 'describe'.error in [default] c:\users\user\project\node_modules\types\jasmine\index.d.ts:11:17duplicate identifier 'xdescribe'.error in [default] c:\users\user\project\node_modules\types\jasmine\index.d.ts:13:17duplicate identifier 'it'.error in [default] c:\users\user\project\node_modules\types\jasmine\index.d.ts:15:17duplicate identifier 'xit'.error in [default] c:\users\user\project\node_modules\types\mocha\index.d.ts:33:12duplicate identifier 'describe'.error in [default] c:\users\user\project\node_modules\types\mocha\index.d.ts:34:12duplicate identifier 'xdescribe'.error in [default] c:\users\user\project\node_modules\types\mocha\index.d.ts:39:12duplicate identifier 'it'.error in [default] c:\users\user\project\node_modules\types\mocha\index.d.ts:40:12duplicate identifier 'xit'.](url)```i use mocha for unit testing my server side code. but the mocha typings shoulnt be included in any way in the client build.,negative
angular/angular-cli,eslint,2016-06-02T20:22:35Z,> these hidden files cause undue difficulty particularly when first introducing a new product to developers who operate mostly on a mac - because they do not see the files in finder.i'm going to take a wild guess and say that the vast majority of us here work on a mac. i'd like to know other experiences. but from my point of view. files starting with `'.'` have _never_ been a issue. almost all ides (or ides wannabes) show those files by default. some even recognize them and add a pretty icon next to the name. by now. we are all very well accostumed to files such as:- `.npmignore`- `.bashrc`- `.eslintrc`- `.gitignore`- `.gitattributes`- `.editorconfig`- `.jshintrc`- `.jshintignore`- `.csslintrc`- `.bowerrc`- `.travis.yml`- `.gitlab-ci.yml`... so i really don't see a problem in adding more one more of those.,negative
angular/angular-cli,uglify,2017-11-13T14:41:34Z,the pr worked well,neutral
angular/angular-cli,uglify,2017-11-17T16:42:32Z,fix(angular/cli): ensure purify is before uglify,neutral
angular/angular-cli,uglify,2017-11-21T19:20:38Z,tragetaschen i think felipe is commenting on your math. that step doesn't just involve the html file but includes the typescript and css files too. in order to properly uglify your entire project is brought into memory. so you can't just count the html. additionally. some of your logic may cause duplication of subsets of your dom. exploding the size. this is a complicated task that will take a good amount of ram. we should use as little as possible. but we can't expect miracles.,negative
angular/angular-cli,uglify,2017-11-22T09:36:39Z,work with typescript files without content. too bad we have empty typescript files and their content is "" which is a false-y value.on the other hand:```> null != undefinedfalse> undefined != undefinedfalse> "" != undefinedtrue```i am not sure this is a proper "fix" but please mind it should work with empty string. usually we won't have empty files but on few occasions we use a mechanism to do a preprocessor kind of stuff that will output some typescript code for some builds but have none for others. then web pack running uglify will strip comments and compress whitespace leading to "".,neutral
angular/angular-cli,uglify,2017-11-24T17:04:53Z,there's also the issue of the cla.,neutral
angular/angular-cli,uglify,2017-11-30T14:00:16Z,fix(angular/cli): update webpack. uglifyjs-webpack-plugin. partially address #5618fix #8571fix #8505,neutral
angular/angular-cli,uglify,2017-11-30T15:07:19Z,filipesilva since this project is one of the bigger users of `uglify-es`. i scan the issues occasionally and happened across this. i'll leave it to you whether or not to act on this information.,neutral
box/box-node-sdk,mocha,2017-12-12T02:46:07Z,update mocha,neutral
box/box-node-sdk,mocha,2017-12-12T02:46:11Z,verified that mattwiller has signed the cla. thanks for the pull request!,positive
quailjs/quail,selenium,2015-03-15T22:42:52Z,port pnotusedasheader tests to selenium (by mlewand),neutral
onsip/SIP.js,eslint,2018-02-19T21:03:42Z,make sip.js (hopefully) buildable on windows. if eslint requires lf. make sure js files get checked out that way,neutral
onsip/SIP.js,eslint,2018-02-20T16:36:01Z,hey seanbright. thanks for the pr. i have outlined some of my thoughts below. we are developing in a unix environment so i am really not all that familiar with getting this to run on windows.i am uncomfortable with the `.gitattributes` change. i think it may cause adverse side effects particularly on the release branch with minified javascript. based on my reading. it appears the correct solution is to set the attributes locally in your dev environment. in terms of the copy files. can you provide some evidence that this is a generally accepted approach? i have found a few different ways to achieve this and it appears that the most minimal and accepted way of doing this is to actually write a node script to copy the file and then execute that script with node. which we should expect to be available on all systems. the concern here is that we are using tools and an approach that is not really all that common and it could create more problems than it solves. especially in terms of future support.,negative
gatsbyjs/gatsby,eslint,2016-02-27T18:02:14Z,the eslint config in the starter repo doesn't like "use strict" so there is still some work to do around that. unless we want to attach an eslint override on it.,negative
gatsbyjs/gatsby,eslint,2016-02-29T00:02:53Z,i'm a bit confused about that error and your fix... was that an eslint error or was that a node.js error? if i run `npm run lint` in the starter-blog for example. it lints `app.js` just fine.,negative
gatsbyjs/gatsby,eslint,2016-03-05T17:33:43Z,yeah — i've kept the bin scripts as es5 to avoid having to compile them in place on publishing (is there a better solution?). i just went ahead and disabled eslint completely on that file and merged your fix in.thanks!,neutral
gatsbyjs/gatsby,eslint,2016-03-07T19:01:29Z,oh nvm. travisci is taking forever and i don't have much time. merging and i'll fix any eslint errors (if any).,negative
pghalliday/grunt-mocha-test,mocha,2013-07-19T10:00:32Z,still looking into this in a new branch `earlyexit`. still having problems replicating the problem in a test though,negative
pghalliday/grunt-mocha-test,mocha,2013-07-19T17:55:51Z,i've added a test that uses a simplistic alternative mocha interface to prove that it works.,negative
pghalliday/grunt-mocha-test,mocha,2013-07-27T18:36:21Z,mocha-test + watch only runs once. i've set up my gruntfile to use grunt-contrib-watch and launch mocha-test when it detects changes in my files.the first time i change a file. it runs the test as it should. if i save the file again. however. all i get is "0 passing (0ms)".is there some sort of internal state preventing it from being run on the same files again? and if so. is there any way to fix this?,negative
pghalliday/grunt-mocha-test,mocha,2013-07-27T18:44:41Z,i think i know what causes this. mocha works by requiring the test files and if you are still in the same process then it just hits the require cache the second time around and as such the tests are not reloaded. i have actually found this quite useful for running multiple reporters to generate both test and coverage data without rerunning tests and as such have never wanted to "fix" this - also the fix involves messing around with the require cache which i have found to be troublesome in the past.i haven't used watch in a while as my tests usually involve a compile step these days and i think i got used to a more manual style in which i like to watch the tests run :)anyway. i do know that grunt-contrib-watch has an option for spawning tests in child processes which by default is on. i am guessing that to run into this issue you have turned that option off?,positive
pghalliday/grunt-mocha-test,mocha,2013-07-27T18:50:40Z,oh awesome. i did indeed have "nospawn": true on - switching this off resulted in a slightly slower process. but does fix this problem!thanks for replying so quickly!,positive
pghalliday/grunt-mocha-test,mocha,2013-07-27T18:52:59Z,you're welcome. in the future i may add an option to clear the require cache or maybe even add another task that can be inserted before each set of test runs so that we can get the best of both worlds,positive
photonstorm/phaser,jshint,2014-06-23T22:46:48Z,please update to pass jshint :),positive
photonstorm/phaser,jshint,2014-06-24T09:25:51Z,added factorial and updated to pass jshint :),neutral
photonstorm/phaser,jshint,2014-07-01T15:09:30Z,thanks for this - note that i'm going to have to fix your file so it passes jshint. so if you do create an example or something please pull freshly first.,positive
photonstorm/phaser,jshint,2014-07-01T15:18:33Z,oh and make sure jshint passes too if you can :),neutral
strongloop/strong-globalize,eslint,2016-08-19T01:08:15Z,fix eslint config and all the linting errors. there was a problem with how eslint was parsing .gitignore that resultedin it not actually linting anything. by fixing this. a whole bunch oflinting errors were uncovered. this fixes all of them.,neutral
strongloop/strong-globalize,eslint,2016-08-19T04:29:29Z,setogit i've addressed the problem from around `lib/translate.js:160` and rebased. it now sends the error through `done()`. which propagates it out to the final callback. i've also added the appropriate credentials to `cis-jenkins` so that it is now running the _full_ test suite of 2200 tests.,negative
strongloop/strong-globalize,eslint,2016-08-19T16:58:39Z,lgtm,neutral
npm/npm,standard,2015-08-27T14:27:43Z,madjam002 the solution i've settled on for that issue is that rather than using an npmignore. is to have a script for prepublishing (another reason prepublish is potentially not the best solution here) that gets everything ready. generated/transpiled etc. then tarballs just the files i want included. no npmignore to cause the issue. that way. but you still get to filter what's included in the standard install.,neutral
npm/npm,standard,2015-08-29T07:47:46Z,madjam002 thanks for clarification. let's stay in touch.maxkorp i'm trying to grasp your reservation toward this approach.afaik when installing from local dir. first **all** the dependecies are installed (including dev dependencies) and then `prepublish` script is executed. so whatever you do to your code. you could put it in `prepublish` script and it will have the dependencies ready.maybe your prepublish logic requires external tools that are not available via npm? then you can just ask your team or contributors to install required software prior to installing your package via git. please consider that installing stuff from git repos is not meant to be standard distribution method. it is only meant to be used in development or staging environments. in production you will still probably use npmjs.org or private npm repository with everything prepared.btw nodegit looks really cool. i was looking for something like that.,positive
npm/npm,standard,2015-09-10T16:47:48Z,cross-compiling idiom. i maintain an npm package with some platform-specific code. users have requested support for cross-compiling for other platforms.is there an agreed-upon idiom for expressing "install these npm packages to be run on target architecture x"? i saw some vague references on the internet to npm_config_arch and npm_config_platform. but nothing in the official npm docs.to be clear. i'm not asking for npm to implement anything. i'm asking if there's a standard that package maintainers can implement. obviously. every package could implement support for their own environment variable my_package_target_arch but this would become unwieldy for end-users of lots of packages.thanks!,negative
mishoo/UglifyJS2,uglify,2013-07-07T21:28:38Z,+1 to this issue. it would be awesome if minifying in the browser was supported by default and well documented,positive
mishoo/UglifyJS2,uglify,2013-07-07T22:24:15Z,maxogden what is the use case for minifying in the browser?,neutral
mishoo/UglifyJS2,uglify,2013-07-10T21:32:41Z,treetransformer does not visit all nodes inside an ast. execute the following code:```var ast = uglify.parse('var a = 100;');ast.figure_out_scope();ast.transform(new uglify.treetransformer(null. function(node) {        console.log('na: ' + node.type);        if(node instanceof uglify.ast_vardef) {            console.log('--- nb: ' + node.name.type);        }    }));```and you should get this output:```na: numberna: vardef--- nb: symbolvarna: varna: toplevel```as you can see. an ast_symbolvar node exists inside the ast_vardef node. however. the treetransformer does not walk into it at any time.i don't know if this is expected or a bug.,neutral
mishoo/UglifyJS2,uglify,2013-07-13T22:11:09Z,bump,neutral
mishoo/UglifyJS2,uglify,2013-07-25T14:23:24Z,--mangle toplevel generates symbolref error. when i specify "--mangle toplevel". uglify.js issues a terse "symbolref" error and exits. i haven't tested against other bodies of code or attempted to isolate this bug further. but could do so if necessary.,negative
mishoo/UglifyJS2,uglify,2013-07-29T12:47:41Z,i don't think so...  but there's already an easy way to get a build for the browser. you just run `uglify-js --self -cm`.  any reason why that doesn't suffice for you?,neutral
mishoo/UglifyJS2,uglify,2013-07-29T14:45:20Z,nope. sorry. i'm not ok with this approach.seems to me that your problem is that uglifyjs cannot be automatically "browserified". right?  presumably. browserify tries to load `node.js`. notices that there's no `require` calls there (at least not for uglifyjs files) and just outputs that file. which of course won't work.what if a special behavior of `uglifyjs --self` would make it a commonjs-compatible module?  this. coupled with a feature in browserify (which if it doesn't exist could be easy to implement. namely. the option to run a custom command to browserify certain projects) could automate things.  hope i explained it properly?,negative
mishoo/UglifyJS2,uglify,2013-07-30T11:27:36Z,i'm sorry. but you are ridiculous. even without my example it is integral to have some form of control over the mangled names. in a website with many js scripts you only uglify certain ones. for exmaple only yours (others may come from cdn hosts etc) ... you never know if a script will polute the global namespace with certain variable names. the possiblity of a name conflict is always there. so don't be rude and consider my request.,negative
mishoo/UglifyJS2,uglify,2013-08-07T18:48:47Z,object properties equal to reserved words are quoted with --screw-ie8 switch. the following command:``` bashuglifyjs input.js --mangle --compress --screw-ie8```with the following `input.js`:``` javascriptvar a = {    "boolean": 1.};```gives:``` javascriptvar a={"boolean":1};```i.e. needlessly quoting the property.,neutral
testem/testem,mocha,2013-05-10T03:08:02Z,thanks! i agree with the notion and i think this a good pr. but i am a little hesitant to make this the default behavior because i didn't find one unit test framework that behaves this way. i've looked at mocha for js. rspec for ruby. and unittest for python. all of them give an ok for when there are no tests. as you've mentioned. tap also behaves this way. so. i feel like i would be going against the grain. but. i would be okay with making this an option.it'd be good to have some discussion on this. so if you are listening please chime in.,positive
DevExpress/testcafe,sauce,2015-12-25T11:23:09Z,it'll be different saucelabs accounts. so we can have two matrixes - client-tests and functional-tests,neutral
mochajs/mocha,mocha,2013-04-06T21:08:11Z,cli spits a clean error when path/js input does not exist. <p>basically. a simple error message is presented to the cli user instead of fs thrown exception if the file or path to be tested does not exist. for example: <em>mocha dajlksdj</em> spits an error :).</p><p>i believe more cleanup work should be made in the cli area. we should consider adding some tests.,negative
mochajs/mocha,mocha,2013-04-11T14:11:30Z,is there a .mocha file where i can specify defaults such as --no-colors?. i'd like to set some defaults for mocha without having to type them each time. does mocha look for a config file / dotfile anywhere. as jshint looks for `.jshintrc` and npm looks for `package.json`?,neutral
mochajs/mocha,mocha,2013-04-12T15:37:25Z,just sounds like you haven't run `npm install` in the mocha dir. i don't use `npm test`,neutral
mochajs/mocha,mocha,2013-04-14T12:52:52Z,running mocha without actual test. hi.mocha --reporter specthis usually runs also the test code. sometimes i just want to see the specs. possible to run it with test code? thanks.angelo,neutral
mochajs/mocha,mocha,2013-04-18T17:57:30Z,add alert and confirm to the list of non-enumerable globals. in my test i want to mock "alert" and when i do that. mocha tells me that i leak "alert".,negative
mochajs/mocha,mocha,2013-04-19T01:24:34Z,you can whitelist them with `.globals(array)`. the ones in core are for bugs in firefox etc,neutral
mochajs/mocha,mocha,2013-04-19T07:51:28Z,sorry. i fail to see see why `window.alert` would be any different than `window.settimeout`.,negative
mochajs/mocha,mocha,2013-04-22T01:07:11Z,+1 wasted time trying to figure out why code was failing within mocha tests. when it was mocha itself causing issues,negative
mochajs/mocha,mocha,2013-04-22T10:50:44Z,any plans to do this soon? it would be really helpful to be able to install mocha as a dev dependency.,positive
mochajs/mocha,mocha,2013-04-22T15:48:01Z,regular you can use it as a component dev dep already (it uses the build products). but i'd like to refactor mocha itself with it some day,neutral
mochajs/mocha,mocha,2013-04-22T17:16:39Z,so i tried adding mocha to dev deps in a component but when i require it i'm just getting an empty object. i was thinking i'd just require it and start it up. is the idea to just point a script tag in my `test.html` to the `mocha` directory in my `components` directory? seems a little counter-intuitive.,negative
mochajs/mocha,mocha,2013-04-23T06:17:22Z,visionmedia. interesting. i wasn't aware that there is a global 'require' too. so there actually is no need to have chai.js and sinon.js and stuff lying around next to test.html like so many projects do.and now that i found the mocha.js target in the makefile. i finally understand where that file comes from. doh :)what do you think. would it be nice to be able to have components that bring their own tests compiled into build.js? i am thinking of widgets that can self-test even after deployment in a production environment (much like couchdb's tests for example). in such a scenario. global namespace pollution would not be acceptable. so i was thinking of making mocha's `exports` interface work with component's `require`. does that make sense?,negative
mochajs/mocha,mocha,2013-04-23T15:57:17Z,we just need to wrap it and module.exports= mocha,neutral
mochajs/mocha,mocha,2013-04-24T15:36:02Z,just having some connection issues. it's hard to read with that unformatted code but i can tell you that it's likely nothing to do with mocha so i'll have to close for now. probably not closing some servers or something in the tests. isolating with sub-procs instead of re-running with mocha's js api in the app process would keep state cleaner,negative
mochajs/mocha,mocha,2013-04-25T14:16:26Z,for some reason. mocha ends up with a recursive structure. you can run the tests yourself. have a look at the link.,neutral
mochajs/mocha,mocha,2013-04-30T12:02:41Z,look here,neutral
mochajs/mocha,mocha,2013-04-30T12:05:06Z,look at the different reports. i'm pretty sure there is something you need:,neutral
mochajs/mocha,mocha,2013-04-30T18:24:54Z,greelgorke thanks!,positive
mochajs/mocha,mocha,2013-05-01T11:52:02Z,i might be wrong about this. but what i see is that even though i compile source maps for my code (and i checked that these source maps really work). if an exception is thrown. mocha reports only the bundle.js file which has the minified/concatenated code.,negative
mochajs/mocha,mocha,2013-05-01T16:01:27Z,that's not the concern of mocha though. you can compile source maps (or use sourceurl) if you're aggregating,neutral
mochajs/mocha,mocha,2013-05-01T17:58:52Z,visionmedia i am sorry. but i don't understand your response. i mean i understand the meaning of it. but it seems to me. that you just repeated your last response and have not reponded to me. that or  i must be completely missing the point somewhere. and i am unaware of not just what it is. but where i am missing it. i am using mocha in the browser on a code which has to be browserified in order to work there. i use the browserify feature of compiling source maps for the code. and they work properly. as long as i am not trying to use the code with mocha. when i use it with mocha. the source maps go away. i only get the original file and line nr. references. not the source maps. which - i repeat the third time - are there. so please. if you do not mind taking the time. explain to me what else should i do so that i can use the compiled source maps with mocha?,negative
mochajs/mocha,mocha,2013-05-02T14:02:02Z,"mocha test/": 0 tests complete. i have to manually specify each test subdirectory in order for mocha to execute any tests. does mocha not run recursively by default?,neutral
mochajs/mocha,mocha,2013-05-02T14:20:31Z,+1more specifically. could mocha look for `mocha.opts` files from the relevant directory all the way back up to home (`~`)?for example. my team would like to specify a timeout of six seconds (`-t 6000`) for all tests in our project. but we'd like to keep formatter settings in our personal directories (`--reporter spec`).,neutral
mochajs/mocha,mocha,2013-05-03T01:48:29Z,nope. lots of people use dirs like `test/fixtures`. `test/support` etc with libs in there. you can use `--recursive`,neutral
mochajs/mocha,mocha,2013-05-03T07:56:12Z,add optional cooldown period between watch test runs. mocha's default watch behavior is a bit too indiscriminate. and will trigger re-runs of your test on any filesystem event. this is bad if you have other watch/guard-type services that modify the local filesystem. such as a coffeescript compiler. such cases can trigger a cascade of tests. which are at best redundant and at worst cause test failures (e.g. when near-simultaneous test runs attempt to bind the same socket. etc.).this commit adds an optional cooldown period between test runs. whichshould help eliminate redundancy.usage:```mocha -w --watch-cooldown 500 test/foobar.js```,negative
mochajs/mocha,mocha,2013-05-03T16:44:50Z,visionmedia ah. okay. will `--recursive` still work well when `text/fixtures`. `test/support` libs etc. exist?,neutral
mochajs/mocha,mocha,2013-05-03T17:23:58Z,not if they have js in them. recursing is typically not a great idea imo. better to just do `mocha test/*.js test/unit/*.js` etc,positive
mochajs/mocha,mocha,2013-05-06T22:56:13Z,my use cases:i have suites where if one test fails. the rest of the tests in the suite are bound to fail.  these are rather slow integration tests that use remote apis.  however. i still care about subsequent suites.  it's nice to get a high level picture as fast as possible without grepping to suites that wont fail.  also. some of the subsequent tests in the suite might only fail due to the bad state left by the failing test.i also use mocha to do cross-browser functional testing. with a suite for each browser.  if something fails in ie. more things are likely to fail in ie. but i still want to run the chrome tests.  very useful when hooking up to ci or running full regressions. as well.,negative
mochajs/mocha,mocha,2013-05-07T15:26:59Z,doing `require('mocha')` just provides a global currently since it doesn't export. but we could easily patch that even without this component(1) refactor. to just check and do `module.exports` properly,neutral
mochajs/mocha,mocha,2013-05-07T19:16:06Z,pre release hook. in this [video]( tj talked about pre-release hook to generate `mocha.js`. after that. don't you need to add this file to index and do another commit. or at least amend the previous commit?i couldn't find the hook you are referring to in the video in this repository. could you share the hooks you are using?,neutral
mochajs/mocha,sauce,2016-07-21T13:07:15Z,retrying travis; seems to be transient sauce failure,neutral
mochajs/mocha,istanbul,2017-04-12T09:57:49Z,debugging is already supported with the `--debug` and `--inspect`. i don't feel that we have the man power to add support for more specific debugging tools that don't run on the remote debugging concept and possibly require platform specific hacks and caveats.if you want gdb to work with mocha i'd definitely recommend the approach scott already outlined with wrapping around the mocha binary. like istanbul for example already does,neutral
mochajs/mocha,karma,2016-07-21T14:28:57Z,upload karma bundles to s3 with public read access. currently we are uploading to s3 but the bundles are not readable by the general public (or anyone besides me. actually..).  they should sync to s3 with "read" access. so pr senders can get at the artifacts for debugging.,neutral
mochajs/mocha,karma,2016-08-07T19:14:04Z,lddubeau thanks for digging in. just for reference. i'm not using karma at all. reversing the order of the includes did resolve the error though. thanks for the work around!edit: reversing the order causes problems with things that depend on both (`json-cov` for instance).,positive
sitespeedio/sitespeed.io,selenium,2015-06-10T07:39:59Z,hi peter. sure. i will log that to selenium today. and i'd be happy to look into setting up ci.appveyor.com for sitespeed.io. hopefully i'll have some time later this week.thanksdarragh,positive
sitespeedio/sitespeed.io,selenium,2015-06-11T09:05:24Z,hi darragh.yep sorry it's only in the latest. hope the selenium boys and girls can do a quick fix release :(bestpeter,positive
karma-runner/karma-sauce-launcher,sauce,2014-05-24T16:24:17Z,fix: sauce error formatting. closes #38 vojtajina not sure if `data` is a valid property of the error object. any idea why this is here?,negative
ipfs/js-ipfs,karma,2016-03-16T23:05:55Z,test: teamcity report for karma,neutral
ipfs/js-ipfs,karma,2016-03-20T21:39:19Z,going to merge this. however. i won't be actively checking if everything is ok at teamcity as the codebase evolves. for now.,neutral
ipfs/js-ipfs,karma,2016-04-02T06:38:03Z,added nested directories + large file + buffer tests.if we do not want to carry the "large" file (213kb) in git. we can change the test to download it from somewhere; however that 'somewhere' must remain stable over time.i cannot get a browser test going for the moment because simply re-enabling 'ipf-data-importing' in the webpack conf of the karma.conf ends up with an illegal attempt to call `fs.readfilesync`. i have not yet investigated this,neutral
google/closure-library,sauce,2015-11-19T19:03:27Z,use closure-sauce account,neutral
cfpb/hmda-platform,codecov,2016-04-29T21:52:34Z,lgtm. i'm inclined to merge it even though codecov is confusing.,negative
power-assert-js/power-assert,karma,2016-06-19T02:22:38Z,update devdependencies. - [x] upgrade babel5 -> babel6- [x] maint tests- [x] update karma related modules- [x] move browserify to devdependencies- [x] move derequire to devdependencies- [x] move dereserve to devdependencies,positive
AnalyticalGraphicsInc/cesium,jasmine,2018-02-06T17:14:22Z,just to prevent anyone doing a bunch of work that we end up being unable to merge.  please keep us in the loop in terms of exactly what you would like to do.  i have a bit of a roadmap laid out in my head and i'd be happy to expand on it if you really are interested in undertaking this.  switching our source code to es6 is trivial. but there are lots of gotchas the moment you are done step 1 (build. jasmine. module loading. backwards compatibility. node. etc...),negative
AnalyticalGraphicsInc/cesium,eslint,2018-01-21T21:35:24Z,fix cesium ion external asset handling. i was so excited about #6136 that i totally glossed over some important details of external assets and for the most part. they didn't work.  `cesiumionresource` should only be used for ion hosted assets. so create a standard resource instance for external 3d tiles and terrain.  this also means that `cesiumionresource.createimageryprovider` can't exist and needs to just be on `cesiumion` directly instead.it's probably easier to review this as a whole file again rather than looking at the diff.i also add `instrumented` directory to .eslintignore becuase it was linting the results of `instrumentforcoverage`cc hpinkos tfili,negative
AnalyticalGraphicsInc/cesium,eslint,2018-01-22T15:27:38Z,just those comments. the rest of the changes look fine to me,positive
AnalyticalGraphicsInc/cesium,eslint,2018-01-22T16:17:00Z,thanks hpinkos. changes made.,positive
AnalyticalGraphicsInc/cesium,eslint,2018-01-23T18:48:56Z,tfili bump,neutral
AnalyticalGraphicsInc/cesium,eslint,2018-01-23T19:43:34Z,looks good to me.,positive
pinterest/esprint,eslint,2017-09-26T01:49:56Z,kendos-kenlen have they discussed it on the eslint side?,neutral
pinterest/esprint,eslint,2017-09-26T02:36:31Z,not as far as i know.,neutral
google/blockly,eslint,2018-01-24T19:02:22Z,okay. i can't win this one.  eslint 3 and eslint 4 disagree about what the indentation should look like.  my next steps:- set the indentation rule to "warn" (running eslint 3)- get rid of all errors under eslint 4- upgrade to eslint 4- get rid of all indentation warnings under eslint 4- set the indentation rule back to "error" (running eslint 4),negative
google/blockly,eslint,2018-01-26T01:34:50Z,get rid of the last indentation lint (that is checked by eslint) and …. …turn indentation back to erroring instead of warning.,neutral
google/blockly,eslint,2018-01-31T18:16:53Z,travis runs with the rules in our .eslintrc.,neutral
google/blockly,eslint,2018-02-01T16:23:37Z,there's no rule for indent.callexpression in .eslintrc and default value is "1"before my last commit. my code respect this rule but travis job fails. i had to change indentation to pass ci (as it was explained in the travis errors).apart from that. i didn't see any other styling errors,negative
google/blockly,eslint,2018-02-02T09:59:34Z,thank you for your feedbackmy branch was not up to date from upstream branch.concerning horizontal whitespace. i propose to add ```"keyword-spacing": ["error"]``` to eslintrcand line wrap isset to 120 in eslintrc,neutral
google/blockly,eslint,2018-02-06T21:13:14Z,there are js files with json blobs in them. so we aren't able to enforce one or the other since json requires double quotes to be correct. we should update the comment in the eslintrc to make it clear single quotes should be used except for json blobs.,neutral
Sharlaan/material-ui-superselectfield,eslint,2018-03-12T08:04:18Z,sharlaan fortunately not. test runners use the source code not the production code for testing. so you could remove the whole precommit hook. and have those run as part of the travis process instead.let me dump this branch and open in a new pr. i know how to get just those 2 files only.it is not travis. i see on my branch the code was overwritten in the precommit line. i would guess eslint would have done that. mmm.,negative
Sharlaan/material-ui-superselectfield,eslint,2018-03-12T08:15:21Z,my bad :- precommit just eslint --fix + formats with prettier- prepush then don't have to fix/format and can run tests directly- travis finally takes over the building process in pre-merge stepso yea since eslint applies only to src and demo/src. i should not need to build in precommit ...i'm open to suggestions regarding workflow automation.,negative
Sharlaan/material-ui-superselectfield,eslint,2018-03-12T09:07:43Z,so i see. i updated the wrong files though. the es folder i see is generated by the build command. so this pr is pretty useless. however for anyone else to be able to easily contribute. you should remove that precommit hook. or update it to just run linting and maybe prettier.i never used prettier. i prefer my own opinion on code formatting. so our process triggers nothing on precommit. but i do run linting and tests on prepush. as we commit more verbosely. running those on each commit. when you changes like 10 pr so files and are committing only 1 or 2 at a time just got in the way of getting things done.depends on how you with to run the control. but anyone with a proper editor should have eslint running real time informing them of errors as they type. which we do so linting on prepush is pretty safe for us.i am going to close this. update the correct 2 files and no-verify push to bypass that precommit so that you have just the files that have changed.,negative
vatesfr/xen-orchestra,eslint,2018-02-07T11:47:07Z,chore(eslint): remove no-missing-* rules,negative
vatesfr/xen-orchestra,eslint,2018-02-07T13:42:15Z,i'm closing this pr. because i'll fix it in another commit.thank you.,neutral
mapbox/carmen,mocha,2014-07-22T16:14:40Z,groups tape. expose the `geocoder_name` functionality to allow for sources on the same geographic level.this pull also optimizes reverse geocoding of multiple sources by checking the input against a sources `bounds` parameter. skipping if out of range. this also switches all of the tests to take instead of mocha.,negative
angular-slider/angularjs-slider,codecov,2016-02-29T21:34:33Z,no i'm also done for tonight. thanks.actually. you were right. the coverage has dropped to 99% and it was due to this bug: i don't understand why codecov didn't show any warning for it. probably due to the several rebase that lost it...,negative
avajs/ava,codecov,2017-07-20T13:39:13Z,abouthiroppy `npm test` gives me the same coverage as on codecov.,neutral
Modernizr/Modernizr,sauce,2014-02-17T14:33:24Z,ryanseddon were we going to be using browserstack instead of sauce?,neutral
Modernizr/Modernizr,sauce,2014-02-17T23:00:09Z,i'm following up with browserstack with the issues i had at the moment to see if they can be resolved. pending that gets resolved i will favour browserstack over saucelabs.,positive
Modernizr/Modernizr,sauce,2014-03-03T10:28:29Z,browserstack browserstack runner. i've removed android browsers until issue is resolved. ie7 is throwing the infamous operation aborted error. i tried this in a saucelabs ie7 and didn't get it.,negative
Modernizr/Modernizr,sauce,2014-03-04T00:06:32Z,~~running automation vs manual live testing is getting different results. ie6 fails in automation but passes when i run the same test page in live mode?~~scratch that ran grunt to build latest combined file.,negative
Modernizr/Modernizr,sauce,2014-03-04T01:11:38Z,dhimil still getting timeout issues. opera mobile always timesout and this time opera desktop v19 timed out too.,neutral
Modernizr/Modernizr,sauce,2014-03-04T01:12:12Z,gah. have i written shit code again? i’ll have a look.,neutral
Modernizr/Modernizr,sauce,2014-03-04T02:13:18Z,and another. which addresses test failures in browsers which don’t support css columns… (e.g. ie9),positive
Modernizr/Modernizr,sauce,2014-03-04T11:27:45Z,this is actually all passing for some reason browserstack kicks off two automation tasks. the commit hash for my last commit in browserstack ran all browsers and passed fine. the other hash failed in ie10 because it looks like jquery failed to load for some reason.also i tried and failed to squash this. probably because i had to rebase from master a few times. stucox. patrickkettner you're welcome to try.otherwise i'd say we're good to merge.,positive
Modernizr/Modernizr,sauce,2014-03-04T11:28:55Z,stucox patrickkettner you both have access to browserstack and can see the automation that has been running if you haven't looked already.,neutral
Modernizr/Modernizr,sauce,2014-03-04T17:07:17Z,updated. dhimil,neutral
Modernizr/Modernizr,sauce,2014-03-04T22:01:56Z,sweet so that passed on your commit patrickkettner we should be good to merge now.,positive
Modernizr/Modernizr,sauce,2014-03-05T06:37:48Z,awesome! good to see test pass! meanwhile we were able to fix the android issue (except the kindle devices). can you add them and lets see the results.,positive
Modernizr/Modernizr,sauce,2014-03-05T06:42:52Z,i am unable to find a way to set proxy on kindle devices to make the local testing work. lets start with other device emulators.,neutral
Modernizr/Modernizr,sauce,2014-03-05T07:49:51Z,ryanseddon looking into it.,neutral
Modernizr/Modernizr,sauce,2014-03-05T08:34:35Z,this would most likely be a comment for the browserstack-runner. but it would be great to have colorized output (or some kind of visual emphasis on important information) on the travis output. makes it a lot easier to scan for failure,positive
Modernizr/Modernizr,sauce,2014-03-05T08:39:41Z,would you like an issue to be opened up on browserstack-runner for tracking?,neutral
Modernizr/Modernizr,sauce,2014-03-05T10:30:47Z,patrickkettner yep fair enough. are you concerned with the commit history on this? i can always kill this branch and do a clean one. famous last words.,negative
Modernizr/Modernizr,sauce,2014-03-05T10:35:33Z,its pretty messy at the moment. but i haven't tried to rebase it yet. if you think that it would be best to just open a new pr when this is good to go. i'd be fine with that too,positive
Modernizr/Modernizr,sauce,2014-03-05T23:33:59Z,yeah i might open a new one when the tests run consistently so as not to merge in this crazy commit history.,negative
Modernizr/Modernizr,sauce,2014-03-11T05:20:13Z,dhimil seems iphone 5s running ios7 is crashing and timing out.,neutral
mhkeller/indian-ocean,standard,2015-09-14T13:55:20Z,i think passing options as an object would be better than extra arguments for the reasons you state. and it's a pretty standard way of doing this.,positive
mhkeller/indian-ocean,standard,2015-09-14T15:11:05Z,ya i think this'll become a breaking change but a good idea. > le sep 14. 2015 à 22:55. eric brelsford notificationsgithub.com a écrit :> > i think passing options as an object would be better than extra arguments for the reasons you state. and it's a pretty standard way of doing this.> > —> reply to this email directly or view it on github.,positive
svgdotjs/svg.js,sauce,2017-06-28T16:51:20Z,hmm.. one concern though is not with the actually pr but with the failing test. according to the travis log the issue is that sauce_username and sauce_access_key is not provided but both are defined as environmental variables on the travis settings page.dylanlacey did our credentials change over at sauce labs?,negative
walmartlabs/eslint-config-defaults,eslint,2016-03-04T07:31:27Z,lkrnac since this resolves some issues for me. i've published your pr as `divmain/eslint-config-defaults`.  looks like there are some other requirements that baer has in mind for full eslint v2 compatibility. so i'll unpublish as soon as #69 is closed.,positive
react-boilerplate/react-boilerplate,mocha,2016-02-29T09:47:40Z,i tried do it yesterday.faced problem with karma (or mocha?). it's crashed on import es2015 modules.i cannot understand where and when test task executes during build task. and how fix it.also i think that if we switch tests to ava problem will be eliminated.,neutral
react-boilerplate/react-boilerplate,eslint,2016-07-25T10:50:33Z,got it working. i had to:- remove ngrok from package.json (does not install properly on windows)- run:```npm cache cleannpm installnpm install eslint -gnpm run setup```the 'installing dependencies...' part of the setup seems to do nothing on windows. the node_modules directory is empty after this completes.,negative
react-boilerplate/react-boilerplate,eslint,2016-08-01T08:51:01Z,ideally set up .editorconfig to use same formatting as expected by eslint. if not possible at least set webstorm formatter to use same formatting as expected by eslint.at least i've found eslint --fix parameter. which fixes these formatting issues.,neutral
react-boilerplate/react-boilerplate,eslint,2016-08-01T12:29:30Z,> ideally set up .editorconfig to use same formatting as expected by eslint.oh no. i thought we had that! is our editorconfig out of sync with the eslint config?,neutral
react-boilerplate/react-boilerplate,eslint,2016-08-03T07:52:05Z,yeah. that's because if you don't have actions/reducers/… the store won't be used in the route and eslint will throw an "unused variable" error… :confused:,neutral
react-boilerplate/react-boilerplate,eslint,2016-08-03T16:38:11Z,> yeah. that's because if you don't have actions/reducers/… the store won't be used in the route and eslint will throw an "unused variable" error… mxstbr that's understandable. but having generator configured code that crashes feels like a bug to me. if automating 100% workable code generation is not practical. imo. at the very least the code should work as generated and code comments should describe what's going on.if you agree. i'll open an issue on it. can't promise that i have time to fix it any time soon though  as for this pr. i see no reason not to merge.,negative
react-boilerplate/react-boilerplate,eslint,2016-08-08T07:36:16Z,i think we need to fix the `eslint-import-plugin` with our `resolve` settings of webpack. would you mind looking into that?,neutral
react-boilerplate/react-boilerplate,eslint,2016-08-08T14:50:56Z,mxstbr i really would love too. but i'm not sure if i understand correctly.so.  i guess i need to config `eslint-import-plugin`. but there is no any of `eslint config file` at all.shall i create a new one?,negative
react-boilerplate/react-boilerplate,eslint,2016-08-10T06:33:17Z,mnemanja if eslint has a plugin for your editor/ide lint runs automatically and you see errors in real-time as you type. it uses the eslint configuration from the `react-boilerplate` project. there's nothing for you to configure beyond setting up your editor for eslint support.for example. i'm running atom with `linter`. `linter-eslint` and `linter-stylelint` packages. i get lint errors reported as i type or paste code in .js and .css files.,negative
react-boilerplate/react-boilerplate,eslint,2016-08-10T20:19:26Z,i was able to fix this issue by changing the lint:eslint script to "eslint --ignore-path .gitignore --ignore-pattern internals/scripts || true".  if the eslint command results in an error. the "|| true" part will run. returning true (e.g.. non-error) to npm.,positive
react-boilerplate/react-boilerplate,eslint,2016-08-14T04:32:31Z,will need to be merged with #862 before it will pass ci. there is a problem with eslint and friends present in the current dependency tree (before #862).,neutral
Esri/esri-leaflet,standard,2015-09-14T06:52:52Z,our company publishes web mapping services of taiwan only rather than a global scale.if there's no standard for cases like this. we would have different origins using services from different sources.,positive
apache/zeppelin,selenium,2016-04-26T13:52:00Z,r-kamath build fails with ```failed tests:   sparkparagraphit.testsqlspark:169 paragraph from sparkparagraphit of testsqlspark result: expected: "age job marital education balance\n30 unemployed married primary 1.787"     but: was "age\njob\nmarital\neducation\nbalance\n30 unemployed married primary 1787\nage\njob\nmarital\neducation\nbalance"```looks like this require selenium test update.,negative
assaf/zombie,standard,2014-06-12T07:29:33Z,well. that only works if you control the html you're reading which in my case isn't true. i suspect zombie should follow the "be strict with what you do. be lenient with what you require" approach to standards.,neutral
yeoman/generator,coveralls,2013-12-29T01:06:46Z,couple of comments:- i usually define all of my paths as variables just to keep things dry between tasks.- i would move the coveralls stuff into another function or package- the mocha stuff can probably be its own task as well (trigger with `.run('mocha'. cb)`),neutral
yeoman/generator,coveralls,2013-12-30T02:58:43Z,sboudrias the coveralls stuff kinda feel like it should be a node module or gulp thing.,neutral
yeoman/generator,istanbul,2013-12-28T02:09:39Z,yeah. i saw this one yesterday. i tested the rules against our code base and some weren't applying cleanly on top of the actual code base. so i edited pieces of it in the grunt branch. i'll bring them over the gulp ones and try the lastest one on mocha.there's no istanbul (coverage at all?) plugin for gulp as of yet. but i really like how they're written. i'll probably take a stab at it in the next few days.,negative
MithrilJS/mithril.js,eslint,2017-04-09T06:13:45Z,isiahmeadows interesting. `npm run lint` isn't complaining about that. i removed a bunch manually but didn't even notice the rest because i'm 100% a semicolons required guy.why doesn't `.eslintrc.js` have```js"semi": ["error"."never"].```in it?,negative
feross/buffer,sauce,2014-12-24T03:27:00Z,i tried running the tests in local browsers but not at sauce. lemme try that real quick.,neutral
feross/buffer,sauce,2014-12-24T03:52:20Z,this seems to be working for me in sauce. with tape they just seem to run impossibly slow there...,neutral
feross/buffer,sauce,2014-12-24T08:58:46Z,if you get sauce labs remote testing set up properly. you should (in theory) be able to test that things are working properly before pushing to master. it's been a bit flaky for me tonight though :(if it's helpful to get the tests passing. feel free to push to master for now.,positive
feross/buffer,sauce,2014-12-24T19:46:18Z,makes sense - i will make sure to run those beforehand next time. i ran out of sauce minutes pretty quick tho... do i need a paid plan or maybe i can test by pushing to a non-master branch here?,positive
feross/buffer,sauce,2014-12-24T22:11:54Z,jessetane you have to make an open sauce account:  and then you get unlimited testing.,neutral
feross/buffer,sauce,2014-12-30T05:28:40Z,i create a sauce labs account for each project since even with an open source account you only get a limited number of sub-accounts. like two or something.but i only need to do this because i want to show a unique badge on each module's readme. for running zuul locally. you can just use one account for everything.,positive
datproject/dat,standard,2015-08-17T10:27:27Z,hey. thanks for opening this pr. i think this is a great suggestion. and linked data is super important!i'm hesitant to put any specific standards into dat. because then we'd have to support all of them. if people wanted to use `id` as the key they could do `--key=id`. is there a reason why the `-k id` interface isn't serving well? too much? often forgotten?at one point. we were thinking about putting a `dat add` function that would be a little more 'magic' to walk one through a data import. here. we could imagine a series of prompts -- one of them could try to auto-detect the unique key and ask you which column based upon that. i can imagine these kinds of higher-level features going into that.,positive
KyleAMathews/typography.js,standard,2017-01-12T05:47:57Z,ensure standard ligatures are enabled,neutral
OpenZeppelin/zeppelin-solidity,coveralls,2017-07-24T19:40:35Z,remove coveralls token. the token was supposed to be secret. testing things out in this pr to see if coverall's check works without it.,neutral
cfpb/capital-framework,uglify,2017-11-08T15:38:31Z,update dependences and build. ## changes- updates build gulp tasks to es6 syntax.- replaces uglifier with `uglifyjs-webpack-plugin` to match cfgov-refresh configuration.- updates `babel-preset-env`. `deepmerge`. `finalhandler`. `run-sequence`. `serve-static`. `sinon`. `wcag`. `webpack`.## testing- `gulp build && gulp test` should pass.,neutral
duereg/gulp-coffee-istanbul,istanbul,2015-02-17T17:41:56Z,that's pretty standard... you don't check in node_modules. and on doing an npm install. it will install the modules for you. just try `npm install gulp-coffee-istanbul` and that should install all the files you need. hope this helps!,positive
vvo/selenium-standalone,selenium,2014-11-18T20:47:01Z,i really don't know. maybe it's your proxy settings? also please use the latest selenium-standalone,positive
vvo/selenium-standalone,selenium,2014-12-03T11:41:23Z,well according to selenium it's a feature.,neutral
nathanboktae/mocha-phantomjs,mocha,2015-09-09T04:59:39Z,oh. i see. now i use `mochaphantomjs.run()` and all work right! thank you! i read this tip. but totally forgot where to use it :smile:,positive
nathanboktae/mocha-phantomjs,mocha,2015-09-09T05:13:33Z,good to hear :) and good to hear my work to remove that need will be an improvement - the goal of `mocha-phantomjs` is that it just builds on your vanilla testing work. and that was the one thing not conforming to that.,positive
nathanboktae/mocha-phantomjs,mocha,2015-09-17T11:16:56Z,+1 would be nice to have. sometimes you just want to quick spin up tests without having to dig into build scripts.,positive
nathanboktae/mocha-phantomjs,mocha,2015-09-17T16:02:24Z,i can see that. one thing to note is that `mocha-phantomjs` can't know about what files you need to watch. but the same thing is true for browser sync that i've been using a lot lately. and i just pass it a glob of files to watch.,negative
nathanboktae/mocha-phantomjs,mocha,2015-09-21T07:38:46Z,closing as i think this is a bad idea. if you're fighting phantomjs this much you should test in real browsers (try firefox + xvbf. perhaps with slimerjs or karma). also `mocha-phantomjs` supports phantomjs 2 if you bring your own binary via `-p`.,positive
nathanboktae/mocha-phantomjs,mocha,2015-09-21T07:41:22Z,closing as this is a bad idea since we can't aggregate the tests results in a meaningful way. it's much better to have one test runner and use the grep option (`-g`). otherwise like i mentioned above. this is just `find . -name "*.test.html" -exec mocha-phantomjs {} \;` which you can do yourself if you wish.,negative
nathanboktae/mocha-phantomjs,mocha,2015-09-23T05:06:46Z,uses `require.resolve` to get the realpath of mocha-phantomjs-core.js. to fixes #204,neutral
nathanboktae/mocha-phantomjs,mocha,2015-09-30T00:49:19Z,sorry reading your post a bit more. i see you're trying to come up with a workaround. i think this is out of the scope of `mocha-phantomjs`'s responsibility. for example. you could change that dirty to monkey patch all `error#stack` to polyfill source map support and include it with your tests just as all users of phantomjs have to polyfill various other stuff. like `mutationobserver`. `promise`. etc.,negative
marionettejs/backbone.marionette,mocha,2014-09-13T03:31:15Z,helper function that reliably verifies if a given function is a view "class" (or view constructor). if we want to proceed with the suggestions given in issue #1846. this helper function is the first step. but i think it is quite useful by itself.it would allow us to have dynamic view classes (the view class would be obtained at run-time). the first place to use this would be in collectionview. but i see it being useful in other parts of marionette. unfortunately i don't have experience with mocha to write a tests. hope that will change shortly.,positive
marionettejs/backbone.marionette,mocha,2014-09-13T03:41:49Z,i was just thinking we would include this in the collectionview class. is there any reason to abstract it into a helper? also. would we want analogous methods for model. collection. object...etc.?,neutral
marionettejs/backbone.marionette,mocha,2014-09-13T04:06:45Z,i see this functionality (choose the view to be used at runtime) being useful in other parts of marionette. for instance. to implement reusable component classes. i do pass view classes in those kind of classes. along with a region instance. as for analogous methods. yeah. we would need to have them for models and collections if this ends up being replicated for them. as for the rest. underscore provides utilities to check the kind of object.,neutral
marionettejs/backbone.marionette,sauce,2016-12-20T05:52:35Z,hmm i don't know why it is failing on the main repo and not my fork... only thing that is really different is sauce failed on my box because i don't have the username/password on my travis.. anyhow.. check out travis on my link above.. we can get that to work.. i think as a poc this should be ok..,negative
marionettejs/backbone.marionette,coveralls,2014-09-01T04:19:44Z,resolved by #1795,neutral
marionettejs/backbone.marionette,coveralls,2014-09-10T15:48:18Z,:thumbsup: thanks james. this is a huge win! first the specrunner will be much easer to use. second. coveralls just got a whole lot better!,positive
marionettejs/backbone.marionette,coveralls,2014-09-10T17:14:55Z,resolved by #1853,neutral
nteract/nteract,eslint,2016-07-25T17:45:13Z,> yea i was trying to say that that's wrong. it prints out to the terminal just fine.it does indeed! however. our linting config explicitly forbids the use of `console.log`. causing travis to return a big ugly ❌. the options to get around this include:- using `console.warn`- using `console.error`- popping up a dialog box using native electron apis- using `eslint disable line`however. all use of `console` should likely be forbidden in the main process as you can only see this when launching nteract from the command line (my comment will make more sense when you're using the built app).,negative
nteract/nteract,eslint,2016-08-13T19:26:33Z,ohhhh. this issue is related to the fact that it's not upgrading the config _and_ eslint at the same time.,neutral
nteract/nteract,eslint,2016-08-13T19:27:29Z,bump eslint and eslint-config-airbnb. resolution to #589,neutral
nteract/nteract,eslint,2016-08-13T19:33:15Z,thanks jdfreder!,positive
nteract/nteract,codecov,2016-06-14T23:31:45Z,good catch codecov!,positive
nteract/nteract,codecov,2016-06-24T13:55:56Z,rely on codecov bash instead of codecov-node. in support of #533,neutral
fullcalendar/fullcalendar,karma,2016-09-29T01:59:07Z,yes! these docs are written for the main fullcalendar project. but it's a similar setup for scheduler (except with coffeescript). also. the gulp task names are different (would be `gulp karma` instead of `gulp test`),neutral
HospitalRun/hospitalrun-frontend,snyk,2016-07-07T19:41:09Z,soarez thanks for the pr.  the tests were failing because of an issue with snyk.  once i addressed that there was a small jscs error where there were unused declarations app/admin/workflow/route.js.  i manually made the fix and merged your pr.  thanks again!,positive
appium/appium,selenium,2014-07-16T11:28:27Z,how to run appium pointing some other machine. i am running appium on my mac machine where i have mentioned server address of my windows machine which is in same lan. i doing this because i am having selenium scripts written in vsts on my machine. i am having iphone connected to my mac machine and i want to run the scripts on the iphone. when i am starting my appium server i am getting error as "the address is not available". anybody can help me how to get it resolved.,negative
appium/appium,selenium,2014-07-18T10:19:40Z,can you please suggest me what are the jars files need to be used for appium using selenium driver,neutral
appium/appium,selenium,2014-07-19T06:44:47Z,hi moizjv i have included appium.jar n also selenium.jar after including appium.jar click function s working but sendkeys were not working,neutral
appium/appium,selenium,2014-07-23T11:29:42Z,ios: org.openqa.selenium.sessionnotcreatedexception: a new session could not be created. (original error: no app set; either start appium with --app or use 'app' cap) . i will to use installed application on ios device and i don't want to use "app" property at all. so. i set up desired capabilities properties for "bundleid" and "udid" and ignore "app" - i got this exception message for ios."org.openqa.selenium.sessionnotcreatedexception: a new session could not be created. (original error: no app set; either start appium with --app or use 'app' cap) (warning: the server did not provide any stacktrace information)"but. the same works  fine. if we set up same properties for appium gui and ignore app property.,neutral
appium/appium,selenium,2014-07-25T18:19:55Z,you can also just use the bundle id as the value of the app capability instead of using the bundleid capability,neutral
appium/appium,selenium,2014-07-30T07:35:50Z,you should use actions class in selenium.,neutral
appium/appium,selenium,2014-07-30T22:35:14Z,please advise on how to obtain `reproducible steps (with just using selendroid / not appium)` per request from selenium team.also. i don't see why you're closing this issue. as an appium user. i shouldn't be expected to know how it works under the hood (whether it's selendroid or uiautomator). from my point of view. there issue is with appium - selendroid is an implementation detail.,neutral
appium/appium,selenium,2014-08-05T06:26:45Z,configuring selenium grid in windows for appium remote execution. my requirement:i have selendroid script in one windows machine and appium server and android device connected in another windows machine.i am trying to achieve remote execution .could you please brief me the steps.thanks,positive
appium/appium,selenium,2014-08-05T18:38:06Z,sorry. the issue tracker isn't a place to share instruction steps. please ask in the forums,positive
appium/appium,selenium,2014-08-14T05:14:27Z,i am getting error message saying chromedriver.exe is not a valid win32 application.i guess i need to replace chromedriver file.but from  where i get 32bit chrome driver file.bec in selenium site we have common driver file for both 32bit and 64bit.please suggest me what action i need to take.system details :windows 7 32bitthanks.,negative
appium/appium,selenium,2014-08-15T11:56:31Z,hi.what code did u exactly write for performing touch gestures in android . please let me know,positive
appium/appium,sauce,2014-05-17T20:30:33Z,update ruby sample code. updated the ruby sample code.`android_on_sauce.rb` works locally and fails on sauce. the sauce failure isn't new. it's not clear why sauce is unable to run this test.,negative
appium/appium,sauce,2014-05-18T01:36:57Z,`android_on_sauce.rb` not working on sauce is a known issue. it's not clear why sauce can't run this test.,neutral
appium/appium,sauce,2014-05-19T16:32:31Z,dylanlacey if there are no objections. i'm looking to merge this soon.,negative
appium/appium,sauce,2014-05-20T07:59:20Z,lgtm.,neutral
appium/appium,sauce,2014-05-20T08:00:03Z,does it still fail to run on sauce?,negative
appium/appium,sauce,2014-06-03T19:15:44Z,seems like this issue is on saucelabs only? if still an issue. can you contact [support](,positive
appium/appium,mocha,2014-08-04T23:50:47Z,fix handling of keystore creation. put the keystore management code in a `before` block. so as to stop abusing mocha. and make sure keystore is created before we try to use it in a test.,negative
sendgrid/sendgrid-nodejs,mocha,2013-05-28T22:05:54Z,publish normally. not shrinkwrap. for some reason you published using shrinkwrap and included all the devdependencies. i definitely don't need mocha in my production app.,neutral
sendgrid/sendgrid-nodejs,mocha,2013-05-30T12:57:14Z,fixed the issue where shrinkwrap had the devdependencies in it.  still keeping the shrinkwrap though.  i've been burned by `nodemailer`'s non-strict dependency management one too many times to remove it.  more details on why in issue #39happy to hear an argument against it though.,negative
jhipster/generator-jhipster,eslint,2016-07-10T03:55:10Z,fix eslint errors in gulp files. fix eslint errors in gulp files,neutral
jhipster/generator-jhipster,eslint,2016-07-11T12:21:58Z,vivekmore can you do the pr for the angular2 branch's client-2 as well?,neutral
jhipster/generator-jhipster,eslint,2016-07-11T15:19:41Z,absolutely,neutral
jhipster/generator-jhipster,eslint,2016-07-11T17:15:17Z,fix eslint errors in gulp files. fix eslint errors in gulp files- client folder- client-2 folder,neutral
jhipster/generator-jhipster,eslint,2016-07-12T02:25:12Z,lgtm :),neutral
niklasvh/html2canvas,mocha,2014-12-22T13:37:31Z,thanks for the pull request!there are a few issues in the pr:- all changes should be made in the source files. (reside under `src/`)- all draw related issues should reside under an implementation of a `renderer`. which would be `canvasrenderer` in this case. the `nodeparser` does not rely on an implementation of `canvas` to be available. and it could be used to render onto a webgl context. or just a serialized json list of draw commands.- some (mocha) unit tests for the generation of list items would be nice,neutral
jashkenas/underscore,eslint,2014-07-21T18:25:07Z,actually looks like `eslint` is failing the build. michaelficarra can you disable dot-notation,negative
keycloak/keycloak-nodejs-connect,standard,2016-09-05T16:21:15Z,lgtm. the semistandard bits are only spaces issue.,neutral
brunch/brunch,eslint,2016-03-08T10:45:42Z,workers refactor idea. my first shot at making using workers a little bit clearer.the gist is formalizing which "pieces of computation" can be parallelized. because only json can be sent between processes. the serialization/deserialization steps are now grouped in the "job description". instead of being scattered across switch in worker-job-processor and implementation in pipeline/generate.a job is described by:- `serialize`. which takes some `hash` and produces a hash to be sent as json (always executed in main process);- `deserialize`. which takes the hash from the step above and should produce the **original** hash passed to serialize (always executed in worker process). to aid reconstructing original hash. `ctx` is passed (which contains all loaded plugins; we needed it to select appropriate plugins for a given file to compile)- `work`: actually perform the work. can be called in both master and worker.(mediator is still used but it's not scattered across several files anymore. we can get rid of it. but the focus of the pr is on making workers easier to comprehend.)then. wherever we used to have a `mediator.wrkr ? onefn : anotherfn` switch. we can now simply call `processjob(jobdescription. {dataforthejob})`. and that function will itself figure out whether it needs to schedule work in a worker. or call job.work right away (if workers are disabled).this is mostly an implementation of an idea. any feedback and suggestions welcome.cc paulmillr es128 - [x] eslint- [x] squash- [x] no mediator,neutral
brunch/brunch,eslint,2016-03-08T10:48:20Z,norm.,neutral
brunch/brunch,eslint,2016-03-08T12:06:28Z,got rid of the mediator for workers,neutral
agda/agda-stdlib,standard,2018-02-27T08:48:29Z,matthewdaggitt. i just realized that the new `pointwise` datatype from data.vec.relation.pointwise.inductive does not typecheck when the `--without-k` option is enabled. while the old `pointwise′` from relation.binary.vec.pointwise did. some universe levels seem to have been dropped. is there any reason for that?i don't know if there's any policy w.r.t. the use of axiom k. but i think it might be good to have as little of the standard library rely on it as possible. wdyt?btw. the reason i checked with `--without-k` in the first place is that. as you point out. `pointwise` is now heterogeneous in the length of vectors. i'm a bit worried that that might also require k. but it's just a gut feeling. maybe jespercockx can tell us more.,negative
agda/agda-stdlib,standard,2018-02-28T13:20:56Z,> some universe levels seem to have been dropped. is there any reason for that?which ones? could you point them out? if i have dropped universe levels. it's definitely an accident! i've spent quite a while adding them into various places in the library.> i don't know if there's any policy w.r.t. the use of axiom k. but i think it might be good to have as little of the standard library rely on it as possible. wdyt?there's definitely not an existing policy. if i were to come up with one on the fly i guess it is to minimise the use of it. except where it significantly impacts user experience. the question is whether the average user of `vec.pointwise` is more likely to be concerned with the usage of axiom k or is more likely to want proofs where the size of vectors are propositionally but not definitionally equal. i personally think the latter case will be more common (albeit on absolutely zero evidence). i'd welcome other opinions though and am definitely open to changing my mind. gallais thoughts?,negative
agda/agda-stdlib,standard,2018-03-16T17:53:20Z,added new `respects` types and tidied up `relation.binary.nonstricttostrict`. this adds explicit types to the two components of `_respects₂_` in `relation.binary.core`. the left and right components are often useful on their own. and decomposing the product can be annoying.also standardised the names in `relation.binary.nonstricttostrict` and added some extra properties to the module.,positive
keycloak/keycloak-nodejs-auth-utils,standard,2016-08-11T16:20:41Z,added note on using semistandard.,neutral
keycloak/keycloak-nodejs-auth-utils,standard,2016-08-11T16:44:15Z,ah funny - really didn't see that at all.,positive
keycloak/keycloak-nodejs-auth-utils,standard,2016-08-11T16:46:51Z,thomasdarimont but this your note is more easy to see than this simple phrase"make sure the jshint and semistandard are happy and that all tests pass",neutral
keycloak/keycloak-nodejs-auth-utils,standard,2016-08-11T17:18:41Z,thanks for the contrib,positive
QubitProducts/cherrytree,standard,2015-11-09T17:55:46Z,for you - would it not make sense to plugin qs?i suppose it's a bit more difficult in a non cjs/webpack/browserify environment.the idea here was to keep internal qs as simple as possible. is there even a standard way of parsing arrays?,negative
QubitProducts/cherrytree,standard,2015-11-10T05:54:51Z,yeah the more i dig the bigger the mess i see... is an empty array just not there. `foo[]=`. or `foo=` ? or maybe just `foo[]`? sigh... lack of standards here hurts.,negative
QubitProducts/cherrytree,standard,2015-11-10T08:23:41Z,> sorry that i keep "rejecting" your pr proposalsnp. and honestly this was a question and i convinced myself against it. query string parsing is totally not standardized. so a simple parser in < 20 lines with the option of providing your own is the best way. which is what cherrytree does now.> just being careful with how the project evolvesthat's the right default reaction. any addition is ever ongoing maintenance. or a breaking change that requires upfront notice and user pain. i've rejected more prs to `mocha-phantomjs` than i've accepted in the last year or so :/,negative
QubitProducts/cherrytree,sauce,2015-10-16T08:22:06Z,disabled greenkeeper - it's running tests a lot and saucelabs can be flaky - thus causing false alarms,negative
alphagov/govuk_elements,standard,2016-10-26T16:15:57Z,move contribution guidelines. <!--- provide a summary of your changes in the title above -->## what problem does the pull request solve?this pr moves the contributing.md file out of the `.github/` folder. links to it from the readme and also updates the contibution guidelines to include more detail on standardjs.## screenshots (if appropriate):## what type of change is it?<!--- what types of changes does your code introduce? put an `x` in all the boxes that apply: -->- [ ] bug fix (non-breaking change which fixes an issue)- [x] new feature (non-breaking change which adds functionality)- [ ] breaking change (fix or feature that would cause existing functionality to change)## put an `x` in all the boxes that apply<!--- if you're unsure about any of these. don't hesitate to ask. we're here to help! -->- [x] my change requires a change to the documentation.- [x] i have updated the documentation accordingly.- [x] i have read the **contributing** document.,neutral
babel/babel,codecov,2017-02-18T11:52:29Z,enable codecov partial coverage. | q                        | a <!--(yes/no) -->| ------------------------ | ---| patch: bug fix?          | n| major: breaking change?  | n| minor: new feature?      | n| deprecations?            | | spec compliancy?         | n| tests added/pass?        | n| fixed tickets            | | license                  | mit| doc pr                   | | dependency changes       | we already upload json format to codecov (which supports partial coverage) and this enables partial support in codecov.coverage will most likely drop.,positive
babel/babel,codecov,2017-02-22T03:33:18Z,sounds like a good idea? did we do this on babylon already?,positive
babel/babel,codecov,2017-02-27T09:48:24Z,yes babylon has this already,neutral
babel/babel,codecov,2017-02-28T13:24:56Z,okay i changed it.the codecov fails. because the tests are still disabled. as they won't work with current babylon.,negative
linkeddata/rdflib.js,mocha,2017-03-10T15:23:45Z,there's a problem in the test suit. inside named-node-test.js the describe.only() is disabling all the other tests in the folder when called in a glob from mocha. i've changed it but you might wanna do that in master in the meanwhile.,neutral
linkeddata/rdflib.js,mocha,2017-03-10T15:27:02Z,remove .only() from namednode mocha test. :man_facepalming:merging this once tests pass.,neutral
linkeddata/rdflib.js,mocha,2017-03-10T15:27:37Z,raised in #170,neutral
jshint/jshint,jshint,2013-03-17T05:42:59Z,excess errors with asi and `delete`.. the following javascript:``` javascriptvar a = { b: 1 }delete a.b```with the following `.jshintrc`:``` javascript{  "globals": {  }.  "node": true.  "es5": true.  "asi": true}```throws:```jshint-bug.js: line 3. col 1. expected an operator and instead saw 'delete'.jshint-bug.js: line 3. col 10. expected an assignment or function call and instead saw an expression.2 errors```while it should not give any errors.,negative
jshint/jshint,jshint,2013-03-18T07:30:38Z,typeerror occurred when jshint executes with one file. when i executed jshint with one file path. typeerror is occurred because 'process.env.home' is undefined in findconfig().---d:>jshint plugin.jspath.js:204        throw new typeerror('arguments to path.join must be strings');typeerror: arguments to path.join must be strings    at f (path.js:204:15)    at object.filter (native)    at object.exports.join (path.js:209:40)    at findconfig (c:\documents and settings...\application data\npm\node_modules\jshint\src\cli\cli.js:105:33)    at object.exports.interpret (c:\documents and settings...\application data\npm\node_modules\jshint\src\cli\cli.js:337:45)    at object.<anonymous> (c:\documents and settings...\application data\npm\node_modules\jshint\bin\jshint:3:32)    at module._compile (module.js:456:26)    at object.module._extensions..js (module.js:474:10)    at module.load (module.js:356:32)    at function.module._load (module.js:312:12)---,negative
jshint/jshint,jshint,2013-03-20T11:16:23Z,cannot click "blog" link on the jshint.com website. github's fork button prevents clicking blog link on jshint.com.the fork badge has higher z-index and oveylaps blog. on firefox 20. osx. this makes the link unclickable.,neutral
jshint/jshint,jshint,2013-03-20T14:11:41Z,add support for exclusion of function declarations from `latedef`. i'm proposing a new jshint option that allows me to exclude function declarations from what `latedef: true` does not allow. i don't want variable declarations to be handled the same as function declarations. i often write function declarations at the bottom of my iife with the intention that they are utilities that are hoisted throughout the current function scope.  in the irc channel. guyzmo suggested the name `latedef_func_ignore` for this.,negative
jshint/jshint,jshint,2013-03-20T14:25:45Z,+1. but i think the `latedef` flag should ignore function declarations outright.,neutral
jshint/jshint,jshint,2013-03-20T15:07:20Z,maybe i'm too much being "oldschool c coder" about that. but i think it is a good habit to use symbols _after_ they are being defined. even though the language is flexible to do it anyways. but that's more a stylistic issue. so maybe `latedef` should ignore function declarations per default. and have a style option `latedef_func` that whines about that.,negative
jshint/jshint,jshint,2013-03-20T16:57:11Z,what resolution do you have?,neutral
jshint/jshint,jshint,2013-03-20T16:57:30Z,also. this is an issue for jshint/site repo and not for this one.,neutral
jshint/jshint,jshint,2013-03-20T17:46:05Z,i agree with both of you. it'd like to give the user the option to enforce what they need. it is a stylistic point. even though i don't really understand the worry behind prohibiting using function declarations before they are defined.,negative
jshint/jshint,jshint,2013-03-20T17:54:13Z,how does contributing a new feature usually work in this project? i'd like to get some consensus that a patch is worthwhile before i work on it. the contributing markdown file doesn't really talk about new features.,positive
jshint/jshint,jshint,2013-03-20T17:59:36Z,basically. you fork this project to you github. create a branch with the new feature's patchset. upload that branch to a branch on your github account. and finally you make a pull request with a reference to that ticket (you can also refer to that ticket from your commit log messages).,neutral
jshint/jshint,jshint,2013-03-20T18:05:17Z,buritica yeah. i read that. i referenced it in my previous comment. that doesn't really address how to get consensus that a feature is worthwhile and will be mergable.,negative
jshint/jshint,jshint,2013-03-20T18:18:49Z,johnkpaul oh. my bad. now i get what you meant. i do think it would be a useful feature. so +1,positive
jshint/jshint,jshint,2013-03-20T22:53:59Z,done ;-),neutral
jshint/jshint,jshint,2013-03-21T12:18:55Z,any chance of getting this pull request merged in?i'm currently working on a node application that hosts some public javascript files using jquery. it doesn't make sense to just consider jquery a global for the node files. and there are quite a few public files so configuring via comments just seems tedious.,negative
jshint/jshint,jshint,2013-03-24T19:02:24Z,is this rule no longer planned for jshint?,neutral
jshint/jshint,jshint,2013-03-25T16:50:44Z,just landed this. to ignore function declarations you'll be able to use `latedef:"nofunc"` in the next release.,neutral
jshint/jshint,jshint,2013-03-25T17:46:28Z,i couldn't come up with a use case appropriate for the test case. gonna merge the code anyway since it doesn't do anything dangerous.,negative
jshint/jshint,jshint,2013-03-25T21:11:15Z,merged in. thanks.,positive
jshint/jshint,jshint,2013-03-26T00:17:24Z,thank you ^^,positive
jshint/jshint,jshint,2013-03-26T07:23:38Z,what's the release cycle like for jshint? if there's no formal process i'd really appreciate a bump so that we can start shipping code that uses this patch upstream :),positive
jshint/jshint,jshint,2013-03-26T10:31:07Z,withcs. included the checkstyle reporter in the bundle so that it can be used in rhino environment. also updating the gradle-js-plugin so that jshint can be used to generate checkstyle reports to be parsed by jenkins after builds.made minor change to the checkstyle reporter to be able to print instead of using process.stdout. had to create a fake console to handle error prints from the event package about event listener memory leaks. because listeners doesn't seem to be removed when too many files are given as input to jshint. that issue needs to be addressed by someone who knows how.,neutral
jshint/jshint,jshint,2013-03-28T22:07:01Z,> had to create a fake console to handle error prints from the event package about event listener memory leaks. because listeners doesn't seem to be removed when too many files are given as input to jshint. that issue needs to be addressed by someone who knows how.you should create an issue about that,neutral
jshint/jshint,jshint,2013-04-01T15:22:44Z,jshint incorrectly asserts functions declared in loop initializer as being inside of loop. take the following code for example:``` javascript~function(){    for(var noop=function noop(){}. len=10; len--;)        noop(len);}();```of course the above code is useless (and not as "anonymous" as it otherwise should be. wink wink). but it demonstrates the issue. jshint will incorrectly throw the "don't make functions within a loop" error. although the function is not. technically. created _inside_ of the loop in the manner that jshint is attempting to ward against.,negative
jshint/jshint,jshint,2013-04-04T18:47:14Z,can't pipe output to less. i'd like to `jshint app.js | less`. but it looks like jshint isn't using stdout for output.,neutral
jshint/jshint,jshint,2013-04-05T14:07:20Z,why would you pipe report results to css pre-processor?,neutral
jshint/jshint,jshint,2013-04-05T21:53:29Z,fwiw. this is also a duplicate of #687,neutral
jshint/jshint,jshint,2013-04-05T23:19:31Z,i will provide more context.when i run `jshint .`. jshint examines not only my node.js code. but my dependencies' code in `node_modules/` as well. this takes a lot of time. and obscures the jshint messages relevant to my code among messages relevant to the dependencies.in the future. could we filter out `node_modules/` from the locations jshint looks for code? thank you.,negative
jshint/jshint,jshint,2013-04-06T00:12:49Z,mcandre sorry... #990 was really a dup of #687 (both were about reading from stdin) and then since #990 was closed as a dup of this one i drew the wrong conclusion... yours is really about the other end of the pipe - stdout,negative
jshint/jshint,jshint,2013-04-06T18:35:14Z,in general. using -- will mark the end of options. so "jshint -- -some-file.js" should work. and if -a is an option. "jshint -a -- -some-file.js" should work and "jshint -- -a -some-file.js" shouldn't (with the option after --).,neutral
jshint/jshint,jshint,2013-04-08T06:10:24Z,it is easy (easier) to add support for all available reporters given this patch.,positive
jshint/jshint,jshint,2013-04-09T01:03:33Z,i've ran `node make.js` and the file that ends up in dist seems unchanged. does something else need to be updated?,neutral
jshint/jshint,jshint,2013-04-09T01:04:51Z,yeah. you need to run `node make.js build` now. `node make.js` lints and runs tests only.,neutral
jshint/jshint,jshint,2013-04-09T01:22:51Z,thanks! perhaps an update to package.json's scripts.build. so `npm build` would make the build? i'll make a pr.,neutral
jshint/jshint,jshint,2013-04-09T16:49:32Z,and why can't you use `.jshintignore` file for this?,neutral
jshint/jshint,jshint,2013-04-11T23:50:50Z,add cli option for .jshintignore. for example:```$ jshint --ignore=path/to/jshintignore```,neutral
jshint/jshint,jshint,2013-04-12T00:04:10Z,i think it's bad idea because of relative paths in .jshintignore. sorry.,negative
jshint/jshint,jshint,2013-04-12T17:17:27Z,when jshint "chokes" it usually means that it crashed. which is worth a bug report :-),negative
jshint/jshint,jshint,2013-04-13T15:19:45Z,i totally agree with anton. because kiss! and because. that's your text editor and context tag tool job's to handle that. not the linter.but the beauty of software engineering is that you can use jshint parser as a library that you can monkey patch to make a tool that offers such a feature. but my editor rocks so much that i don't need it. and won't code that ;-),positive
jshint/jshint,jshint,2013-04-14T14:02:51Z,warnings on missing timer function delay parameter. i do not get any warnings about missing delay parameters when i test the following code at jshint.org``` javascript/*jshint browser:true. devel:true */settimeout(function(){    console.log('test');});setinterval(function(){    console.log('test');});```i could not found any reference stating that this is a valid syntax. but even if it is. it would be nice to at least get a warning that the parameter is missing.,negative
jshint/jshint,jshint,2013-04-14T14:18:27Z,jshint checks a program for syntax problems and has no idea about any apis. though there are some predefined globals such as `settimeout`. jshint has no idea of how it's used.e.g. what if i have redefined `settimeout`? furthermore. the functionality of built-in apis vary between browsers.,neutral
jshint/jshint,jshint,2013-04-14T14:37:11Z,what exactly does the jshint `browser` option do? does it just add `settimeout`. `setinterval`. etc as acceptable global variables only? or. does it (or should it) also include the syntax that goes along with these variables?,neutral
jshint/jshint,jshint,2013-04-14T14:49:31Z,yes. it only adds them as global variables that you shouldn't write to. (so `var settimeout = 'hello';` gives an error in the global scope)i do believe that maintaining how apis should be used is outside the scope of jshint. but perhaps the maintainers can tell you whether there any plans to include such functionality in the future.,neutral
jshint/jshint,jshint,2013-04-14T15:15:34Z,ok. thanks! :),positive
jshint/jshint,jshint,2013-04-15T01:08:41Z,i'm kind of looking for something like this too. i'd like to be able to specify some extra `predef`'s for my test spec directory. without running the risk of allowing globals of `describe`. `it`. etc.. to escape unnoticed in my app's js files. i was hoping that adding a `.jshintrc` with just the extra predef entries would result in them being added to the default config inherited from the root.what do you suggest if multiple option files are off the table?,negative
jshint/jshint,jshint,2013-04-15T16:26:42Z,again. your argument makes no sense. if someone obeys the jshint advice ("['public'] is better written in dot notation.") they will have broken code in all major browsers. jshint should not warn or advise someone to write invalid code.also. i think you have misread the spec. please check the selected answers on stackoverflow about this. thanks,negative
jshint/jshint,jshint,2013-04-15T21:37:39Z,jshint reports global variable that is not global.. look at this example:```(function(){    'use strict';    var mylist = [];    function something(){        var key;        function sub(){            for(key in mylist){            }        }    }})();```regarding the variable 'key'. jshint tells me that:a) key is defined but never usedb) creating global 'for' variable. should be 'for (var key ...'.,neutral
jshint/jshint,jshint,2013-04-16T12:19:40Z,just tested this against head. and i confirm the bug. thank you for reporting this,positive
riot/riot,sauce,2015-08-04T06:20:43Z,it looks a lot nicer but it does not work on ie check the saucelabs tests,neutral
angular/angular.js,standard,2015-12-16T12:23:37Z,updating example to use standard promise syntax. examples were using deprecated .success and .error rather .then,positive
angular/angular.js,standard,2016-01-06T16:17:27Z,i think this is not really much of a bc. it is really just providing a better error message for an invalid input.regarding the fact that it does not throw on false: this is standard practice for filters. since often they receive `null` or `undefined` initially while waiting for watch values to kick in.,negative
angular/angular.js,karma,2013-06-28T18:31:36Z,feature request: cucumber plugin for karma test runner. for agile shops like mine with an emphasis on automated testing and continuous delivery. angularjs has great appeal.  what would be more appealing would be a karma plugin for cucumber that can run angularjs e2e tests.just yesterday. our product team wished to see the gherkin language in which we are writing our story tests reflected in build server as green passing tests.there is an open source effort to implement this. but it is hacked together and avoids the angularjs way of doing things.,positive
angular/angular.js,karma,2013-07-15T00:48:22Z,chore(gitignore): add libpeerconnection.log. google chrome (when tested using karma) spits out a log file called libpeerconnection.log,negative
angular/angular.js,karma,2013-07-15T13:59:56Z,should it be doing this?  if not then perhaps we ought to be fixing that?,neutral
angular/angular.js,karma,2013-07-15T14:02:53Z,can you test it out? just pull master and run `grunt package test` and see if it shows up.,neutral
angular/angular.js,karma,2013-07-15T16:29:32Z,landed as 14626d0bc57cf55e8bde4a329b896308b6c09880,neutral
dc-js/dc.js,jasmine,2014-01-28T18:19:12Z,cool stuff.  hmm. it looks like the data table tests haven't been ported to jasmine yet.  i'll post back if i do that.i'd particularly want to see expected failure tests. since parsing template strings can get messy.,negative
dc-js/dc.js,jasmine,2014-02-04T23:28:57Z,i'm merging this.  i upgraded it to use jasmine.clock() as the other specs now do. and also to explicitly check the x domain of the chart before and after un-brushing.thanks matthull!,positive
getsentry/sentry,selenium,2016-10-05T22:59:56Z,for record keeping: we were hitting oom killer on selenium stuff in acceptance tests. and this aids in that (confirmed it allowed those tests to pass),neutral
jribble/grunt-jasmine-node-coverage,jasmine,2015-01-28T03:36:58Z,'forceexit: true' prevents further grunt tasks from running. i assume 'forceexit: true' is meant to stop the script only if there is an exception. however. even when i get no errors and my grunt tasks seem to be running correctly. no further tasks are running after my 'jasmine_node' target. i'm just trying to run 'grunt-contrib-clean' after it. sounds like an async 'done()' not getting called somewhere. if i leave 'forceexit' as false. it runs as expected.,positive
jribble/grunt-jasmine-node-coverage,jasmine,2015-01-29T11:35:23Z,shouldn't it only force exit if there is a fail of some kind - 'exitcode = 1'?,negative
jribble/grunt-jasmine-node-coverage,jasmine,2015-01-29T14:22:31Z,that is correct.would you like to make a pr for this?,neutral
jribble/grunt-jasmine-node-coverage,jasmine,2015-01-29T22:43:01Z,i'll take a look at it this weekend.,neutral
jribble/grunt-jasmine-node-coverage,jasmine,2015-01-30T07:03:28Z,great!,positive
jribble/grunt-jasmine-node-coverage,jasmine,2015-02-04T06:49:31Z,guys. any updates on this issue?,neutral
jribble/grunt-jasmine-node-coverage,jasmine,2015-02-04T09:48:56Z,yep. just did a pull request. sorry for taking so long.,negative
jribble/grunt-jasmine-node-coverage,jasmine,2015-02-04T11:48:11Z,the functionality doesn't change for 'forceexit' option (just a bug fix). so the existing readme.md is fine as is. the root gruntfile's task 'example-task' does have a description on it in the 2nd parameter 'an example task to prove that jasmine_node only applies `forceexit` when there is an error'. i thought that would be sufficient.,negative
jribble/grunt-jasmine-node-coverage,jasmine,2015-02-04T11:58:33Z,fix merged in dbec1106b0f1a1f5b7dc074a28b5a6e7bf189ec1,neutral
jribble/grunt-jasmine-node-coverage,jasmine,2015-02-04T20:44:53Z,working now. thanks a lot!,positive
tombatossals/angular-leaflet-directive,karma,2014-01-15T23:19:29Z,hey. just got back from a long vacation.  i'm on 64bit windows 7 but will be making another go at getting this working. will update with my progress but not hopeful so will likely comment out karma-coverage so i can start contributing.,positive
tombatossals/angular-leaflet-directive,karma,2014-01-26T20:13:34Z,hi.this does not seem to work for me. i tested the example and all i see are blue icons.,neutral
tombatossals/angular-leaflet-directive,karma,2014-01-27T03:28:32Z,awesome. thanks!,positive
RobinBuschmann/sequelize-typescript,codecov,2017-06-13T15:32:55Z,ah ok. 50% of your changes are not covered. since you accidently removed a whitespace from a part of the code. that was not even covered in the past. codecov blames you for that :p but i think this should be ok. i'll merge it back into master :),positive
nikgraf/belle,eslint,2016-01-14T11:56:08Z,add eslint config to prevent mocha .only. this commit adds eslint configuration to make the linter fail. as soonas it finds a mocha test suite with `.only` suffix. very useful for the contribution workflow. so nobody forgets to removetheir temporarily introduces `.only` statements (see #251).,negative
nikgraf/belle,eslint,2016-01-14T12:00:16Z,naturally. ci linting process will fail since you still have `.only` suffixes in there... ironically this proves that the config is working ;-),negative
nikgraf/belle,eslint,2016-01-14T13:16:27Z,ah. that's a nice one. danke patrick :+1:,positive
