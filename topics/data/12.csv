bower/bower,mocha,2014-04-08T15:22:45Z,request to unregister "vero" and "verso". was looking at mocha and accidentally linked it to the wrong repo,negative
Nordstrom/cfn,standard,2018-06-02T15:46:57Z,andyday something is up with travis. `error couldn't find the binary (standard | snazzy) && nyc mocha`. tests pass locally.,neutral
Nordstrom/cfn,standard,2018-06-05T19:02:34Z,looks like the changes here are fairly small.  formatting changes make it difficult to identify real changes.  i think most (if not all) of this extra noise will go away if you merge in the latest master.  it has similar standardjs formatting changes.  once you've done this i'll take a look.,positive
webtorrent/webtorrent,standard,2016-01-18T14:59:02Z,feross did you reach to bittorrent inc ? making webtorrent as extension to bittorrent protocol would be huge step.the most important adopters are utorrent and libtorrent (rtorrent. deluge etc.). rest really doesn't matter. another thing. where is documentation of protocol which webtorrent uses with implementation details ?this is a must for adoption and i do not see any links in github repo or on webtorrent.io. you need to standardize webtorrent or you will see no adoption at all. if someone would like to implement it in c/c++ then where he should look ? what if he is not familiar with javascript ? in my opinion this is the main reason why you do not see any adoption besides people using your own lib.,neutral
redux-saga/redux-saga,eslint,2018-07-05T15:17:52Z,setup eslint for react. i found that eslint fails to run in examples folder. so i install `eslint-plugin-react` and eslint now will lint the examples folder too. i'll update the code in example folder gradually.,negative
redux-saga/redux-saga,eslint,2018-07-06T07:16:26Z,ok,neutral
redux-saga/redux-saga,eslint,2018-07-06T11:15:40Z,rebased this upon master.,neutral
ramda/ramda,sauce,2015-09-13T12:28:59Z,i think ramda tries to help you write better code by minimising that tge functions themself fail. there is this kind of _monomorphic_(?) approach where a function is super clear with what it expects and what it returns. often one or a couple of simple value in and out. that makes them reliable and makes it easy for you to find your errors. "crap in is crap out" and you can easily guard for that as davidchambers said before.you should not feel limited by the api as well. just use compose your own control flow sauce around the ramda. such as promises. catch. error handling etc. for me. ramda is a library to write quality logic and code. it's not environment biased "making it easy for you to code **in the browser**". `throw new error` is therefor definitely too environment specific.,positive
strongloop/node-foreman,jshint,2016-04-13T18:06:45Z,fix jshint issues. step 1 of getting the build to pass,neutral
strongloop/node-foreman,jshint,2016-04-13T18:06:46Z,can one of the admins verify this patch? to accept patch and trigger a build add comment "._ok\w+to\w+test._",neutral
slackapi/node-slack-sdk,codecov,2017-12-18T15:33:44Z,forcing the merge. i don't think there's any point in waiting on codecov.,neutral
elastic/kibana,selenium,2016-10-10T15:18:00Z,to hook into the event via selenium we would have to remotely execute custom javascript in the browser context. that never worked out well for me in the past though. imho using a visual indication with `find()` or `try()` would be preferable.,neutral
elastic/kibana,selenium,2016-10-11T20:47:35Z,wip [tests/functional] support running the selenium tests from plugins,neutral
elastic/kibana,selenium,2016-10-13T10:13:32Z,improve discovery test stability and readability. as suggested in #8543. static `sleep()` calls tend to make the tests less reliable and more time-intensive to run. using the built-in waiting mechanism in selenium or the `try()` helper are preferable if the test needs to wait for specific conditions.this pr tries to improve that in several ways:- it removes `sleep()` calls where the preceding or subsequent operations already include polling (e.g. via `getspinnerdone()`).- it removes `sleep()` calls before `verifychartdata()` calls. because that already includes retrying via `try()`.- it wraps some time-sensitive expectations in `try()` calls.additionally. it improves the readability of the file by converting most promise chains to `async/await` and clarifying the intent of some test cases.,negative
elastic/kibana,selenium,2016-10-17T15:21:11Z,no. both of those look like selenium issues not real test failures.,negative
elastic/kibana,selenium,2016-10-19T19:22:52Z,just waiting on intake and selenium to run before merging these,neutral
elastic/kibana,selenium,2016-10-21T19:10:56Z,'admin view' of save object relationships. **describe the feature**:  i've had a few occasions where it would have been very useful to be able to quickly see the hierarchy of saved objects in a dashboard.  for example. i open a dashboard while logged in as a user who has access to logstash-\* but not metricbeat-\* and. as expected. i get an error about the metricbeat data.  but which visualization in the dashboard is using metricbeat data?  the visualization name doesn't always give it away.what i'd like to see is something like this;- first we have dashboards on the left- the next column lists the visualizations on those dashboards- some visualizations are not on dashboards so they're at the end without a dashboard- the next column are searches. either the ones used by the visualizations or one directly on dashboards- there might also be some searches not used in any dashboards or visualizations so they would be listed at the end- the last column are indexes (index patterns actually) and would be the source of the visualization and/or searcheverything in the table would be a link to jump directly to that view.it might make sense to support sorting on the columns to make it easy to find. for example. that some visualization is used on 3 different dashboards.it might also be useful to allow filtering at least on some columns.  maybe just on dashbaords?| dashboard | visualization | search | index || --- | --- | --- | --- || packetbeat cassandra | cassandra responsekeyspace | cassandra search | packetbeat-* || packetbeat cassandra | cassandra responsetype | cassandra search | packetbeat-* || packetbeat cassandra | cassandra responsetime | cassandra search | packetbeat-* || packetbeat cassandra | cassandra requestcount | cassandra search | packetbeat-* || packetbeat cassandra | cassandra ops |  | packetbeat-* || packetbeat cassandra | cassandra requestcountstackbytype |  | packetbeat-* || packetbeat cassandra | cassandra responsecountstackbytype |  | packetbeat-* || packetbeat cassandra | cassandra requestcountbytype |  | packetbeat-* || packetbeat cassandra | cassandra responsecountbytype |  | packetbeat-* || packetbeat cassandra | navigation |  |  || packetbeat cassandra |  | cassandra queryview | packetbeat-* || packetbeat thrift performance | navigation |  | packetbeat-* || packetbeat thrift performance | thrift requests per minute |  | packetbeat-* || packetbeat thrift performance | thrift rpc errors |  | packetbeat-* || packetbeat thrift performance | slowest thrift rpc methods |  | packetbeat-* || packetbeat thrift performance | thrift response times percentiles |  | packetbeat-* ||  | top thrift rpc methods |  | packetbeat-* ||  | top thrift rpc calls with errors |  | packetbeat-* |i started a little experiment in the selenium test framework just because i'm getting familiar with the elasticsearch client there.  my first attempt started with getting the dashboards and parsing out the panels (which could be visualizations or saved searches) and listing them out.  ```    return esclient.search('.kibana'. 'dashboard')    .then((response) => {      pageobjects.common.debug('found ' + response.hits.total + ' dashboards');```i parsed the visualization ids out of each dashboard object like this;```json.parse(response.hits.hits._source.panelsjson).id```and then i tried doing a get on each visualization.id.  this was sort of working. but i wasn't getting the console output how i wanted and probably needs to be re-thought if it were to end up in kibana or as a plugin.i chatted with cjcenizal about it and agreed it would be much more efficient to just do 3 searches. 1 for dashboards. 1 for visualizations. and 1 for searches. and join those results afterwards.,neutral
elastic/kibana,selenium,2016-10-24T18:59:00Z,that looks pretty cool. but i'm not sure how well it would scale to a large number of visualizations.  if it were interactive and mousing over a object would highlight it's line and dim the others like our other charts do that might help a lot.  and/or if you could apply filtering on some columns like dashboards so that you're only looking at a subset of the data it might be great.,positive
elastic/kibana,selenium,2016-10-29T14:25:39Z,^ i just want to see an updated selenium build with this change.,neutral
serverless/serverless,mocha,2017-08-24T15:26:58Z,> pmuens i applied that. i've also added --no-exit to mocha setup. as without this. tests program would still be vulnerable to hidden errors issue. more info on that here -> mochajs/mocha#2879very nice! thanks for the updates medikoo !,positive
serverless/serverless,coveralls,2017-08-25T08:04:42Z,bring back coveralls integration. # this is a feature proposal## descriptionwe should re-introduce coveralls asap as it makes it significantly easier to analyze test coverage for prs and maintain a stable and healthy codebase.,neutral
serverless/serverless,coveralls,2017-08-30T07:08:07Z,this was added yesterday. thanks for adding brianneisler !closing...,positive
valor-software/ngx-bootstrap,sauce,2017-03-01T09:15:21Z,k20human just edit css files. the problem in 'display: block'. delete it or replace to another style. besauce 'transitions' doesnt work with display: block in that case. it helps for me. but after that i tryed swiper and its awesome,positive
valor-software/ngx-bootstrap,codecov,2017-06-07T18:00:48Z,so ... if i understand the `codecov` report correctly. because i took code that had no coverage and made it have more lines. i've made things worse.  fair enough.,negative
Azure/autorest,standard,2017-07-18T23:48:36Z,begoldsm note that the docs actually say> to overcome this limitation an "x-ms-paths" extension was introduced parallel to "paths". urls under "x-ms-paths" are allowed to have query parameters for disambiguation. however they are removed during model parsing.i'll gladly add your practical illustration. though!> you must have a basic path without query parameters in the swagger paths block. all query param disambiguation must "overload" that basic path.well. not really/technically. it's just what we suggest since that way the swagger is as standard as possible... having the "basic path" in the `paths` block instead of `x-ms-paths` means one more method is visible to standard compliant tools...,negative
airbnb/javascript,eslint,2017-04-10T19:25:35Z,for your edge case: that can totally happen. but that's the case for an eslint override comment. which is an explicit indicator that this single-export file is intended to be a multiple-export file.given that - that you'd basically never have to change a default export to a named export - the refactoring power is all in the filename. meaning. you a) change the filename and rename all the imports (importjs can do this for you; eslint-plugin-import will ensure you didn't miss any); b) renaming any of the code in the file does not change how consumers import it; whereas with named exports. the name in the code is tightly coupled to the name that it's being imported by; c) this rule encourages more files that only ever export one thing. as the default. which is better for readability. maintainability. treeshaking. conceptual understanding. etc.,neutral
airbnb/javascript,eslint,2017-04-12T17:23:28Z,samkelleher are you sure you're running your local eslint. and not the global one?,neutral
airbnb/javascript,eslint,2017-04-12T17:26:00Z,wow super quick ljharb  thanks. yes installed it locally. i thought it would be weird for such a problem to to happen so i deleted my node_modules and tried again. now it works. bizarre. i should have have tried this before commenting. came back here to delete the comment and you had already replied! thanks.,positive
airbnb/javascript,eslint,2017-04-12T21:16:53Z,the expectation is that most people discover the configs from the guide. and not the reverse - the guide lists which sections have eslint rules. and any section that lacks a rule certainly would be a welcome pr to eslint.it is impossible to programmatically enforce *every* style rule. so the default assumption should be that an eslint config is simply the automatable subset of a style guide.,negative
airbnb/javascript,eslint,2017-04-12T23:35:23Z,willibaur (separate from using the leading `_`. which this guide forbids) yes. the eslint rule wants an explicit return - `return null;` or `return undefined;` would seem appropriate.,neutral
airbnb/javascript,eslint,2017-04-13T19:21:09Z,only stage 4 features are supported. if you are using something stage 3 and below. use `"babel-eslint"`.basically. use `parser: "eslint"` until something breaks. which indicates that you are using an es feature which hasn't made it into acorn yet. then switch to `"babel-eslint"`.,neutral
airbnb/javascript,eslint,2017-04-15T17:10:22Z,this is a bug for eslint-plugin-jsx-a11y; not for this repo.however. roles are supposed to be a last resort; that should really be a `<button>`.,neutral
airbnb/javascript,eslint,2017-04-15T17:18:43Z,merriam (1) is a flaw in mocha; it should provide another api that doesn't depend on `this`. re (2). the overarching value of ensuring all function expressions have names outweighs the slight redundancy when it's used in a mocha test context.**nothing** is an animal that needs `this`. unless it was poorly designed in the first place to require it.,negative
airbnb/javascript,eslint,2017-04-18T20:19:39Z,i believe our eslint config requires `‼` over `boolean()`. fwiw (if not. it should be). `boolean` isn't as safe because i can do `global.boolean = function () { return false; }` for example.,neutral
airbnb/javascript,eslint,2017-04-19T07:21:56Z,ljharb i feel like things work the other way around because in my experience people get recommended 'eslint'. often 'with the airbnb style guide.' the airbnb style guide being the eslint config. not the actual style guide. i realize without solid numbers it's hard to support either position.> so the default assumption should be that an eslint config is simply the automatable subset of a style guide.precisely what i missed. i thought the justification for the rules in the configs was all there was. i thought everything 'airbnb on good style' was written in response to eslint. and thus based on the available rules. now i discover it is (more sensibly) written in response to javascript and all its rules. regardless. i've never seen someone link one of the unsupported style guide rules and didn't know they exist but that might just be me.if i can find the numbers to support my experience i'll re-open .,negative
airbnb/javascript,eslint,2017-04-21T15:57:01Z,mocha arrow-function and unnamed function errors.. hello community i am receiving errors whenever i am using using `describe(function(){})` in my code.how can i get rid of these errors?here is my .eslintrc.yml.```extends: airbnb-baseplugins:  - standard  - promiseenv:    node: true    mocha: truerules:    indent: ["error". 2]    semi: ["error". "always". {omitlastinonelineblock: true}]    no-eval: ["error"]    no-trailing-spaces: ["error"]    one-var-declaration-per-line: ["error". "initializations"]    no-irregular-whitespace: ["error"]    no-var: ["error"]    no-empty: ["error"]    linebreak-style: ["error". "unix"]    eol-last: ["error". "always"]    no-console: ["warn". {"allow": ["warn". "error". "info"]}]    no-use-before-define: ["error". { "functions": false }]    no-unused-vars: ["error". {"argsignorepattern":"^next"}]```tried to add mocha-plugin like so:```plugins:- mocharules:mocha/no-arrow-function: "error"```but it still gives me errors.,negative
airbnb/javascript,eslint,2017-04-21T16:02:08Z,i'm not familiar with the mocha plugin; but our guide requires you either name your functions or use arrow functions. especially and including in mocha tests.,neutral
airbnb/javascript,eslint,2017-04-21T16:08:02Z,i've named my function. but it still outputs error: `prefer-arrow-callback`.,negative
airbnb/javascript,eslint,2017-04-21T16:27:31Z,can you provide the error output?,neutral
airbnb/javascript,eslint,2017-04-21T16:36:58Z,can you also provide the exact code that's producing those errors?,neutral
airbnb/javascript,eslint,2017-04-21T16:38:53Z,ok so - none of those functions are named. `function (done) {` is an anonymous function - that either needs to be `(done) => {`. or `function something(done) {`.,neutral
airbnb/javascript,eslint,2017-04-21T16:43:29Z,as i said even if i name a function i am still receiving error with `prefer-arrow-callback`,negative
airbnb/javascript,eslint,2017-04-21T16:49:35Z,ah. why do you want them to not be arrows?,neutral
airbnb/javascript,eslint,2017-04-21T16:51:52Z,because using arrows in mocha is discouraged.,negative
airbnb/javascript,eslint,2017-04-21T16:57:29Z,only if you need to use `this` for timeouts and the like; which this eslint rule will allow.using arrows in mocha is encouraged by this guide; mocha is wrong to discourage them.you can certainly create a `test/.eslintrc` to disable rules just for tests. if you insist.,positive
airbnb/javascript,eslint,2017-04-21T17:42:13Z,blueraja for something that oddball. i'd say just use an eslint override comment around your for..in :-),neutral
airbnb/javascript,eslint,2017-04-28T01:46:21Z,to answer your question vzhen you can also use `this.constructor.renderscene`.what are your thoughts on this approach ljharb - is it ever used airbnb?,neutral
airbnb/javascript,eslint,2017-04-28T03:45:56Z,you should never use the constructor property; it's not reliably present nor is it robust against tampering. since there's no language keyword to mean "the current class". you should simply hardcode it.,neutral
airbnb/javascript,eslint,2017-04-28T06:51:06Z,iknowcss performance is irrelevant. and the least important thing for a style guide. or when writing code overall. what happens under the covers is also *entirely* irrelevant - that `map` is implemented as a loop. for example. no more makes map a loop then a gasoline vehicle engine is an explosion.(eslint also now covers this case. fwiw.)to wrap up. mutation should always be avoided; performance of a given function almost never matters; and don't pretend the way the interpreter is written matters.,negative
airbnb/javascript,eslint,2017-04-29T09:41:07Z,provide a full config example. hi.please provide a full eslint config example in the end. that makes easy for everyone to copy and paste that.like this:```json{  "no-var": true}```thanks.,positive
airbnb/javascript,eslint,2017-04-29T09:58:54Z,empireworld i have no idea what you're referring to; the point of using our eslint config is that you don't copy and paste anything.perhaps  is what you're looking for?,neutral
airbnb/javascript,eslint,2017-04-29T10:13:53Z,i mean write all description configurations in one example.,neutral
airbnb/javascript,eslint,2017-04-29T18:36:22Z,that's what eslint's docs are for; you'll notice that each rule lists the eslint rule(s) that it applies to is a link to the relevant documentation.,neutral
airbnb/javascript,eslint,2017-04-30T05:21:08Z,so write total of eslint rule links in a single config.,neutral
airbnb/javascript,eslint,2017-05-02T16:02:59Z,my suggestion would be to not use grunt or gulp to run eslint; but rather to run it with an npm run-script instead.,neutral
airbnb/javascript,eslint,2017-05-02T16:19:17Z,are you sure you're running the local eslint? issues with rule options like this often mean you're running an older eslint.,neutral
airbnb/javascript,eslint,2017-05-02T16:28:44Z,ljharb what do you mean with "running the local eslint"? i installed it with `npm install eslint` but also with `npm install eslint -g` while testing why this bug occurs.,neutral
airbnb/javascript,eslint,2017-05-02T16:43:04Z,for testing. do `./node_modules/.bin/eslint path` or use your npm run-script.,neutral
airbnb/javascript,eslint,2017-05-02T18:09:04Z,flavium that's your problem. yarn doesn't respect automatic updating of semver ranges. so you probably aren't actually using the latest eslint in your yarn.lock file.,positive
airbnb/javascript,eslint,2017-05-02T18:34:56Z,i think i wasn't clear. this error appears when running eslint after installation. package installation works just fine.,positive
airbnb/javascript,eslint,2017-05-02T19:31:51Z,oh hmm. that's very much not the standard way to use eslint. so your module is like a runner for eslint?if you can reproduce the issue in the project that has eslint directly defined. i can help. but otherwise i'd need the full setup (and it's almost certainly an eslint issue. not an airbnb config issue - you'll probably be able to reproduce it with that one rule's config and none of airbnb's stuff),neutral
airbnb/javascript,eslint,2017-05-05T19:48:33Z,i recently discovered that eslint have made the change to the rule default too,neutral
airbnb/javascript,eslint,2017-05-05T20:03:15Z,true - but actually shipping this change now will help make the change to eslint v4 not be breaking - when v4 comes out. it'd be ideal to support both v3 and v4 in a semver-minor release.,positive
airbnb/javascript,eslint,2017-05-10T13:48:15Z,question: new release. is it possible for you guys to cut a new release soon? some of us using your package for eslint (which is amazing) would like to take advantage of the updated eslint-plugin-jsx-a11y.,neutral
airbnb/javascript,eslint,2017-05-10T21:09:25Z,cycomachead hmm. a pr might help explain what you mean. certainly i don't want `[]` to override defaults. and that's a mistake i may have indeed made when upgrading; i'm not sure when `['']` appears.,negative
airbnb/javascript,eslint,2017-05-10T21:09:39Z,kerenchandran i'm waiting on some bugfixes in eslint-plugin-react before releasing.,neutral
airbnb/javascript,eslint,2017-05-10T22:49:15Z,hm. that line certainly was meant to be an empty array.our rules intentionally document all options. including replicating defaults. if you find a place where that's not the case. please do make a pr to correct it.separately. if you find a place in `eslint-plugin-import` where providing the default explicitly errors. please file it there. because that's a bug in the plugin.,negative
paulmillr/es6-shim,mocha,2014-08-04T08:23:44Z,probably what would be worthwhile in the sort-term is a mocha-test262 bridge. to allow mocha to run test262 test cases.  that would let us gradually convert test cases over. instead of having to do it all in one big lump.,positive
paulmillr/es6-shim,mocha,2014-08-05T14:32:55Z,> probably what would be worthwhile in the sort-term is a mocha-test262 bridge. to allow mocha to run test262 test cases. that would let us gradually convert test cases over. instead of having to do it all in one big lump. yes. i am hoping to build something like that because the python console runner we are currently using for test262 is pretty limited.,positive
linnovate/meanio,mocha,2016-01-17T21:17:09Z,adds the ability to run tests. - moves to gulp from grunt. standard for mean- creates `gulp test` that runs mocha on './test` directory- sets `npm test` to run `gulp test`the current tests fail. but this is just meant to allow them to run.,negative
linnovate/meanio,mocha,2016-01-18T04:30:59Z,looks like you removed the postinstall that installs the server stuff. like express?  admittedly not the best setup ever. but does express etc install now?,positive
linnovate/meanio,mocha,2016-01-18T05:12:22Z,yea. the postinstall got accidentally removed.  i didn't see the scripts section when i first opened the package.json. so made my own. then on some npm operation. probably mongoose. it moved my scripts definition up and on top of the existing one.i wonder what mechanism it is that enforces the order of the config file. anyway. replaced the postinstall.,negative
angular/angular-phonecat,selenium,2016-06-08T15:57:14Z,i use selenium webdriverjs and i have this same problem but i can not find the rotractor-conf.js,negative
velesin/jasmine-jquery,jasmine,2014-09-10T13:51:37Z,scriptsrc undefined in loadfixtureintocache_. variable 'scriptsrc' is undefined in error callback in 'jasmine.fixtures.prototype.loadfixtureintocache_',neutral
velesin/jasmine-jquery,jasmine,2014-09-16T22:14:04Z,sorry. i see in the code that jasmine-jquery supports this feature.,negative
velesin/jasmine-jquery,jasmine,2014-09-26T22:23:42Z,tohavebeentriggered() resturn true but obviously my handler function is not called. i'm trying to use jasmine-jquery to test my jquery ui widget. i spy click events on it. tohavebeentriggered() reports a click when i trigger "click" on it but my handler inside my widget is not called at all (put a console.log in it to be sure)someone do knows what could be wrong ?,negative
velesin/jasmine-jquery,jasmine,2014-09-27T17:46:02Z,can you give an example of how you used the spy? the spy will normally "replace" the function that you spy on. so it will not call the functions called by the original function. unless you use andcallthrough() like so:`spyon(obj. 'method').andcallthrough()` or `and.callthrough()`,neutral
velesin/jasmine-jquery,jasmine,2014-09-27T19:42:19Z,``` javascriptvar spyevent = spyonevent('#test'. 'click');$('#test').trigger('click');expect('click').tohavebeentriggeredon('#test');expect(spyevent).tohavebeentriggered();```all events attached to the #test element in the code i want to test are not triggered. but both expect doesn't raise any errors in the test (meaning the click was triggered and catched),neutral
velesin/jasmine-jquery,jasmine,2014-09-28T17:03:46Z,well. i'm confused :)in fact. i did not realise my fixture was reloaded before each of my test. and so. i have to re instanciate my jquery ui widget on each test as well.,negative
velesin/jasmine-jquery,jasmine,2014-10-01T18:15:28Z,fix order of arguments to util.equals in wastriggeredwith.. this was preventing jasmine.objectcontaining to be used in tohavebeentriggeredonandwith.,neutral
valor-software/ng2-file-upload,karma,2017-05-19T12:42:12Z,update karma.conf.js for angular/cli package.. previously it was configured for old angular-cli package and it doesn'twork anymore. pre-commit hooks with tests even prevent from committing.,neutral
videojs/video.js,standard,2017-08-22T13:37:38Z,i think "fix" is appropriate here. if our goal is emulating/mirroring the standard behavior. this gets us closer to that in a way it wasn't before.for `enterfullscreen` on the `html5` tech. if it's platform-specific. maybe it should have that as a condition? what happens without that call to `play()` in ios?yeah. i think that can probably be safely removed. based on my assumptions about browser usage.but heff's concerns are valid as well.,negative
videojs/video.js,sauce,2015-05-18T21:15:40Z,forbesjo was attempting to switch to grunt-sauce(something). which bootstrap uses and seems to be having better luck with. but joe still ran into a bunch of random browser errors. joe can you make a pr with however far you got. incase someone else wants to try to get farther?,positive
videojs/video.js,karma,2014-09-02T17:42:53Z,just updated the docs. but let us know if you still need help getting karma working. should be pretty easy now. but i usually stick with running `grunt karma:dev` so i don't have to bother with the sauce labs business.,positive
sitespeedio/browsertime,selenium,2016-03-31T11:56:49Z,add screenshot  functionality. it "should" be easy to add screenshot capability using selenium. would be good also so that the coach could have that functionality so you are sure what you test.,positive
expressjs/express,eslint,2018-08-13T17:03:20Z,frederikhors you can add this line right above the line with the `next` argument - `// eslint-disable-next-line no-unused-vars`,negative
expressjs/express,eslint,2018-08-13T22:15:19Z,niftylettuce thanks. i dropped out eslint for standardjs.,positive
solid/node-solid-server,standard,2017-01-20T18:02:29Z,pr feedback addressed in the latest commit.- added docstring to `allow(mode)` handler.- renamed `getuserid()` to `getrequestingwebid()`- returning `null` explicitly in `getrequestingwebid()`.- updated the test description strings- removed explicit testing for 500 errors- removed `.catch()` blocks in the tests.- added tests for utils/debrack()> the `allow` handler itself isn't tested but should be. it would be a good use case for a http mocking library such as nock. perhaps this is more of an integration level test?it's being tested on an integration level in `test/acl.js`.> are we running standard on the tests? i'd argue we should.yes. our `npm test` also invokes `standard` on the tests directory.> the lack of newlines between test cases makes them a bit hard to read for me.no prob. added more newlines.> the `documentfetcher` function isn't tested. since it's basicly just a web client. rather than write a bunch of tests for it. couldn't we use the solid web client directly?yeah. refactoring the `documentfetcher()` function is on my to-do list (it's used extensively in `acl-checker.js`. and tested indirectly in `test/acl.js`). writing tests for it is out of scope for this pr.,negative
morrisjs/morris.js,mocha,2014-02-05T05:51:01Z,ok. i think this tests coverage is not ready feature. because for better coverage report we need to rewrite tests in some way to use mocha with phantom.js instead of spec/specs.html.,neutral
morrisjs/morris.js,mocha,2014-02-05T12:43:15Z,added prettify from cdn too.had to update grunt-mocha package to fix npm test command.now the issue is that though every test passes when npm test is ran. spec/specs.html has 1 failing spec: `barsize option svg attributes should set width to options.barsize if possible`.everything else looks good to me :+1:,negative
prettier/prettier,eslint,2018-05-12T20:17:24Z,for some reason. formatting is done properly (without the extra `{' '}`) when i rename the file to have a `.jsx` extension. (note: i am using `prettier` through an `eslint` plugin). here's my `.eslintrc` if that makes any difference:```{  "extends": ["react-app"].  "plugins": ["prettier"].  "rules": {    "prettier/prettier": [      "error".      {        "printwidth": 120.        "tabwidth": 4.        "singlequote": true.        "trailingcomma": "all"      }    ]  }}```(i'd rather not have to stay renaming files to `.jsx`).,negative
prettier/prettier,eslint,2018-05-14T06:03:39Z,bakkot > neither airbnb nor google recommend this style. it is not the style used by jquery. react. preact. bootstrap. babel. typescript. flow. express. angular. v8. spidermonkey. rxjs. lodash. istanbul. node. ember. d3. socket.io. qunit. jest. ava. jasmine. webpack. polymer. chartjs. gulp. bluebird. ramda. esprima. yarn. handlebars. immutable. uglifyjs. grunt. jsdom. glamorous. koa. eslint. or indeed prettier itself.this is a list of companies that doesn't use standard style. not the companies that use prettier style. am i wrong ?,negative
prettier/prettier,eslint,2018-05-14T10:00:37Z,kosai106 no please disregard my message. it was a fault on my end. i think i have a prettier plugin (or some other formatter) in my vscode setup which auto formats on save. i was experimenting on the current project to format on save through eslint (with prettier plugin). there must have been some conflict between the two... i forgot i switched to another project and enabled the editor's format on save setting (as this project did not have the eslint setup to format on save). going back to this project. both pieces of software were formatting on save and i got very unpredictable results.my fault - i now put a project specific `settings.json` file in the project that formats through eslint / prettier plugin.sorry. not completely sure about my own setup... i just want to format on save ^^; (copy / pasted my way through).thanks!,negative
prettier/prettier,eslint,2018-05-15T17:57:41Z,duailibe oh ok! as with the eslint-react rule. and since i implemented this. i believe it's something that makes sense to implement on a per-project basis. but i get what you're saying. sorry i misunderstood.,negative
prettier/prettier,eslint,2018-05-16T19:36:41Z,i see what you mean. that’s the approach i’ve taken with eslint in several projects: `eslint .` and a .eslintignore that needs to be kept up-to-date. i’ve also tried to first ignore everything and then un-ignore the things i care about. but always bumped into issues as well. i wonder if there’s an eslint issue we could take experience from.,neutral
prettier/prettier,eslint,2018-05-27T11:02:25Z,aboyton i think it's always a good thing to discuss best coding style in your company. are you just a company manager or do you code all day long and deal with code styles?because people who code discuss best  style and use it as convention. despite tools that force them to use bad styles. if conventions are broken by "tool forced style". then you throw this tool to trash bin. that's it.btw: large company or small that doesn't matter. developers must communicate with each other.and to be clear... problem with prettier is not the style that "i don't like". its the style that "doesn't work out of the box with initial vue projects". so please keep this in mind...there was a suggestion to configure eslint options.that works just fine.but... i will have to configure every single future project. just one additional step in workflow. this is less efficient than change one option in text editor.but people doesn't care about efficiency..... :/,positive
prettier/prettier,eslint,2018-05-31T12:00:32Z,is there any workaround to that problem? i am happy to configure eslint to accept that kind of formatting. it throws errors and wrecks the deployment for me.,negative
prettier/prettier,eslint,2018-05-31T12:49:45Z,duplicate of #1267you should use `// eslint-disable-next-line` instead.,neutral
prettier/prettier,eslint,2018-06-01T23:10:48Z,gillesdemey > standard can be configured every which way you want by either using standardx or the shareable eslint config – so standard doesn't have to make any changes. it's already very flexible.it is not an option to typescript users. also. i agree with coolemur. about the prettier config does not work out of the box with initial projects. change the style-guide suggested by a framework. like angular or vue. is not good for the community.,neutral
prettier/prettier,eslint,2018-06-02T00:14:12Z,bakkot standardx is not an option to typescript users. because it uses .eslintrc file to specify the rules. i don't like the space on named functions as well. sorry. i was talking about the space after an anonymous function. (i know. wrong thread),negative
prettier/prettier,eslint,2018-06-02T11:44:08Z,ericanderson> another absurd example: go ask eslint to support typescript so you can use standardxwe can always leave things as they are and never fix anything or make things better. right ?,neutral
prettier/prettier,eslint,2018-06-08T18:53:20Z,i know my answer isn't your problem but i just want to share for somebody try to find same problem with eslint.in my `.eslintrc` file i added  `indent: ['error'. 'tab'].`. it make my template literal break new line. just remove it,negative
caolan/async,mocha,2016-07-12T17:00:24Z,fix nyc/code-coverage testing. do not run sub-context tests under nyc.  nyc uses a separate contex to track code. so tests using a separate context fail under nyc with errors like the following:```1) parallel parallel call in another context:   referenceerror: __cov_glcsdg93mvwqrnbtqi1isfaseto is not defined    at evalmachine.<anonymous>:1:16    at evalmachine.<anonymous>:1:569    at contextifyscript.script.runinnewcontext (vm.js:18:15)    at object.exports.runinnewcontext (vm.js:49:17)    at context.<anonymous> (mocha_test/parallel.js:3:954)```this commit also removes the redundant `&& nyc report` from the end of the npm coverage script (nyc outputs the report by default).fixes #1225,negative
caolan/async,mocha,2016-07-14T16:47:48Z,use mocha tag for non-browser tests. fix asyncify promisified browser tests. removes browser checks in tests.  fixes asyncify promisified to run in browser (fixes #1235),neutral
caolan/async,mocha,2016-07-14T19:23:20Z,nice :exclamation:,neutral
gaearon/react-hot-loader,mocha,2018-02-19T16:45:12Z,dx improvements. ### descriptionas a react ecosystem developer. i want to ensure my hocs work with rhl. right now it is hard to achieve.### actual behaviornothing helps react ecosystem developer to verify that rhl works with hocs they create.### expected behaviori would like to see some few improvements:* in-depth walk through rhl's life-cycle methods to understand how does it work in details* sort of sdk to mimic different rhl's life-cycle methods to ensure hocs works with it the way developers intend to (perhaps rhl-dev).* few recipes of sdk usage with different popular libraries and test runners (react-redux. react-intl. etc and mocha. ava. etc),neutral
gaearon/react-hot-loader,mocha,2018-02-20T16:51:21Z,gaearon i agree. now that the project is stable. we have to make it cleaner. and to do it we have to make changes in react.,neutral
gaearon/react-hot-loader,mocha,2018-02-20T16:59:36Z,does the project currently add any custom hooks to components beyond the react api? i noticed something called `componentdidrender` and wasn't sure what that is.,neutral
gaearon/react-hot-loader,mocha,2018-02-21T22:19:18Z,just after writing down how it works. i've point a few moments which may no longer work as i expect. or should work differently.,neutral
gaearon/react-hot-loader,mocha,2018-02-22T22:22:52Z,thekashey thanks for this,positive
bermi/sauce-connect-launcher,sauce,2014-05-24T23:21:05Z,pull requests are accepted. :)as a workaround. you could manually download sauce connect for your platform and unzip it into `node_modules/sauce-connect-launcher/sc/`.,neutral
bermi/sauce-connect-launcher,sauce,2014-05-27T09:11:44Z,i added quick and dirty proxy support but fail to execute it on my linux -.- seems as if sc for linux is 64 bit?additionally it works perfectly for an http.request. but i get issues cocerning the https.request used in sauce-connect-launcher.jsis there a specific reason for the https request? ps: as its working and ok for me i make a pull request of course ;),positive
bermi/sauce-connect-launcher,sauce,2014-06-10T14:54:21Z,sorry but fixing one thing opens 3 others. running sauceconnect on one of our servers instead of using sauce-connect-launcher.,negative
nightwatchjs/nightwatch,jshint,2015-03-13T08:42:25Z,update globbing pattern and fix linting issues. update the globbing pattern in _gruntfile.js_ to include missing subdirectories and fix follow-up _jshint_ issues.closes #382,neutral
nightwatchjs/nightwatch,jshint,2015-03-17T21:35:35Z,how about squashing all these commits into one?,neutral
nightwatchjs/nightwatch,mocha,2016-09-01T13:49:43Z,i'm also having this issue - i've tried multiple variations of setting mocha as the test runner in `nightwatch.json`. but it just hangs in the same way as described above.,neutral
buildo/react-components,eslint,2017-02-22T11:55:17Z,fails because of eslint errors already resolved on `master`,negative
buildo/react-components,eslint,2017-02-23T10:20:01Z,be compatible with `consistent-return` eslint rule . ## requirements- in order to add `consistent-return` to our `eslint-config`without introducing errors we need to change our code in advantage## specs- add `consistent-return: 2`  to `.eslintrc` rules- `npm run lint`- fix errors (where possible. if possible)## misc{optional: other useful info},negative
YouCanBookMe/react-datetime,mocha,2016-07-19T21:38:50Z,add test task with watch option. writing tests often requires them to be run multiple times before they pass. it can be a hassle switching focus back and forth between your editor/ide (to write code) and terminal (to init test task). by running this npm task the mocha instance will watch for changes in files and automatically re-run the test task. saving you time and energy.it is run like `npm run test:watch`.,neutral
YouCanBookMe/react-datetime,mocha,2016-07-29T11:25:22Z,simeg really nice this feature. thanks!,positive
rickbergfalk/sqlpad,eslint,2019-01-18T03:06:50Z,move linting to root and update dependencies. this moves eslint/prettier tooling to the root of the directory. and actually gets the linting tooling working. this also updates dependencies across the project. this build is breaking intentionally due to linting errors. see it is working.,negative
angular/zone.js,jasmine,2017-12-20T15:45:09Z,alexeagle . got it. thank you!mhevery . please review. and about `zone-testing-node-bundle.js`. it also include `zone jasmine patch`. please check it is correct or not. thank you.,positive
angular/zone.js,karma,2015-04-08T17:45:44Z,btford thanks for the response! i just added a test using karma-browserify; also had to tweak the original implementation because it inadvertently masked original window reference for property patching.,positive
angular-fullstack/generator-angular-fullstack,karma,2015-08-04T08:36:42Z,feat(app): use wiredep to inject bower deps into karma.conf.js. closes #594,neutral
angular-fullstack/generator-angular-fullstack,selenium,2016-10-28T18:31:54Z,it runs fine for me. i'd assume it's something wrong with your selenium,positive
adamgruber/mochawesome,mocha,2016-02-01T13:26:47Z,code block empty. hi there!i love the report :100: . but one of its really useful features. "show code". doesn't work in my project.i think it might be related to the fact i'm using `gulp-mocha` and not `mocha` directly.would you have any idea?,negative
adamgruber/mochawesome,mocha,2016-02-01T16:56:30Z,can you elaborate on this? what do you mean by "doesn't work"? i assume you mean that you are not seeing your source code and instead seeing an empty box. the report generates a json file which is used to render the html. if you look at the json each test should have a `code` property. do you see your code in there?what leads you to think it could be related to `gulp-mocha` vs `mocha`? if you can provide some example of your usage i can better try to help.,neutral
adamgruber/mochawesome,mocha,2016-02-01T17:19:18Z,sure. thanks for taking the time.the `code` attribute is an empty string for each test.i have no complete understanding of how the `gulp` streaming process works. but i wonder if the fact that it's streaming content and not writing files on disk might be the reason `mochawesome` can't extract the code.,neutral
adamgruber/mochawesome,mocha,2016-02-01T18:23:07Z,i've successfully tested mochawesome running against `mocha`. `gulp-mocha` and `gulp-spawn-mocha`. i don't believe that would be the issue. without seeing some of your test code and setup i can't really diagnose this.,negative
adamgruber/mochawesome,mocha,2016-02-14T00:10:02Z,i'm sorry i didn't follow up on this issue lately. thanks for the quick fix adamgruber !,positive
ai/browserslist,eslint,2017-01-10T11:27:13Z,i was suggesting because of the many project that use the `rc` postfix like:`.nvmrc` `.npmrc` `.babelrc` `.eslintrc.json` `.stylelintrc.json` `.jshintrc`. ...it might prove useful for people that whitelists dotfiles in `.gitignore` (instead of blacklisting) as they will be able to do:```.*!.gitignore!.*rc*```i'm not very opinionated about the `rc` postfix but i think it has become a de facto standard and not following it might just generate confusion for the average user.,negative
Hacker0x01/react-datepicker,codecov,2017-01-18T21:09:17Z,as far as i can tell. codecov/patch check is failing because of a change to an import line.  i am unfamiliar as how to cover this.  i have written tests to cover the new object that was imported.  can anyone explain how i'm supposed to improve coverage on an import line in order to get codecov/patch check to pass?  i don't know how to cover an import line.,negative
webpack/webpack,standard,2017-09-15T11:35:19Z,whitecolor ah. sorry for that :) then. without going into the details let's accept that resolving from the root module doesn't always work. there can be valid use cases when it's not. however. the standard module resolution of node.js works. is there any reason of webpack not using it?,positive
webpack/webpack,standard,2017-10-09T19:48:34Z,i don't think so. as far as i can see. this is exclusively related to the new `module` script standard for browsers. everything is working as expected. other than `this` being undefined.,negative
webpack/webpack,coveralls,2016-04-21T21:25:11Z,no idea why coveralls is showing decrease in coverage. checked the details but i'm not able to understand it. help here would be appreciated.  sokra,negative
prebid/Prebid.js,karma,2018-12-07T19:31:51Z,genegenie thanks for providing the output; this type command isn't possible anymore due to the `karma-webpack` plugin not supporting the testing of individual files.you'll either have to run the full `gulp test` command or carefully use the `.only` property in your unit test file.  if you insert the reference like the following `describe.only('adtelligentbidadapter'. function () {`. when you run `gulp test` - it will only run the tests for your adapter.you'll have to remove this reference when you want to commit the changes. but it can be used while you're putting the tests together.,neutral
CenterForOpenScience/ember-osf,eslint,2018-03-28T19:00:48Z,adlius eslint is failing,negative
nodejs/citgm,eslint,2017-04-25T05:22:56Z,i think if you create a `./citgm_tmp/.eslintrc` file and put `{ "root": true }` in it. that ought to fix things. or something like that.  /cc not-an-aardvark,positive
nodejs/citgm,eslint,2017-04-25T16:53:30Z,so it seems to me like this could be solved in ci by simply not making the temp directory inside of the smoker directory where node is cloned. i'm still very weirded out by things suddenly braking though. and i'm going to see if i can chase it down to a specific change in eslint,negative
nodejs/citgm,eslint,2017-04-25T16:54:58Z,not-an-aardvark is there a reason for a module *not* to set `root: true` in their eslint config? i'm not sure why that isn't the default in `eslint`.we should definitely clone node into `$workspace/node` though. that's probably a more sensible thing to do anyway.,negative
babel/babylon,eslint,2017-10-31T16:07:18Z,i guess this is already solved. if there are problems with the estree plugin we are happy to accept issues and prs.,positive
babel/babylon,eslint,2017-10-31T17:33:59Z,danez this is for espree not `estree`. the idea is that we would move logic from babel-eslint into the babylon parser as a plugin. depends on if it's worth doing (possibly),neutral
babel/babylon,eslint,2017-11-01T10:14:14Z,hzoo yup.yea. it worth.so please open. i can get something done when get time.,positive
react-materialize/react-materialize,karma,2016-11-27T11:31:38Z,fixes karma bug that made the tests run twice,neutral
lob/lob-node,jshint,2015-04-24T00:06:54Z,fix(linter): enfore and adhere to jscs and jshint. #123leore pon mgartner it's all just making the repo follow the linter. no functionality change. local tests passed,neutral
lob/lob-node,coveralls,2015-04-17T18:25:41Z,yeah this is enforced by coveralls,neutral
Automattic/mongoose,mocha,2014-11-01T12:18:03Z,fwiw. here is a simplified fragment of my mocha test. with the expect statement that fails:```// update that uses replaced_component in the update argumentvar mongoose_query = this.model.update(conditions. update);mongoose_query.lean().exec().then(    function(updated_part) => {        var component_after_update = updated_part.components[0];        expect(component).to.deep.equal(replaced_component);```,negative
pouchdb/pouchdb,eslint,2017-02-07T01:10:36Z,i would like to try this if it's as simple as adding a max-len rule with code option as 100 to eslintrc. if you could elaborate on the proper bracing form should be i could look at that too.,neutral
pouchdb/pouchdb,eslint,2017-02-07T01:27:51Z,hey daniellyons178. you should absolutely feel free to attack the maxlen issue first. in fact it may be best to separate this into different commits to make it easier to understand.for the braces issue. we just want a space after `if` and a space after the `)` as well. also we should disallow single-line `if` statements – braces are required. i don't really know the eslint commands to get this to work. but it should require just a little bit of research in the eslint docs. :),neutral
pouchdb/pouchdb,eslint,2017-02-07T02:04:03Z,thanks for the info! i will tackle this tomorrow.,positive
pouchdb/pouchdb,eslint,2017-02-07T20:07:03Z,6209 eslint fixes. changes to `.eslintrc` incl.- max line length of 100 excluding comments. strings and regex literals- enforced curly brackets on all blocks. no more `if (true) return 1;`- added spacing before and after keywords `if()` no longer allowed. must be `if ()`- added spacing before blocks `if (){` no longer allowed. must be `if () {`,negative
pouchdb/pouchdb,eslint,2017-02-09T02:03:50Z,excellent. thank you so much! this is tedious work. but it makes the codebase so much nicer to read. much appreciated! :tada:,positive
pouchdb/pouchdb,selenium,2014-12-21T22:17:37Z,yeah. but i couldn't figure it out. to be honest i still don't understand how our `client=selenium:phantomjs` or `client=selenium:firefox` magically starts up firefox or phantomjs. i stupidly tried `client=selenium:nodewebkit` and nothing happened.more disturbing is that chai/should seem fundamentally broken in nodewebkit due to the prototype manipulation. so i think even if we got it automated. we'd be in trouble. you can take a whack at it if you want. though...,negative
pouchdb/pouchdb,selenium,2014-12-21T23:55:35Z,3229 - wip don't merge - node-webkit 3rd attempt. i've manged to run it. but haven't figured out how to hook it into selenium yet.,neutral
pouchdb/pouchdb,selenium,2014-12-22T02:59:21Z,might also need to call in some help from rogerwang; i am 99% sure i am doing this wrong.is `-dwebdriver.chrome.driver=./chromedriver2_server` supposed to be a relative path to the `chromedriver` binary. and if so why does it need the `_server`...?,negative
pouchdb/pouchdb,selenium,2014-12-22T04:23:39Z,nolanlawson the `chromedriver binary` is actually named `chromedriver2_server` because it is the server for the client -- your test case/driver.,neutral
pouchdb/pouchdb,selenium,2014-12-22T15:31:10Z,daleharvey in that case. i can leave this pr open. but pull out just the fixes that are required for the tests to pass and open another pr. is that okay?,neutral
pouchdb/pouchdb,selenium,2014-12-22T15:31:50Z,yup that sounds great,positive
pouchdb/pouchdb,selenium,2014-12-22T18:30:49Z,+1 when green. i will take a look at getting selenium-standalone working and merged and we can start leveraging / sharing that across other projectalso when you merge we will very briefly be at pr 0 :),neutral
pouchdb/pouchdb,selenium,2015-01-01T19:35:25Z,codes merged and will keep track of the node-webkit fixes in the other bug. cheers,positive
pouchdb/pouchdb,selenium,2015-01-02T10:16:07Z,(#3095) - use selenium-standalone to manage selenium,neutral
pouchdb/pouchdb,selenium,2015-01-02T17:15:41Z,if this works. i would love to start fixing all the plugins as well. it's a pita to remove the selenium jar just for the benefit of bower users.,positive
pouchdb/pouchdb,selenium,2015-01-04T12:54:13Z,vvo any idea about whats happening here? locally this is running fine. but dying in travis,positive
pouchdb/pouchdb,selenium,2015-01-05T03:48:33Z,gonna play it safe and wait for a green in iphone+ie as well. restarting those jobs.,neutral
pouchdb/pouchdb,selenium,2015-01-08T22:07:01Z,ie is green. so fair enough. +1i'm mostly just paranoid about ie failures. iphone failures are usually also caught by phantom or safari.,negative
pouchdb/pouchdb,selenium,2015-01-10T11:34:40Z,upgrade selenium runner,neutral
pouchdb/pouchdb,selenium,2015-01-10T11:35:28Z,upgrade selenium standalone,neutral
pouchdb/pouchdb,selenium,2015-01-10T14:17:18Z,travis is green. and the allowed failures it gives are because the tests fail. not because of selenium problems. thanks for this! merged: e2675ec0ae3ce494905721567a6746d115f47719,negative
pouchdb/pouchdb,selenium,2015-01-10T14:17:53Z,merged in e2675ec0ae3ce494905721567a6746d115f47719,neutral
pouchdb/pouchdb,jshint,2014-12-13T10:33:45Z,(#3160) - remove redundant jshint dir,neutral
pouchdb/pouchdb,jshint,2014-12-13T10:34:28Z,was just looking into #3160 and seen this. tested it still checks all code under /tests/ and it does,neutral
pouchdb/pouchdb,jshint,2014-12-13T20:43:15Z,1a8eb00e3e148b446ed287ef535fe5249d257ca3,neutral
pouchdb/pouchdb,jshint,2014-12-15T17:05:13Z,daleharvey thank you for being so patient on this! i did try to eyeball where i had use the 'comma' var declarations and missed that one. i also reset intellij to use 2 space tabs but not before i had made some changes.what's odd is that when i look at .jshintignore it does seem to evaluate the performance directory so i don't understand why it missed the tabing issue.,negative
pouchdb/pouchdb,jshint,2014-12-24T13:07:46Z,and these all break because of jshint. switching over to inherits,neutral
pouchdb/pouchdb,jshint,2014-12-27T20:40:58Z,i'm the original reporter of the bug and have added more detail to the issue.in any case. shouldn't all `for...in` loops be checking with `.hasownproperty` unless traversing the prototype chain is what is desired? jshint's test for this check isn't robust. which sucks.,negative
pouchdb/pouchdb,sauce,2014-02-10T21:12:24Z,hm. not 100% on this. its somewhat strange to be sending various 'open' http requests before just wanting to delete it. i remember i actually may have changed this on purpose to reduce the amount of overhead when we did testing via a travis / saucelabs tunnel.is this just because it seems a little more sensible to do db.destroy() vs pouchdb.destroy? (#1137 shouldnt really come into it. it was just a straight up bug). i suspect there will be a lot of times you want to delete a database without opening itwe dont have a particularly nice interface for things done above the db level. (like alldbs on remote databases for example). might be part of the same discussion,negative
pouchdb/pouchdb,sauce,2014-02-10T22:46:28Z,saucelabs is a choice. we have a free os account there. we used to use it for our travis testingrunning a reverse proxy from travis to saucelabs to run several browsers against the same couchdb did not work. however running a matrix of tests with the browsers running against their own couchdb instance is very possiblethis also solves the cloudant / pouchdb-server issues. they are just other matrix configurations,neutral
pouchdb/pouchdb,sauce,2014-02-28T14:00:25Z,actually now we need to push to branches to test saucelabs. so nope,neutral
pouchdb/pouchdb,istanbul,2016-08-20T16:40:57Z,failing due only to code coverage dropping below 100%. you may need to throw some `/* istanbul ignore */`s in there.,negative
pouchdb/pouchdb,istanbul,2016-08-22T00:39:35Z,i was going to rebase with the `istanbul ignore` fixes. but it looks like this line is totally unused:``` jsif (typeof this._put === 'function' && !!opts.new_edits) {    this._put(doc. opts. cb);}```correct me if i'm wrong willholley but doesn't this mean that your fix isn't actually run? seems it should at least run for the http adapter.,negative
pouchdb/pouchdb,istanbul,2016-08-23T16:18:56Z,we shouldnt need to mock anything. the http adapter is used in the node test suite and we have tests that perform checkpointing so it should be run. can take a look but yeh we cant istanbul ignore that line. need to figure why its not being hit,neutral
pouchdb/pouchdb,istanbul,2016-08-24T22:34:33Z,if coverage is failing. then i suppose we need more `/* istanbul ignore */`s. assuming it's not possible to actually have the tests run through the ignored code.,negative
vlucas/frisby,jasmine,2015-01-08T16:08:06Z,these changes are on hold for the moment. after merging. i ran all the tests myself with `minijasminenode2`. and it lacks things like test count and assertions count. as well as output formats for ci server integration. i am waiting for `jasmine-node` to bring their v2 out of beta before this will be officially released.,positive
vlucas/frisby,jasmine,2015-01-16T16:26:29Z,isn't it expected to work globally out of the box. the same way jasmine-node does?,neutral
angular/protractor,jasmine,2017-03-13T17:28:28Z,any help on the above issue 'error: timeout - async callback was not invoked within timeout specified by jasmine.default_timeout_interval.'.  thanks in advance.,positive
angular/protractor,jasmine,2017-03-16T13:36:29Z,i've noticed this happening with jasmine as well. fwiw,neutral
angular/protractor,jasmine,2017-03-18T15:29:49Z,hmm. thanks for bringing this up. could i get you to create a small repository that reproduces it? we can use that to work towards a potential fix. the expected output for you would be that the jasmine reporter output would be the only output? or is it that it would print out in "real time" alongside the dots?thanks!,neutral
angular/protractor,jasmine,2017-03-28T18:32:26Z,mgiambalvoi use the default jasmine framework. but i define additional cli options in my project. such as account options for the app i'm running tests against. these get picked up as unknown flags. is there currently any way for me to plug these into the call to runtestpreparer to get rid of the warning?,negative
angular/protractor,jasmine,2017-03-30T07:21:45Z,for opening a page this might be true. but what if you want to use all the async / await goodness in your tests?it is said that the control-flow library will be deprecated in the near future (or maybe already is) and i guess that slight changes to the jasminewd2 dependency might make the whole thing work.,positive
angular/protractor,selenium,2016-03-18T13:05:08Z,i've tested with `webdriver-manager update --standalone --ignore_ssl`. which seems a bit better but now i get a 403 and our a/v seems to think that the selenium jar is a virus... :)you may consider this issue bogus given that the support is there. but maybe consider respecting the node_tls_reject_unauthorized environment variable?,positive
angular/protractor,selenium,2016-03-18T19:09:59Z,as a future fyi - properties with an underscore are generally considered private and subject to change without notice.i'll update the changelog to include a link to to the selenium-webdriver changelog.,neutral
angular/protractor,selenium,2016-03-20T21:07:53Z,juliemr this would've been nice to have. so i'm guessing this is still the case?,positive
angular/protractor,selenium,2016-03-21T21:05:27Z,when setting the `alternative_cdn` option. the `fileurl` passed into the `resolveproxy` method is the alternative cdn host with the path to download the file. so digging into this method with the `proxy` option:- it would return proxy value set on the command line- if the proxy option was not used. it would defer to an environment variable set- if no environment variable is set. it should return undefinedit could be that your proxy server does not know how to route to your endpoint. i would make a curl call to your sever to make sure it is reachable.this request and #3035 are requests to change webdriver-manager that appear very specific around your corporate proxy. what you could do instead. is just run selenium standalone server. the webdriver-manager is only a simple download and start node application and could easily be replaced with a script:download from your file server:```wget ```run the selenium server:```java -jar <selenium-server.jar> -port 4444 -dwebdriver.chrome.driver=<chromedriver.exe> -dwebdriver.ie.driver=<iedriver.exe>```,neutral
angular/protractor,selenium,2016-03-22T14:13:32Z,webdriver-manager  update --ie32 is not zipping the correct ie driver in selenium folder.  running the command webdriver-manager update --ie32 . it is download the driver but while it is unzipping it is creating as 0 file type .attached the url of screenshot,neutral
angular/protractor,selenium,2016-03-23T13:59:36Z,the instructions above should resolve your current issue. the issue is tracked in a different repository. closing this issue.,positive
angular/protractor,selenium,2016-03-24T06:45:50Z,sjelin  : can you just me the command to pass argument when we start that instance of selenium standalone server.,neutral
angular/protractor,selenium,2016-03-28T20:57:07Z,miyukiw is there a way to delete the selenium folder (where webdriver is saving the files) or run `webdriver-manager clean`? the file type `*.exe` was not appended to the internet explorer binary and running just update will not fix it. so:`webdriver-manager clean``webdriver-manager update`we will have a better check so this does not happen in the future.,negative
angular/protractor,selenium,2016-04-04T18:20:49Z,this is the key part of the config to trigger this:```  maxsessions: 3.  capabilities: {    'browsername': 'chrome'.    shardtestfiles: true.    maxinstances: 10.    'chromeoptions': {      'args':[          '--user-data-dir'.      ]    }  }.```i think this is working as intended for chrome - if you start multiple times with the user-data-dir equal to the same value. it will use the same instance of chrome. and selenium gets confused.i think you could work around this by setting user-data-dir to something different in every different instance. and copying whatever extension stuff you need into each different dir.i'm going to close this issue since there isn't anything protractor can do - webdriver can't control more than one browser if it's the same instance. and setting the user-data-dir to the same thing starts browsers with the same instance.,negative
angular/protractor,selenium,2016-04-05T22:39:10Z,chore(docs): add selenium webdriver documents. placeholders for api documentation.,negative
angular/protractor,selenium,2016-04-08T20:49:29Z,going down the stack with the following capabilities:capabilities: `{'browsername': 'internetexplorer'. 'elementscrollbehavior': 1. 'nativeevents': 'false'}`- `driverprovider.getnewdriver` we pass selenium webdriver the correct capabilities- webdriver creates a session by acquiring a session. while acquiring a session. it converts the capabilities with `towirevalue` which calls `convertvalue`.- in `convertvalue`:```if (typeof value[symbols.serialize] === 'function') {    return towirevalue(value[symbols.serialize]());  }````value[symbols.serialize]()` returns `{'browsername': 'internetexplorer'. 'elementscrollbehavior': 1. 'count': 1}`,neutral
angular/protractor,sauce,2015-02-04T23:52:38Z,travis looks like it was failing for sauce labs related reasons. so i restarted the tests. looks good once they're passing.,positive
cozy/cozy-ui,standard,2018-04-03T15:45:09Z,i think it would be best if empty reused other standard components instead of defining its own title. text etc...,neutral
cozy/cozy-ui,standard,2018-04-03T15:51:52Z,but we don't have standard components for this yet.,neutral
cozy/cozy-ui,standard,2018-04-04T08:58:29Z,imho the purpose of this pr is to add a new `<empty />` component. since the standards text and title components don't exist for now. they should be added in another pr without blocking this one instead.if we add subcomponents after this pr. it shouldn't be a breaking change but an internal change (like a previous pr #382 about adding intentmodal component for example). so the final user of the `<empty />` component won't be affected in any cases.,neutral
ripple/ripple-lib,mocha,2015-03-19T00:28:24Z,increase timeout for mocha tests because sometimes tests fail on travis .... ...due to taking too long,negative
ripple/ripple-lib,eslint,2016-03-22T16:43:49Z,eslint errors,neutral
ripple/ripple-lib,eslint,2016-04-05T16:48:54Z,lgtm. not sure what's wrong with that eslint error,negative
ripple/ripple-lib,eslint,2016-04-05T16:49:05Z,clark800 did you ever figure out the issue with eslint?,neutral
ripple/ripple-lib,eslint,2016-04-05T18:16:26Z,i think the best solution is to add `// eslint-disable-line strict` to the `'use strict';` line,negative
levelgraph/levelgraph,mocha,2014-11-13T10:34:27Z,the problem is some closing logic routine in levelup. you are not supposed to close the database within an event generated by a readstream.in the tests. you can solve it by closing the db in the aftereach mocha  thing.,neutral
tapjs/node-tap,mocha,2018-06-05T18:50:12Z,no. `t.fail(msg)` just prints a failing assertion.  (it's the inverse of `t.pass(message)`.)> it is not a very intuitive limitation that you need to manually end the test inside a synchronous function; that is not how other libs like ava workwell. that's not how _ava_ works.  most other test frameworks in node.js either sniff the test function to see if it takes an argument (ie. mocha and lab) and if so. pass in a `done` callback. or (tap. tape. and a few others) provide an object that has to be manually ended. or don't really support asynchrony with callbacks or objects at all (mostly very old test runners. like nodeunit and a few others). so every test has to be 100% synchronous.automatically ending tests with sync functions would be a _huge_ change in tap.  there's a massive number of tests out there that do things like:```jst.test('foo'. t => {  getsomefoo(a. b. c. (er. data) => {    if (er)      throw er    t.match(data.  {some: 'thing'})    t.end()  })})```those tests would auto-end and cause a lot of problems if i did what you're suggesting.  ava started life by doing `t.test.cb(..)` for that use case. but tap follows a different pattern.,negative
balderdashy/sails,mocha,2014-07-02T15:49:42Z,mikermcneil if have finished implementing this (with backward-compatibility) und mocha-test for skipper run without a error. i updated skipper (in a fork) and also skipper-disk. should i send you all together as a zip or make 2 prs? i worry that its difficulty to understand if you dont have both changes together.,negative
KeitIG/museeks,eslint,2017-07-25T20:15:50Z,and check eslint too ;),neutral
securingsincity/react-ace,mocha,2017-11-03T22:15:27Z,securingsincity i've added some mocha test for debounce function & props. let me know if there is anything else,neutral
pouchdb/express-pouchdb,jshint,2015-07-18T18:04:37Z,(#222) - update jshint,neutral
pouchdb/express-pouchdb,jshint,2015-07-25T17:10:39Z,timebombed,neutral
pouchdb/express-pouchdb,jshint,2015-07-25T17:10:59Z,1cbc7533d1f156a28f8d755885315bb23e4943fe,neutral
uxsolutions/bootstrap-datepicker,jshint,2014-12-17T11:24:18Z,pushed a commit that might solve this. jshint didn't like the short circuiting though ;),positive
swagger-api/swagger-js,mocha,2016-02-03T13:34:27Z,the ci build failed. that's quite strange :-(  the test passed on my machine.and the details of the ci building process showed that the failure occurred in the plugin `gulp-mocha`. anybody could help me? thanks.,negative
Azure/azure-xplat-cli,jshint,2014-05-23T17:09:24Z,squirrelfm could you fix the jshint errors ? (you can run locally by simply doing "npm test") everything should pass there. let us know if you have trouble rerecording the tests.,neutral
bgentry/ember-apollo-client,eslint,2019-01-11T19:06:20Z,looks like eslint-plugin-node is up-to-date now. so this is no longer needed.,positive
bgentry/ember-apollo-client,eslint,2019-01-11T19:06:29Z,looks like eslint is up-to-date now. so this is no longer needed.,positive
bgentry/ember-apollo-client,eslint,2019-01-11T19:06:44Z,looks like eslint-plugin-prettier is up-to-date now. so this is no longer needed.,positive
yeoman/generator-karma,karma,2014-03-25T16:22:17Z,not sure how this fixes the issue? we're missing packages in `packages.json` so they're never installed. referencing them from karma config file. does that help?,neutral
yeoman/generator-karma,karma,2014-03-27T23:22:22Z,right. that makes sense. this would need to be built into the angular generator as well then. correct? can you keep us updated on when there's a fix in generator-karma eddiemonge?,neutral
jamesarosen/ember-i18n,jshint,2015-08-14T14:31:17Z,also -note for anyone else watching ... if you just want to work around this you can do the import in start-app like i show above/then add "t" to your globals (test .jshintrc file).the real question here is how to use it w/out hacking on a global in test code,neutral
ember-cli/ember-cli-mocha,mocha,2018-02-03T13:15:02Z,> the changes however would have to go into ember-mocha itself nowthat is correct. due to this i will close this pr. but feel free to reopen on the other repo.,neutral
tommikaikkonen/redux-orm,eslint,2018-06-09T09:32:21Z,update dependencies. with these changes `npm audit` now returns 0 vulnerabilities.**major updates:**- webpack v4  - [x] add `webpack-cli`. `webpack-merge`  - [x] update `webpack.config.js`   - [x] split up `webpack.config.js` into `webpack.common.js`. `webpack.prod.js` and `webpack.dev.js`  - [x] remove `cross-env`- ~~babel v7 (beta)~~  - [x] ~~update `.babelrc`~~- eslint v4 along with new rules in `eslint-config-airbnb-base` v12  - [x] fix `prefer-destructuring` errors  - [x] disable `function-paren-newline`- gulp v4  - [x] test docs/dist uploading  - [x] circumvent shinnn/gulp-gh-pages#116- jest v23  - [x] add `jest-cli`  - [x] remove `babel-jest`- codecov v3,negative
tommikaikkonen/redux-orm,eslint,2018-06-09T12:17:27Z,would highly appreciate comments on whether or not upgrading to babel 7 is something we should do. this means requiring users to use babel 7 when they want to transpile the source themselves.,neutral
tommikaikkonen/redux-orm,eslint,2018-06-10T09:43:21Z,yes. i agree it would be a good step to remove gulp. `gulp-gh-pages` doesn't seem to maintained a lot. we may be able to find a better alternative to push the docs and bundles.however let's leave that for another pr. this one is already more than complex enough.,positive
tommikaikkonen/redux-orm,eslint,2018-06-11T11:08:34Z,i'll go ahead and merge this so we can work on transpiling to es2017 in a sane way.,neutral
tommikaikkonen/redux-orm,eslint,2018-06-11T15:48:07Z,hijacking the thread a bit: haveyaseen . just wanted to say thanks for taking over active maintainership of redux-orm!  we're using it in one of our apps (and i hope to eventually use it in the other one). but we're wrapping up a dev cycle atm and it'll be a while before we're adding new code that specifically uses redux-orm.  meanwhile. i'm more than fully occupied doing stuff as a redux maintainer.  so. while i still have a vested interest in redux-orm. i definitely don't have time to actively work on it myself.  it's great to see that someone else is both interested and willing to push the library forward.,positive
tommikaikkonen/redux-orm,eslint,2018-06-11T16:13:30Z,yeah. sadly i’m not involved anymore at any project that uses redux-orm. so right now probably can’t contribute a lot. sent from iphone> on jun 11. 2018. at 10:48. mark erikson <notificationsgithub.com> wrote:> > hijacking the thread a bit: haveyaseen . just wanted to say thanks for taking over active maintainership of redux-orm! we're using it in one of our apps (and i hope to eventually use it in the other one). but we're wrapping up a dev cycle atm and it'll be a while before we're adding new code that specifically uses redux-orm. meanwhile. i'm more than fully occupied doing stuff as a redux maintainer. so. while i still have a vested interest in redux-orm. i definitely don't have time to actively work on it myself. it's great to see that someone else is both interested and willing to push the library forward.> > —> you are receiving this because you were mentioned.> reply to this email directly. view it on github. or mute the thread.,negative
tommikaikkonen/redux-orm,eslint,2018-06-11T19:46:38Z,alright guys :smile: actually both of you have done fantastic jobs so far. so i have to thank you for that as well!as for myself. i don't expect to be working on redux-orm all too meticulously. but it would be extremely sad for the library to die off due to a lack of maintenance. it must retain its high quality and stay up-to-date and secure. these are the most important requirements and i'll do my best to accomplish that. everything else comes afterwards. yet redux-orm can only have a bright feature if it becomes more user-friendly and attractive for contributors. both quite hard things to do when developing a database-like system. i am more than happy that redux exists and that you and others put so much effort into it. just by itself. it is hardly enough for big applications. though. the simple state management that this project provides is unique and essential for developers who need to get up and running quickly. and they are my motivation for doing this.,positive
electrode-io/electrode,karma,2018-11-16T04:55:26Z,add isparta as dep to opt-karma archetype,neutral
electrode-io/electrode,karma,2018-11-16T15:29:13Z,use isparta-loader from archetype-opt-karma,neutral
electrode-io/electrode,karma,2018-11-17T00:26:52Z,use isparta loader from opt-karma archetype,neutral
electrode-io/electrode,karma,2018-12-04T22:36:48Z,update karma test babel polyfill,neutral
electrode-io/electrode,karma,2018-12-06T22:59:33Z,ensure karma only load webpack config once,neutral
electrode-io/electrode,karma,2018-12-07T06:17:02Z,add css to karma sample,neutral
paritytech/parity,mocha,2017-11-02T20:19:42Z,slothbag have you successfully removed your delay in between transactions for unit tests? i too am using mocha and i have to have a delay or parity cannot take the test load. causing the time to fall behind in solidity and generally. intermittent transaction failures.,negative
admc/wd,mocha,2014-12-01T06:27:13Z,trigger tests from an html file by opening it in a browser. is it possible to include `wd` in a browser and run the tests by opening a web page. kind of like how mocha can be triggered from a browser. i put the following code alongwith my test case js file and it executes them in a browser. i was wondering if i can also include wd's js file below.```<script src="mocha.js"></script><script>   mocha.setup('bdd')   mocha.run();</script>```the advantage is that i can easily include my existing libraries in the browser & use them for unit/functional testing (all of which aren't compatible with node.js environment).,negative
admc/wd,mocha,2014-12-01T06:58:21Z,it's not designed for that. maybe you can try [browserify]().,neutral
admc/wd,mocha,2014-12-01T14:04:03Z,that was the first thing i tried. i'm using jquery. jqueryui. bootstrap and other plugins which aren't easy to browserify without a lot of 'not so elegant' glue code. i'm closing this though.,positive
angular-ui/bootstrap,karma,2014-04-30T18:47:48Z,chore(all): upgrade karma. just `npm update` and you're good to go,negative
angular-ui/bootstrap,karma,2014-04-30T18:49:30Z,nathantsoi i'm afraid that it won't be enough as ffox luncher is missing. for example. on top of this we need some other lunchers for browsers used on the ci.,negative
pnpm/pnpm,eslint,2017-09-02T19:00:10Z,what about the bins? i just tried the following with yarn: `yarn add eslint3npm:eslint3 eslint4npm:eslint4` and it created one bin file only - eslint. this seems not right. i'd expect two: eslint3 and eslint4,neutral
yui/yuidoc,istanbul,2014-03-06T20:37:52Z,`--` is meant to split the args so that everything after `--` is passed as arguments to ytestrunner and not to istanbul.,neutral
yui/yuidoc,istanbul,2014-03-06T21:03:00Z,ah ok. in that case if i get istanbul working for myself then hopefully that might make things better.i also just realised that utils.js isn't included in the tests. seems to be missing from the --include options.,neutral
dropbox/zxcvbn,sauce,2016-09-28T21:07:02Z,add edge to the set of browsers tested on saucelabs. it would be important to add edge to the set of browsers tested on saucelabs.no one knows if some failures are added by microsoft to their marvellous new browser.,neutral
verdaccio/verdaccio,eslint,2017-04-27T01:50:53Z,clean eslint. this pr clean eslint warings.,neutral
verdaccio/verdaccio,eslint,2017-05-07T12:09:28Z,thanks marnel . could you fix the `eslint` error?,positive
mishoo/UglifyJS2,uglify,2014-05-03T20:55:58Z,hey jmeas. any update on that pr?i'm having similar issues where the the original (in) source map `sourcescontent` aren't copied to the source map generated by uglify (which means i'm losing data in the process). for now i have to completely stop using uglify if i'm using any source map with `sourcescontent` within them.,negative
mishoo/UglifyJS2,uglify,2014-05-06T19:02:06Z,is this all the code you're uglifying? i don't see anything wrong with it. or with the uglified result:``` jstry{var part=file.slice(0.2);reader.readasarraybuffer(part)}catch(e){onunreadable()}```,negative
mishoo/UglifyJS2,uglify,2014-05-09T10:45:17Z,regarding my earlier comment about #290. didn’t realise that the uglify-js2 package was deprecated. i suggest you just close #39. #89. and #290 instead. eventually it would be great to just unpublish that package.,positive
mishoo/UglifyJS2,uglify,2014-06-03T14:26:36Z,.uglifyrc +1,neutral
commitizen/cz-cli,eslint,2017-12-28T04:54:25Z,add .nyc_output and .eslintrc to .npmignore,neutral
testem/testem,mocha,2014-02-25T01:58:31Z,um? bump? :+1:,neutral
testem/testem,mocha,2014-03-08T21:49:24Z,store a reference to settimeout when loading mocha adapter. fixes a problem where the test execution hangs. if a test helper (e.g.sinon.usefaketimers). has swapped out the global timeout function.,neutral
DevExpress/testcafe,sauce,2016-10-31T10:37:13Z,all introduced changes are backward-compatible with existing `saucelabs` and `phantomjs` providers. but we have to implement newly supported  functionality.### maximizewindow (browserid)maximizes the browser window `browserid`.### canresizewindowtodimensions(browserid. width. height)allows to validate the specified `width` and `height` of browser window `browserid` before the actual resize. the result is `true` if browser window can be resized to the specified dimensions. `false` otherwise.### hascustomactionforbrowser(browserid)enables feature querying for the specified browser window `browserid`. the function should return an object with the following properties:`hasresizewindow` - the browser window supports resizing.`hasmaximizewindow` - the browser  window supports maximizing.`hastakescreenshots` - the browser window image can be captured to the file.`hascanresizewindowtodimensions` - the requested window dimensions can be validated before resize.if a property in the returned object has the `true` value. the provider should have an implemented function with the name corresponding to the property. (e.g. `hastakescreenshot` => `takescreenshot`). the default implementation for `hascustomactionforbrowser` checks for the function names by calling `hasownproperty` on provider object.### islocalbrowser(browserid)returns `true` if the specified browser `browserid` is a local browser. default implementation ignores `browserid` and always returns `false`.,negative
DevExpress/testcafe,sauce,2016-10-31T19:47:25Z,darlanmendonca yes. it were no enough available machines to run the tests on saucelabs. i'll restart them,neutral
DevExpress/testcafe,sauce,2016-11-09T02:00:56Z,testcafe-browser-provider-saucelabs plugin uses selenium api internel ?. ### are you requesting a feature or reporting a bug?feature ### what is the current behavior?testcafe-browser-provider-saucelabs plugin uses selenium api internel ?,neutral
oddbird/true,mocha,2017-07-17T19:43:17Z,chrisopedia can you provide a bit more context for what you're trying to achieve? `gulp-mocha` requires a .js file passed directly to it. so true works by setting up your tests in that js file and then running it with mocha. as far as i'm aware. there isn't a good way to combine it such that the sass files are run through true directly from the gulpfile.,neutral
mochajs/mocha,mocha,2014-02-01T09:08:16Z,> so i've come around to the idea that tap is a terrible format and you need some kind of json object format.tap is a human-readable format. json isn't. it's a good reason to use tap.,negative
mochajs/mocha,mocha,2014-02-03T03:44:21Z,it doesn't need to be readable. it just needs to be an intermediate data format. which json is very good at. no reason to use tap for this,neutral
mochajs/mocha,mocha,2014-02-03T05:43:53Z,well okay. i'm mostly concerned about interoperability with `node-tap`. since i'm trying to maintain npm fork and stuck with its tests for the time being (at least output can be changed...).anyway. what information does mocha provide that isn't supported by tap? pending tests? duration? hmm... maybe you're right. *starting to read tap spec*,negative
mochajs/mocha,mocha,2014-02-04T08:30:32Z,in your ci. add a step that greps for onlys before your tests run. this doesn't need to be in mocha.,neutral
mochajs/mocha,mocha,2014-02-06T06:55:54Z,allow `--compilers` to specify plugins without an extension. i'm creating a little module that adds syntactic sugar to test declarations. defining test levels ("smoke". "full" etc) inline in the code. and skips with reasons (broken. todo. etc).one nice way to load this would be to use the existing `--compilers` flag in mocha.i can specify `--compilers=:mymodule` and it works great. but it appends that empty string to the regex pattern of extensions to look for.i could put a bogus extension in there like `--compilers=zzz:mymodule`. but that seems silly.using `--compilers=plugin` to load plugins between mocha and test files seems like a nice elegant solution.thank you for considering this pr and for all your great work on mocha.,positive
mochajs/mocha,mocha,2014-02-06T09:38:18Z,when in node space. using json is the sane thing to do.,neutral
mochajs/mocha,mocha,2014-02-06T13:31:24Z,i just noticed #1102 and for obvious reasons the two would conflict as written now. i didn't really consider that anyone would want to use xunit from within the browser. so my patch will obviously only work on node.js.if this is something mocha needs to support. then it would be trivial to incorporate the meat of #1102 into this pr. but before putting any more time into this. i'd like to see some indication as to what its fate will be.are there any concerns that are blocking you from merging it?,negative
mochajs/mocha,mocha,2014-02-07T03:59:06Z,sorry. i think it's major overkill. mocha is bloated enough as-is. if there was a lot more interest then perhaps it would be worth the maintenance burden.,negative
mochajs/mocha,mocha,2014-02-07T11:09:47Z,can't you just use the `--require` option?,neutral
mochajs/mocha,mocha,2014-02-10T00:59:35Z,easy. already implemented:```describe("conditional suite". function() {  this.pending = shouldthisbepending(); // true or false  it("is a pending test conditionally". function() {    throw "this test failed";  });});```,negative
mochajs/mocha,mocha,2014-02-12T00:59:43Z,you need to get whatever dir the files are in and replace kirby with that. in any case. this isn't a mocha issue.,neutral
mochajs/mocha,mocha,2014-02-14T01:36:48Z,slashgrin it looks like #1106 also switches from `console.log` to `process.stdout.write` as a side effect. does it work for you?,neutral
mochajs/mocha,mocha,2014-02-15T16:55:48Z,with --watch. the process exits on compiler errors. using `mocha --watch --compilers coffee:coffee-script/register`. if you save a syntax error at any point while you're working on your code. the mocha process exits. which is annoying. it would be nice if mocha could catch compiler errors. print them out and then continue watching.,negative
mochajs/mocha,mocha,2014-02-16T08:18:43Z,i installed mocha locally but then even i get 'mocha' command not found stderror. whereas if i install it using 'npm -g' then it works.,neutral
mochajs/mocha,mocha,2014-02-19T08:09:25Z,add to reporter mocha instance to get access to original options. i am writing reporter and i need to get access to original options (colors. files and diff) and i am not using base reporter. base reporter also does not contain file list.,neutral
mochajs/mocha,mocha,2014-02-20T08:57:01Z,sorry for bothering. travisjeffery. is it ok?,negative
mochajs/mocha,mocha,2014-02-20T21:29:20Z,there'd be less coupling if instead of passing the mocha instance we passed an options object,neutral
mochajs/mocha,mocha,2014-02-26T17:51:44Z,travisjeffery or visionmedia: any comments on the fate of this or #897? i'd really like to be able to get us off of our private fork. this would also seem to address the gist of #469 .,neutral
mochajs/mocha,mocha,2014-02-26T18:16:16Z,+1 big time - would love this feature,positive
mochajs/mocha,mocha,2014-02-27T01:21:16Z,filename in test object would be quite useful - imagine a large project with thousands of tests. how do you know. from looking at the name of the test suite. which file contains the one that failed?  it may not always be intuitive especially when projects get large with many people working on them.  if the test is asynchronous. the stack trace might not contain the test filename.it would also be very useful for tooling. for example some tools. when a test fails. lets you click on the failed test to take you to that test.  without a test name. it can't implement this.,negative
mochajs/mocha,mocha,2014-03-03T17:07:54Z,jroper :( write little modules and build apps with those!,neutral
mochajs/mocha,karma,2017-05-27T20:05:57Z,the subdir is determined by an env var (see `karma.conf.js`) which is `local` if not run in ci.,neutral
casperjs/casperjs,eslint,2016-04-08T11:38:22Z,jefleponot would you mind addressing the eslint issue i mentioned? i would like to merge this.,neutral
casperjs/casperjs,eslint,2016-04-13T20:48:28Z,rebased setfieldvalue/setfieldvaluename/setfieldvaluelabel functions from #1459". eslint correctionsjefleponot,neutral
casperjs/casperjs,eslint,2016-04-13T21:04:02Z,jefleponot would you mind to use a more explicit label ? something like "rebased setfieldvalue/setfieldvaluename/setfieldvaluelabel functions from #1459",neutral
casperjs/casperjs,eslint,2016-04-14T08:34:49Z,hi mickaelandrieu .i'm quite sorry. i can't manage to keep the same pr number (#1459)and i don't like duplicated code on clientutils.js so i would like to improve that.:racehorse:,negative
casperjs/casperjs,eslint,2016-04-14T16:37:52Z,lol. as you wish bigjuevos - this js file is minify so i had to ignore eslint schedulingcould you help me ? i don't use node.js and npm dependency,negative
casperjs/casperjs,eslint,2016-04-23T11:56:40Z,i would merge this -- bigjuevos could you do a second review and merge it if ok? mickaelandrieu wants this for quite a while...,neutral
casperjs/casperjs,eslint,2016-04-23T12:28:31Z,istr mainly because we have merged docs for this before ... :d this contribution is valuable :+1:,positive
casperjs/casperjs,eslint,2016-04-23T17:28:50Z,i like it.  merging.,positive
casperjs/casperjs,eslint,2016-04-23T18:54:52Z,thanks jefleponot for the work and bigjuevos for merging. :-),positive
casperjs/casperjs,eslint,2016-04-25T09:37:45Z,hi bigjuevos . istr . mickaelandrieu you were too fast for merging. i had to refactor fews functions to simplify them and make them more readable before to go on holiday. but i lacked time.could i commit on the same branch ? or do i have to use another pr ?jef,neutral
casperjs/casperjs,eslint,2016-04-25T10:56:34Z,> do i have to use another pranother pr. please. thank you.,positive
sitespeedio/sitespeed.io,eslint,2016-01-18T05:30:39Z,fixing a few typos and eslint warnings,neutral
sitespeedio/sitespeed.io,eslint,2016-01-22T10:07:46Z,thanks beenanner haven't had time to merge anything. will do it this weekend!,positive
sitespeedio/sitespeed.io,selenium,2016-03-16T04:50:26Z,are we planning to include flow-based testing e.g. start from page1---> page 2 ---> page 5 ---> page 6 .... and also the selenium type signed-en flows --- e..g. i can record my flow using selenium builder.... and pass json to selenium server to test the flow  and site speed capture the performance metrics... let me know how are we planning to cover this...,negative
karma-runner/karma-sauce-launcher,sauce,2015-03-12T08:36:06Z,upgrade sauce-connect-launcher,neutral
karma-runner/karma-sauce-launcher,sauce,2015-03-16T04:49:00Z,+1,neutral
felixrieseberg/ember-electron,eslint,2018-08-30T16:36:01Z,well. those rules are really meant for "ember" code. i.e. code that runs in the browser on top of ember. not code that runs in node on top of `ember-cli`. you'll see that neither `ember-cli` itself nor `ember-exam` use `eslint-plugin-ember`. it might make sense for us to remove that from `ember-electron` since we have very little code that runs in the browser. but regardless i don't think we should be writing our `ember-cli` code in non-idiomatic ways to accomodate eslint rules that weren't really meant to apply to it.,negative
felixrieseberg/ember-electron,eslint,2018-08-30T16:50:44Z,> i think we should either disable the rule using inline comments. or in the overrides section of .eslintrc.js.strong agreement with that. let's cut down anything that makes it harder for you/us to keep this addon alive.,neutral
wix/detox,mocha,2017-12-15T15:27:51Z,i am in the process of making detox work on travis.i constantly get `referenceerror: device is not defined`. like 1 in 10 gets through.i have got that error locally as well. maybe because i'm using jest but not mocha.,negative
wix/detox,mocha,2018-01-02T16:32:45Z,i migrated my tests to use **mocha** and i found that mocha works perfectly. this an expected behavior?,positive
chentsulin/electron-react-boilerplate,mocha,2016-12-02T14:09:51Z,hmm. simply replacing `mocha` with `electron-mocha` didn't solve the issue in test.,neutral
chentsulin/electron-react-boilerplate,eslint,2016-12-12T15:17:31Z,amilajack i really need to learn more about flow. i assume it's basically just making javascript more like typescript. for the benefit of catching typos/code mistakes in the editor.i'm not 100% sure what i'm looking for here. but i see the same warnings from #610 but in the editor. eslint warnings for `flowtype/no-weak-types`. i assume this is what is expected and if so it's working. i am running atom with the recommended packages from the readme.,negative
chentsulin/electron-react-boilerplate,eslint,2016-12-12T18:34:54Z,amilajack if i add `/* eslint flowtype/no-weak-types: 2 */` to the file i get the `error` instead of `warning`.is that the expected behavior?,negative
chentsulin/electron-react-boilerplate,eslint,2016-12-12T18:35:23Z,yea. `/* eslint flowtype/no-weak-types: 1 */` will give you a warning,neutral
chentsulin/electron-react-boilerplate,eslint,2016-12-21T18:26:10Z,added eslint-plugin-compat support. **⚠️ highly experimental. do not merge! ⚠️**,neutral
chentsulin/electron-react-boilerplate,eslint,2016-12-30T08:09:34Z,added eslint cache support,neutral
GoogleCloudPlatform/nodejs-docs-samples,standard,2017-05-10T23:50:01Z,bring storage samples up to standard.. also added a script for cleaning up orphaned test cloud storage buckets.,neutral
mapbox/carmen,eslint,2016-09-19T18:34:07Z,fix reverse address interpolation and use stricter eslint. it will be easiest to review each commit separately. i can split the pr if that helps.- fcdcf75 adds a more eslint rules related to variable definition and deletes a bunch of unused vars- 1f6d3ee makes reverse address interpolation a tiny bit more accurate- 5741c47 fixes a reverse address interpolation bug identified by the stricter eslint rulesingalls can you review at least the last two commits of this?,negative
mapbox/carmen,eslint,2016-09-20T03:34:58Z,ansis can you comment on the bug that this fixes? reading through it looks good but not sure what to look for in relation to the bug.,negative
mapbox/carmen,eslint,2016-09-20T04:25:22Z,sorry. the commit message contains a bit of extra details. i should've note that or copied to the prit fixes reverse address interpolation for features with more than a single geometry in their geometry collections.the `ranges` variable passed to `matchside` used always be the last set of ranges for that feature. `ranges` is was set in the for loop and `matchside` called it with whatever value it was last set to. it now passes the value that corresponds to `potential`.,negative
mapbox/carmen,eslint,2016-09-20T05:19:25Z,fantastic! i'm,positive
mapbox/carmen,eslint,2016-09-21T15:57:27Z,revert "stricter eslint rules". this reverts commit fcdcf757c959a25452e890d191525324e4ce877a.these changes need to be tested more thoroughly before they can be deployed.,neutral
yandex-ui/noscript,mocha,2014-06-08T13:07:08Z,mocha показывала различающиеся куски объектов,neutral
Modernizr/Modernizr,mocha,2016-02-17T10:52:01Z,increase mocha test timeout. as the mocha tests on appveyor failed on many pull requests because of timeouts i increased the timeout for the `mochatest` to 5 seconds.,neutral
Modernizr/Modernizr,mocha,2016-02-17T12:13:25Z,increase mochatest timeout to 5s. as the mocha tests on appveyor failed on many pull requests because of timeouts i increased the timeout for the mochatest to 5 seconds.,neutral
Modernizr/Modernizr,mocha,2016-02-17T14:45:05Z,thanks!,positive
ilios/common,eslint,2019-01-24T23:55:40Z,looks like ember-cli-eslint is no longer a dependency. so this is no longer needed.,neutral
assaf/zombie,standard,2015-04-02T14:08:07Z,add to readme:  memory management. hey assaf.can you provide some standard guidance on memory usage as it related to zombie in the readme?ie. should browser.close() always be called? if it's not called. can it result in memory leaks? maybe also something that mentions node's maximum memory allocation / forcing garbage collection with expose-gc flag. etcthis might reduce some of the memory related issues that are posted here now and then,neutral
assaf/zombie,standard,2015-04-02T16:57:12Z,the thing is. i don't run into memory issues with zombie. this is a task for someone who ran into a memory issue. and has the data to show what worked and what didn't.,neutral
assaf/zombie,standard,2015-04-02T22:24:47Z,gotcha. i'll try to find time to do this.things to experiment with:- calling global.gc(); with `--expose-gc`- calling browser.close()let me know if you have any other suggestions. will spend more time investigating,neutral
assaf/zombie,standard,2015-04-02T23:26:41Z,note that `browser.close()` just closes the current window. i need to deprecate this method. use `browser.window.close()` instead.,neutral
yeoman/generator,mocha,2014-02-11T18:42:28Z,> btw. don't use --silent - that was a bad idea as it would break usual ui with promptscan you elaborate?> better implement a global flag like yeoman_muteyou mean env variable?,negative
yeoman/generator,mocha,2014-02-11T19:07:31Z,i don't like the `--silent` as it cannot be useful for end users.so we'd need either an env variable - or a global. imo. a global is allright and less error prone (no chances someone mute all his yeoman generators by error).,negative
yeoman/generator,mocha,2014-02-26T15:33:44Z,sboudrias from what i can remember from the last meeting. you too don't want globals and it should rather be built into the interface or something. can you expand on that?,neutral
yeoman/generator,mocha,2014-02-26T15:38:46Z,there was a suggestion for `this.mute()` kind of implementation.,neutral
yeoman/generator,mocha,2014-02-26T15:54:18Z,yeah. it might be less error prone to call `this.mute()` and `this.unmute()` method on the generator (or the ui adapter) to manage the mute state.this is more secure as we're sure that no dependency author that we use will one day push an update setting `global.yeoman_mute = true;`.the problem with using a `mute` method though is that it is sometime hard to get a hold of the generator instance as it is almost always used through the environment façade. but it is definitively doable - and should be eventually integrated in the `run-context` testing façade.---anoter solution. maybe we could allow user to provide a stream to write to. so then. you just need to pass a mute stream - but that'd allow you to assert stuff against the outputted string buffer on the dummy stream...,negative
yeoman/generator,mocha,2014-02-26T18:01:06Z,sboudrias as this issue speaks specifically for testing. should we start pawing at `run-context` first?,neutral
yeoman/generator,mocha,2014-02-26T18:27:14Z,hemanth it is about testing. but it relate mostly to the ui adapter module. this is where the work should be done first.,neutral
yeoman/generator,mocha,2014-02-26T18:28:45Z,sboudrias was wondering the same.,neutral
yeoman/generator,mocha,2014-02-26T19:04:30Z,> anoter solution. maybe we could allow user to provide a stream to write to. so then. you just need to pass a mute stream - but that'd allow you to assert stuff against the outputted string buffer on the dummy stream...i like this.,negative
webtorrent/bittorrent-tracker,standard,2016-02-08T02:55:31Z,nice! thanks for coming with a pretty clean way to finally fix #3 (which has been open for almost 2 years!!)my only concern is forcing the use of "extra" for the name of the http/websocket tracker parameter. is this part of a bep or some standard? if not. i'd rather just let the user specify any parameter names that they want. just add the params the user specifies to the params dictionary using the `xtend` package (already in `package.json`)also. this needs documentation in the readme.,positive
vvo/selenium-standalone,selenium,2015-09-20T05:20:03Z,add command"stop"date: fri. 18 sep 2015 05:48:31 -0700from: notificationsgithub.comto: selenium-standalonenoreply.github.comsubject: re: [selenium-standalone] add command 'stop' (#132)alexpts the start command do not goes into background so there's no need for a "stop" you can just ctrl+c to end it.can you precise a little more your usecase or how do you see it.—reply to this email directly or view it on github.,neutral
PolymerElements/paper-tabs,sauce,2016-10-28T22:44:59Z,getting the shop-tabs-overlay equivalent out the door hasn't happened yet and is stalling resolving this pr for no real reason. the tests have failed here because of a lint error in paper-icon (which is  incorrect) but i've manually run this pr through wct in saucelabs and everything checks out. so lgtm.one problem this pr is meant to solve falls under the same stacking-context issue that a lot of other stuff runs into. ('dialogs'. 'pop-up menus') there's not much that can be done about this right now since it relies on lower-level changes to the rendering engine / how css works. with this pr you'll be able to change `overflow` for the two elements in paper-tabs that would prevent elements from being visible outside the bounds of the tabs but scrolling tabs will break as a result. with no platform-level fix in the near term. it's probably best to leave this up to the user with a 'use at your own risk' policy.,negative
nathanboktae/mocha-phantomjs,mocha,2016-07-17T01:43:07Z,>  this project was more an experiment in how it> could work together.don't speak on behalfof this project if your not a contributor. because that is not true at all.`mocha-phantomjs-core` has been supporting phantomjs 2 for a year now and sliders as of recently. the gulp and grunt plugins got switched over too.long term plans are to incorporate the client functionality into core which will then eclipse this project.`mocha-phantomjs` is simpler to setup than karma and gives you full control over the test runner html. but if you want to test other browsers beyond firefox and phantomjs. go with karma.,negative
nathanboktae/mocha-phantomjs,mocha,2016-07-18T16:00:21Z,nathanboktae does that mean this issue doesn't need to stay open anymore?as for my particular usecase. one of our files used es6 syntax functions. i.e.:```...  render() { // should have been "render: function() {" for phantom    ...  }....```but mocha-phantom was only able to state the syntaxerror. not in which file it found it. or the line of code that triggered it; if that's a fixable thing that's probably worth fixing.,negative
nathanboktae/mocha-phantomjs,mocha,2016-07-18T16:17:12Z,i'm using fixable loosely - seeing the line in question and the file it was signalled in is just as good of course. the problem i had was seeing the equivalent of "something went wrong" without any additional information. so if phantom generates more data (file+line number for instance) but mocha-phantom right now doesn't proxy that to the console. that would be quite valueable to fix,negative
linkedin/dustjs-helpers,jasmine,2014-01-23T21:59:52Z,added .npmignore and tested to make sure only necessary things are copied with .npmignore,neutral
linkedin/dustjs-helpers,jasmine,2014-02-10T02:02:41Z,allow debugging unminified source code. update readme.md. there is no clearly defined and documented way to debug unminified dust-helpers.js code. adding this ability with `grunt testclient` task. it is the same approach as in main dust repo (although testclient task uses unminified source file there).additionally coverage report generated by jasmine task was based on minified dust-helper.js file. it was hard to tell which lines were covered. since all of it was just one line. moved out coverage task as a separate task and made it generate report based on unminified source code.added `grunt watch` task to be in line with main dust project and just because it's handy :)also update readme.md to provide instructions on how all of these tasks should be used.with these updates travis build will run unit tests against minified dust helpers code in phantom. node and rhino. it will also run coverage report against unminified source code. if coverage thresholds are not met. build will fail.,negative
tiagoporto/generator-swill-boilerplate,coveralls,2017-10-20T02:13:17Z,add mocha. istanbul and coveralls,neutral
godaddy/javascript,eslint,2018-01-20T05:22:40Z,upgrade of babel-eslint,neutral
godaddy/javascript,eslint,2018-02-13T00:57:32Z,allow new babel-eslint. `babel-eslint7` has a bug that causes a runtime error. installing `babel-eslint8` resolves the issue. but then there's a peerdependency warning due to `eslint-config-godaddy-react-flow`. allow `8`.,negative
marionettejs/backbone.marionette,jasmine,2014-02-17T17:12:41Z,automate performance tests. it'd be great if the performance tests were automated so that performance regressions could be caught prior to being introduced.ideally. the performance tests could be run alongside jasmine. jshint. coverage through either grunt's `test` or `default` task. at the very least. the performance tests should be run in travis on a ci server.the performance tests are currently browser based. but it shouldn't be too hard to write a runner that pumps the html files through phantomjs.catching performance regressions would require comparing the run times of the current changeset with master. on the ci server. it's not hard to have a small script that checkouts master. runs the perf test. applies a patch. runs the perf test. compares the results. and outputs a small junit file. on dev side. that kind of script would be more invasive and require some form of git stashing as well. interested in getting people's thoughts.,positive
marionettejs/backbone.marionette,jasmine,2014-02-20T02:03:15Z,looking into the gruntifle. it seems that all the tests are already run via phantomjs. so one step to implement less.just out of curiosity: do you have any example of some other os project having this kind of perf tests? would love to see how they've done it.,positive
marionettejs/backbone.marionette,jasmine,2014-03-05T18:20:17Z,there's been talk about swapping jasmine for mocha-chai. samccone do you think we should wait to refactor tests until then?,neutral
marionettejs/backbone.marionette,sauce,2017-10-05T17:01:40Z,remove specific throw error. ie throws "object expected" :crying_cat_face:due to travis issues with storing keys we're only running saucelabs on merge and not from a forked source pr.  so unfortunately odd-ball ie errors won't be caught until post merge.,neutral
apache/tinkerpop,standard,2016-02-09T18:25:01Z,i studied `scriptelementfactory` and am thinking that api is poorly designed. here are my concerns:```protected class scriptelementfactory {        private final stargraph graph;        public scriptelementfactory() {            this.graph = stargraph.open();        }        public vertex vertex(final object id) {            return vertex(id. vertex.default_label);        }        public vertex vertex(final object id. final string label) {            final iterator<vertex> vertices = graph.vertices(id);            return vertices.hasnext() ? vertices.next() : graph.addvertex(t.id. id. t.label. label);        }        public edge edge(final vertex out. final vertex in) {            return edge(out. in. edge.default_label);        }        public edge edge(final vertex out. final vertex in. final string label) {            return out.addedge(label. in);        }    }````scriptelementfactory` should be a `graphwrapper` so that the apis are consistent.```scriptgraph.addvertex()scriptvertex.addedge()```its weird that you diverge from the standard pattern for seemingly no reason except the `vertex(id.label)`-method logic.,negative
apache/tinkerpop,standard,2016-02-19T14:34:57Z,i guess we shouldn't have log4j be a standard dependency for `gremlin-core`. given use of slf4j. but i'm not sure making it a test dependency is right.  we package log4j by default in the `gremlin-console` and `gremlin-server`.  maybe those slf4j implementations should be added to those project directly and they are made a test dependency here?,negative
apache/tinkerpop,standard,2016-02-24T19:02:42Z,pluradj that was a nice body of feedback - thanks.  i've cleaned up and added your suggestions.  deploying a fresh snapshot now.okram there really isn't any documentation to "re-publish". i only made one change to our generated asciidoc which added a note about "archetypes" to the reference docs.  the other asciidoc i have in this pr is just readme's that get generated into a example project when the archetype is used. i could see where a tutorial could be built around an archetype. in the more complex thoughts you had for "examples" i think that would be the way to do it.  write a tutorial in our standard pattern then build an archetype to support it.,neutral
wycats/handlebars.js,sauce,2014-12-26T03:39:48Z,thanks for the offer but i think we are better off leaving this on master only at this point. i don't really trust our sauce implementation as we have to restart it for most cases and want to run less on it vs. more.,positive
hoodiehq/hoodie,karma,2014-07-14T08:01:37Z,i've updated karma dependencies on the promise_restored branch already. so whenever we are done with promises we can merge this too. unless you'd want to cherry pick those commits.,positive
cucumber/cucumber-js,mocha,2018-01-08T17:17:50Z,wait for event loop to drain. resolves #889 copied documentation and interface from,neutral
diegomura/react-pdf,standard,2018-07-27T12:25:17Z,klis87 i think those are separate issues. fonts load (you can check repl example). if boxes are rendered in special characters. that means the font you’re picking does not have that unicode glyphs on it. it should fallback to some standard font though. provide an example and i’ll be happy to research,positive
appium/appium,selenium,2015-05-11T17:58:12Z,oh whoops. sorry about that. sometimes my head gets stuck in ios mode.so the solution should be to add retry logic to chromedriver and reset it when things fail?,negative
appium/appium,selenium,2015-05-11T18:04:33Z,ok. thank you. will give it a try.,positive
appium/appium,selenium,2015-05-26T08:18:51Z,i have some doubts with selenium and appium 1、the client java is implements from the selenium java clinet???2、and the appium dirve and the webdrive  .what's the difference,negative
appium/appium,selenium,2015-06-02T04:33:59Z,ok.thank for your help!1.with this all three mode （native_app，webview_me.ele.talaris，webview_com.android.browser）.i would locating element with one way use selenium(import org.openqa.selenium.by;import org.openqa.selenium.webelement;) .ignore it is native_app or h5. am i right?.2.if you have the time.would you help me write the script with my app(just the login text)。,neutral
appium/appium,selenium,2015-06-03T10:47:09Z,so looks like we need to add some retry logic to appium code when chromedriver is crashing.,neutral
appium/appium,selenium,2015-06-03T12:48:00Z,one thing to keep in mind is that the iframe sources do not appear within the parent source. so that kind of make sense to retrieve the source of the current frame. but i agree with jlipps . we should check what selenium is doing and do the same.,negative
appium/appium,selenium,2015-06-03T14:09:25Z,looks like your app doesn't launch on the simulator. this is not a appium issue. try to install the app manually.,neutral
appium/appium,selenium,2015-06-03T16:56:47Z,please provide full server log (in gist). and print a page source before you do the find. thx.,neutral
appium/appium,selenium,2015-06-04T11:15:19Z,any updates multiple ios devices testing.,neutral
appium/appium,selenium,2015-06-04T12:46:57Z,thanks aluedeke i have just tried and succesfully run multiple real devices from a mac. i used to start a virtual node for a real device.i think this was an apple restriction on instruments but now we are free.no more virtual nodes. parallels. virtualbox. if you come to turkey i will buy a coffee for you :) nesaganesh change tmp folder path for every appium.,positive
appium/appium,selenium,2015-06-04T14:20:26Z,suayipozmen thanks for the reply.i have changed in the same way. but this is not the problem i believe.test triggers only for the port number 27753. its not working for 27754 or any  i used 27753 for first device and 27754 for second deviceios_webkit_debug_proxy -c e9d021d7ee90f440ed3e415719e8c2c4202ad7cb:27753ios_webkit_debug_proxy -c 56ac8a0ec68bee56622bf787713578fdbd69a2da:27754please help :-(,negative
appium/appium,selenium,2015-06-04T16:42:59Z,are you using master?have you run `reset.sh --real-safari`?,neutral
appium/appium,selenium,2015-06-08T22:26:20Z,that's really great news. thanks for the update :-),positive
appium/appium,selenium,2015-06-09T18:51:30Z,amazing!!!,positive
appium/appium,selenium,2015-06-09T19:20:16Z,i'd like to second this suggestion.even if we could just feed in a url that appium "opens". since the deep links aren't usually "valid" url's i can't make selenium do this. it complains that it isn't a valid url.,negative
appium/appium,selenium,2015-06-10T06:15:20Z,closing. old issue. no activity (sorry for being so late in responding). may be reopened if needed.,neutral
appium/appium,selenium,2015-06-11T11:12:30Z,i check the context and its native_app but gives the same errororg.openqa.selenium.webdriverexception: not yet implemented. please help us:  (warning: the server did not provide any stacktrace information)command duration or timeout: 8 milliseconds,neutral
appium/appium,selenium,2015-06-11T14:13:05Z,closing. old issue. no activity (and sorry for the late response). may be reopened if needed.,neutral
appium/appium,selenium,2015-06-11T14:34:31Z,closing. no activity. may be reopened if needed.,neutral
appium/appium,sauce,2015-03-19T01:36:14Z,jimberley can you email me at eric  saucelabs.com please? we'd like to have you verify the #4556 fix on sauce.,neutral
appium/appium,sauce,2015-04-09T05:13:37Z,any updates on this issue  or any workaround where in we can achieve running parallel tests on ios using appium.also if anyone can explain how saucelabs or other commercial tools achieve this if it is an os level restriction?,neutral
jashkenas/underscore,coveralls,2016-06-25T16:39:57Z,this coveralls thing is pretty obnoxious. isn't it?,positive
segmentio/analytics.js,sauce,2015-01-17T20:53:55Z,i seem to get 'assertionerror: --user must be given' for sauce tests . have you guys encountered this before?,neutral
segmentio/analytics.js,sauce,2015-01-21T21:04:06Z,yields amillet89 -- can either of you have a look? it seems that travis requires sauce labs credentials for the test to pass.,neutral
facebook/immutable-js,eslint,2017-03-05T09:46:34Z,modernification. - [x] yarn- [x] remove jshint in favor of eslint- [x] prettier- [ ] transpile src with babel- [ ] transpile docs with babel- [ ] remove gulp in favor of npm scripts- [ ] remove grunt in favor of npm scriptssee #742,neutral
facebook/immutable-js,eslint,2017-03-05T09:57:31Z,thank you for signing our contributor license agreement. we can now accept your code for this (and any) facebook open source project. thanks!,positive
facebook/immutable-js,eslint,2017-03-07T05:42:55Z,hey umidbekkarimov thanks for digging into this!#742 is a master task for modernification. it's important for each actual change to be focused and incremental. could you separate this into separate pull requests?,positive
alphagov/govuk_elements,standard,2017-08-08T09:40:25Z,i think this may be a mistake on my part.the example which i thought was a single question isn't our standard format - as it has a heading. some text. and then the legend.the example is probably correct. but we're missing an example of a page-per-thing validation pattern which is likely the *most* common page. i'll raise an issue for that instead.,neutral
babel/babel,mocha,2016-09-29T13:47:21Z,`"test": "mocha --compilers js:babel-register"` works fine so maybe ignore/exclude is still broken,positive
webdriverio/wdio-allure-reporter,mocha,2017-06-22T14:49:23Z,i am considering this feature as "pull-requests are welcome".to be honest. at my work i am mostly using `allure-mocha` package and its api. so i don't have a clear vision. how this api should look like.if anybody wants to have this feature. do not hesitate to submit any code. that shows your expected result. i will help to make the code working.,negative
jshint/jshint,jshint,2014-01-10T21:39:46Z,const is assumed to have function scope. ``` js/* jshint esnext: true */if (confirm("whatever")) {  const foo = 1; alert(foo);} else {  const foo = 2; alert(foo);}```the following warns `const 'foo' has already been declared`. however. in es6 `const` has block scope (like `let`). so this code is correct.,negative
jshint/jshint,jshint,2014-01-10T21:45:02Z,confirm—those are two entirely different `foo` bindings.,neutral
jshint/jshint,jshint,2014-01-12T19:34:09Z,titannano okay. keep the discussion opened to see the point of view of the jshint contributors about the warning.,neutral
jshint/jshint,jshint,2014-01-13T19:46:03Z,option for allowing leading semi-colons. for this common pattern of idiot-code-concatenation-proofing. it would be nice if jshint would forgive the leading semicolon.``` javascript;(function () {  'use strict';  // code goes here})();```,positive
jshint/jshint,jshint,2014-01-17T08:18:18Z,var declaration not recognized with for..in within try..catch. to reproduce. paste the following code to jshint.com:```function main() {  var key;  try {  } catch (e) {    for (key in {}) {    }  }}main();```it shows the warning: "creating global 'for' variable. should be 'for (var key ...'."and reports 'key' as unused variable.,neutral
jshint/jshint,jshint,2014-01-18T21:23:13Z,it does already? i don't see any warnings produced for your snippets on jshint.com.,neutral
jshint/jshint,jshint,2014-01-18T21:34:12Z,oh. that's not a semicolon issue—that's an indentation checking issue. we're dropping styling rules soon so this will go away by itself.,neutral
jshint/jshint,jshint,2014-01-20T04:58:29Z,but jshint supports comments like this: /_jshint unused: false_/ and it's not part of js. too.,positive
jshint/jshint,jshint,2014-01-22T02:38:04Z,make jshintignore treat leading slashes as relative to the current directory. currently. a leading slash in a `.jshintignore` file means that the specific file is an absolute path. this is inconsistent with the behaviour of `.gitignore` files. which treat paths with leading slashes as being relative to the current directory.,negative
jshint/jshint,jshint,2014-01-24T07:55:26Z,to me this is a style thing. i've worked in codebases where the double bang is required. to make it explicit that you're evaluating the truthiness of a non-boolean. if jshint adds a warning. please make it configurable.,neutral
jshint/jshint,jshint,2014-01-25T10:18:54Z,built-in ignore option. instead of `.jshintignore`. why not add `ignore` option to `.jshintrc`?,neutral
jshint/jshint,jshint,2014-01-26T00:31:19Z,this kind of questions should go into our mailing list. this was done to make sure we could match everything inside the `.jshintrc` with `/*jshint ... */` pragmas. and `.jshintignore` is directory-aware which pragmas should not be.,neutral
jshint/jshint,jshint,2014-01-26T00:43:21Z,landed in f349857 (forgot to add issue number),neutral
jshint/jshint,jshint,2014-01-26T00:44:41Z,i don't understand the use case. if you want to use jshint as a library. you can simply do require('jshint'). or you can browserify jshint and use it as a drop-in. cli file uses jshint. not the other way around.,neutral
jshint/jshint,jshint,2014-01-26T10:54:34Z,but why not add `ignore` option? it will require one file less.,neutral
jshint/jshint,jshint,2014-01-28T05:16:40Z,use `.gitignore` file if there is `.jshintignore` file. i'm not sure if you will agree with this change but it makes sense to me...currently. `jshint` will read a gitignore file if explicitly specified (`jshint --exclude .gitignore`). but otherwise will not. i propose that. in the absence of a `.jshintignore` file. a `.gitignore` file should be used by default.,negative
jshint/jshint,jshint,2014-01-28T06:23:27Z,what to do when you don't want jshint to ignore anything but there's a `.gitignore` file and no `.jshintignore`? i don't think this is a good solution for most people.,neutral
jshint/jshint,jshint,2014-01-28T06:50:04Z,in that case. an empty `.jshintignore` would be used. seeing as this is the behaviour of `npm` (" if there's no .npmignore file. but there is a .gitignore file. then npm will ignore the stuff matched by the .gitignore file"). personally i feel that this behaviour is reasonable.,neutral
jshint/jshint,jshint,2014-01-30T23:30:53Z,thanks for that. fixed to match jshint,positive
jshint/jshint,jshint,2014-01-31T22:31:43Z,yield statements within a catch statement should not cause a error. ```function * () {  try {      yield dosomething();    } catch (err) {      yield dosomethingelse();  }}```results in jshint telling me : a yield statement shall be within a generator function (with syntax: `function*`)since both try and catch are inside a generator function this error should not be given.,negative
jshint/jshint,jshint,2014-01-31T22:57:51Z,i'm guessing that's not the entire piece of code? if it is. then it's a syntax error anyway. because it's missing an identifier between \* and (,negative
jshint/jshint,jshint,2014-01-31T22:59:35Z,anyway. confirmed with: ``` jsfunction * gen() {  try {    yield 1;  } catch (err) {    yield 2;  }}```,neutral
jshint/jshint,jshint,2014-01-31T23:26:16Z,sorry obviously i was using sudo code. to demonstrate an actual thing that i do in my code. which works. just gives me jshint errors,negative
jshint/jshint,jshint,2014-02-08T02:35:54Z,command line jshint without node.js. is there any other option. how to get jshint into windows command line without using node.js? is it possible to get jshint.bat and jshint command line environment with all dependencies in simple zip archive or by using git clone? i know. node.js is needed to compile the javascript. but is it needed to run jshint in command line? or could i install and compile it somehow with node.js and then use it without node.js? i actually work on a plugin for one text editor and the plugins for that are based on command line (like compilers). but i don't want users to install node.js to use my plugin. i'm beginner in node.js.,neutral
jshint/jshint,jshint,2014-02-08T19:36:45Z,i like node. but i can't make users of my plugin install node for running the plugin!what's rhino and how to use it? could you share some link?,neutral
jshint/jshint,jshint,2014-02-08T23:02:58Z,you don't want to use rhino. it requires that your users install java. (no disrespect to nschonni. it was a good suggestion until your last reply)there is really nothing you can do to remove the nodejs requirement. short of recoding everything in another language.you're basically asking to run a php file without php installed on your machine. to put it into perspective for you.,neutral
jshint/jshint,jshint,2014-02-08T23:37:50Z,this isn't really the place for asking things like that. though. this is for issues. not for advice on things that don't even relate to the project...try www.stackoverflow.com,positive
jshint/jshint,jshint,2014-02-08T23:41:50Z,sorry. i thought. that jshint has a single binary somewhere just to download. but it hasn't so this is not right place to ask more.,negative
jshint/jshint,jshint,2014-02-09T05:55:34Z,feature request: ignore syntax for compiled output files. _see madskristensen/webessentials2013#638_can you add a way to ignore files based on the existence of a different file with a similar name?we'd like to have a default `.jshintignore` file that will exclude compiled coffeescript or typescript files. for ide scenarios where jshint is run on all files.example syntax (in `.jshintignore`):  (i'm open to better or more flexible ideas)```\exist: $basename.coffee```we need some way to distinguish this kind of rule from a normal matching line (which would continue to be parsed by minimatch); i think a `\` would work well for that.,neutral
jshint/jshint,jshint,2014-02-09T23:09:22Z,this is so specific i think it's better if you write your own wrapper around jshint as a library.,neutral
jshint/jshint,jshint,2014-02-10T03:17:57Z,that's what we're doing now. but we'd prefer to maintain compatibility with other jshint users.i don't think mixed coffeescript/javascript projects are so rare; i think this is a useful general feature to have.,positive
jshint/jshint,jshint,2014-02-10T14:07:22Z,enforce trailing commas on objects and arrays. hey there.our team decided to use always use trailing commas in our code to have smaller diffs.i found material on how to forbid trailing commas. but not on how to enforce them.is this possible with jshint?,neutral
getsentry/sentry,selenium,2017-08-08T01:22:19Z,adding selenium tests for onboarding,neutral
DefinitelyTyped/DefinitelyTyped,standard,2017-05-04T01:53:51Z,i agree that this is bad. let's document how a library can be used. not enforce specific usage.,negative
DefinitelyTyped/DefinitelyTyped,standard,2017-05-04T04:54:08Z,is there a way to make type parameters for `.extend` so typescript knows what class is returned. rather than defining `any` as the return value for `.extend`?,neutral
DefinitelyTyped/DefinitelyTyped,standard,2017-05-04T13:54:31Z,despite decorator syntax is cool. i still think using hoc like connect in a standard way is a better practice.1) it modifies the type of a class a goes against decorator spec.2) connect is not a decorator at all. it's a hoc.3) it breaks the portability of the code by having a different syntax for stateless and stateful components.so i would like to say please. don't provide a definition that allows dev to use it the wrong way :),positive
DefinitelyTyped/DefinitelyTyped,standard,2017-05-05T15:04:08Z,add typings for standard-error and standard-http-error packages,neutral
DefinitelyTyped/DefinitelyTyped,standard,2017-05-05T16:53:18Z,for future reference consider using `dts-gen`:```shnpm install -g dts-gennpm install -g standard-http-errordts-gen --dt --m standard-http-error```,neutral
Cloud-Automation/node-modbus,standard,2018-03-15T08:01:34Z,use standard code style. remember to use standard javascript code style. you can find informations about it [here]( it is super easy and comes with a node.js module. `npm test` should check for violations but that does not seem to work properly as i noticed.,positive
Cloud-Automation/node-modbus,standard,2018-03-16T10:07:10Z,`npm test` is working again. travisci will complain about bad coding styles. you have been warned ;-),negative
