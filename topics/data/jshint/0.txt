['this is fantastic. one less dependency/build system i need to grok. :)', 'could you fix the jshint error? otherwise :+1:', 'added jshint to pretest. issue #51', 'getting there! #217. #218. and #219 are the last bits.', 'ok. all done!', 'travisci jshint', 'thanks. maybe we can add a .jshintrc in the future.', '-1 on trailing whitespace (why would we want that?)indent: does this use tabs or spaces?does jshint allow automatic code formatting?will we run jshint as part of the test suite on travis?', 'good news. `npm test` already recognizes the .jshintrc and runs jshint automagically for us. therefore no extra step needed for travis. it already works!on a side note: i think we should add some more options to jshint. totally overlooked that in this pr. will open up a pr with more options to discuss things.', 'no. travis failed... i pushed a fix for jshint. build is waiting.', "ok. maybe the `src_folders` is not such a great idea. so let's forget about that. i think the exclude is a nice feature to have. however i have still some issues with how it's coded. first of all the `if` lines are very long and could be probably simplified. also they miss the curly braces. in fact jshint should complain about that. secondly. it would be nice if the files and directories could be combined into one array and be specified using glob expressions. like the `--filter` option. there's already a module included which simplified this.what do you think? sorry if i'm being too painstaking here.", 'satisfy jshint rules. just a few last fixes to satisfy rules defined in `.jshintrc` ..~david', 'add sudo:false and fix jshint linting correct file.. - jshint now lints `src/purify.js`- sudo:false flag addded to `travis.yml` for container-based infrastructure', 'tdeekens i usually go for  and `jshint`', 'travisci jshint', 'ah we forgot to add deps to the jshint path', 'jshint the deps folder', "on second thought i'm going to fix the lint errors that apply to this pull and not try to get all of deps to pass jshint as that turned out to be a more massive undertaking", 'and also +1 on merging this prior to doing a silly large jshint commit. (another nit would be spelling error in commit message)sorry i am not merging stuff at the moment. on a boat with crappy wifi', '(#1173) - added linting to deps and plugins. and now the test will also use the jshint script so it will include them properly while testing.this should fix #1173', "don't worry about the plugins. that is going to be living in a different repo very soon. aka #1188", 'oops. that was because i originally used another branch which fixes some cordova issues that occured with the new sqlite plugin commit.', 'now travis passes again :)', "i'm going to merge it in and revert 6affc54 when i do it (and also remove linting of the plugin folder)", 'merged f9922c792e7544710eb28a8d5437bcebc0d3c81c', "missing semicolon. that's what i get for disabling jshint in webstorm. :wink:your debug method works. but now there's another bug in node and one in safari.  i'm on the case!", 'jshint now runs cleanly and can be added to the build process', 'bnmnetp some small last work. and i think most of the work is done on the formatting done.', 'like this! i love travis (not the bike shop owner)!', "great!  i didn't know some of the tricks for ignoring individual lines. or short blocks of lines.i would like to get this merged this week if there are no objections.  we already have the one pr that needs some work that will have to be re-integrated.brad", "ok. rixner and eah13  if i don't hear from you in the next 24 hours. i'm going to go ahead and merge this tomorrow.", "after the fact: merge sounds like a good idea to me!  only thing would be helping open pull requests understand if they'll need to pull from master and resolve any conflicts.  one thing i'll admit: not being a js guy i'm not 100% clear on the linting process. maybe something to document well for new contributors.edit: clarification on request for docs.  obviously the automagical reformatting doesn't need to be documented.  but there are likely some quirks or best practices developers should know.", 'albertjan could you summarize the main style/coding conventions in the contributing.md doc?', "i'm sorry i never contributed to this.  things have been utterly chaotic for me this summer and i am about to leave on vacation.  i am always wary of large numbers of changes and worried that bugs are going to be inadvertently introduced.  but i think this is important and i don't think waiting is going to somehow improve the situation.  so. i say go for it and we move the project forward from here.perhaps there should also be documentation in contributing.md on how to perform the linting process. not just what the style guidelines are?", 'correct jshint issues. small fixes for jshint. so that tests run :)', 'thx', 'fix ch global leak. maybe you should use jshint or smtg to detect globals easily.', "amitapl : there's jshint errors in here. i suspect merging related ones. could you fix ?", 'get jshint and test results out in form that jenkins can build reports on. issue #349', 'paul.please run the test suite (npm test) and fix the jshint errors as well.', 'lgtm ! awesome that we got this!', "add jshint and jscs to travis process. we already have a `.jshintrc`. but no way to programmatically check this file. let's add this script to the travis ci process. also need to add `.jscsrc` and it's corresponding command to travis.", 'add jscsrc. add jscs/jshint to travis build. and fix errors thrown by jshint/jscs.. fixes #142', 'add travis file. travis file is here and for now. just verify jshint.', 'jshint fixes. - use default jshintrc- use `npm run jshint` in travis', 'definitely a good idea :+1:', '"add jshint. ""use strict"". adds jshint and ""use strict"" everywhere (apart from the tests)"', "lemori you have a jshint error that's failing the build:`jsdox.js: line 211. col 19. expected '{' and instead saw 'return'.`single line `if` statements should have the body wrapped in curly braces:`if (foo) { return; }`", 'ohh those semicolons... :) i will mark the day when i submit a pr without any jshint errors :) thanks for merging!', 'nice one. can you ensure this passes jshint please? as the travis ci failed. but otherwise looks great to implement. might be worth throwing a few simple use-cases in the phaser-examples repo too (like your multi-screen one split up into 3?)', "enforce jshint in `npm test`. `npm test` currently runs jscs in addition to running the vows test suite. we should run jshint too. with something like```jshint --exclude 'public/javascript/libs' bin lib public/javascript routes test```the only reason this can't go in immediately is because the above command currently fails.", 'good about eslint is that it is free software (jslint and jshint are non-free).', 'run jshint on travis. easy enough. and makes contributions easier.', 'put xtuple-extensions under jshint', '?????????? ????????????? jshint. ????????????????? ????????????????- camelcase- eqeqeq- immed- indent: 4 (???????????? ?? ?????? ?????? ??????????? ( `(function(){  ... })()  ) ?????? ??????????????- latedef- nonbsp- strict?????????? ????????????????? ?????? ?????? ????????', '???? ???? ??????????. ?? ???? ???? ?????????? ????????????. ?????? ?????? ??????????? )?? ??????????? ???? ???????? ???????????? ?????????????????? ????????????. ???????? ???? ?????? ????????????????.???? ?? ???? ?????????????????????? ??????????????. ????!', '???? ???????? ????????????????.?? ???? ?????????? ???????????? ????????: ?????? ?????? ??????????? ???? ??????????????? `strict`?', 'edoroshenko ??????????. ???? ?? ?????? ?????????? ??-???? strict', '?? ????????????????????? ?? ?????????????????? ??????????????? ???????????? `view_id` ?? `model_id`.', 'lapple ????. ???????? ?????????? :(', '#235 ?????????? ????????????? jshintpr ???? ???????? ????????????????', '?? ???????? ???? ?????????? ?????????? ????????? amd ??????????-???????????? ????????????????????. ?? ???? ??????????????? / ycssjs-???? include-????? ?????? ?????????? ???? ?????????? ?????????? ?????????????? ??????????????????.?? ????????????. ????????? ???????? ?????????? ???????????????????? noscript ?????????? ?????? ?????????????????????????? ?? nodejs.?????? ?????????? ???????????????? ???????????? `module.exports`.???????? ??????????-???? ????????????? ???????? ?????? nodejs-???? `require`indent', '?? ???? ?????????????? ??????????????????. ???????????? ?? ?????? ????????????????????? ?????????????? ?? ?????????????? indent', '?? jscs ???? ?????????? ???????????????? indent ?????????? ???????????', 'jscs ???????????? ???? ???????????????? indent.????? ???????? ???????????????????. ???? ?????????????? ????????????????????.?? - ???? ???????????????????? indent ??????????. ?????? ??????????-???????? ????????????????????', '?? ??????????? ????????????? indent-??. ????????????????.', '?? ???? ???????????????????? indent ??????????.?????????. ???? ?????? ?? ???? ???????????????? ???????? ??????????????', "adding jshint to cover ./lib. fehguy this will conflict slightly with my other pr.  i'll resolve conflicts accordingly.  thanks.", 'cb-8435 enable jshint for ios platform. - created a npm run jshint command & integrate into npm run test- created jshint rules files for spec and rest of the repo- fixed all jshint issues', "the failing test is because your 'end-to-end list validation handles list parameter' test requires ios-sim which is not installed.installation of ios-sim should be added to .travis.yml if this is an important test.", "seems like an artifact. the original design changed and that checkin was supposed to be reverted. i'll take a look", 'the issue is finally resolved -  we can go forward with this pr', "it should be cb-8435 (please edit the pr title). don't worry about the commits. i can edit the commit message when pulling/squashing it in.", 'pulled in (see cb-8435). you can close this issue now', 'thanks!', "what's your `.jshintrc` say for `indentpref`?", "if after else . ``` jsif (x) {    dosomething();} else if (!x + 1) {    alsodosomething();}```will be turned into``` jsif (x) {    dosomething();} else {    if (!x + 1) {        alsodosomething();    }}```i think there should be an option to combine `else`'s with `if`'s jshint doesn't bother me about the first.", 'thanks for the pull request. merged here 7cd4033239084dd61ae1bc6e546d95712ee1edd9', 'minor fixes and updates. - some jshint fixes- dependencies updated- grunt-mrdoc commented due instability of the plugin.', 'looks good.  perhaps we should be adding in a .jshintrc file with the specified jshint rules?  that could be another pr too', 'lholmquist i agree.lance other day commented on the establishment of rules.', 'lholmquist helio-frota +1 and makes sense for another prhelio-frota regarding the mr-doc commented. why not just remove it?', 'abstractj for me is ok. we can think later about the docs.', 'updates and cleanup. - some jshint fixes.- grunt removed.- skeleton of a tape test.- using npm scripts and make.', '"cannot reuse variable in for in loop if it has been used in a function of a previous for in. ```(function () {    /*jshint loopfunc:true */    ""use strict"";    var field.        obj = { a: 1. b:1 };    for(field in obj) {        if (obj.hasownproperty(field)) {            var print = function() {                console.log(field);            };            print();        }    }    for(field in obj) {        if (obj.hasownproperty(field)) {            console.log(field);        }    }})();```if you try to validate this code with jshint. it will generate the following error:```test.js: line 18. col 13. bad for in variable \'field\'.```the reason seems to come from the fact that i use `field` in `print` function. if i remove it jshint does not generate any error.i don\'t see any reason why reusing `field` as for in variable is bad.could it be a bug in jshint?"', 'i with axkibe too. in that i want to error on unused var and globals. but not on unused function parameters.', "this makes sure that `.jshintignore` entries are relative to the file itself. if you want to ignore all files with name. let's say. `wat.js` you just need to put `**/wat.js`. i think everything works as expected here.", 'wsh.js missing. hi.the env folder with the file wsh.js is now missing in the master download.my intent is to integrate jshint in visual studio 2012 express edition by using windows scripting host. the env folder was part of the jshint-master.zip package six month ago. but does not exist anymore.it would be great to include that env folder again.best regards', "i would be in favor of removing the jshintrc and the jshintignore altogether and just having your one config.json. it looks like you can maybe do either a jshintrc or a config.json but i think it's more common practice to just stick to a config.json file.", "look for .jshintrc's in the directory being linted?. given:```lib/  .jshintrc  myfile.jstest/  .jshintrc  mytest.js```i tried```jshint lib test```but neither of my `.jshintrc`s were found. this is expected behavior. i guess. since the readme says it looks in the cwd. still. it's pretty awkward: now i have to do```cd lib && jshint . ; cd ../test && jshint . ; cd ..```and i guess it would be impossible to have nested `.jshintrc`s.any chance on using the closest `.jshintrc` when linting a file? i know that's a pretty big and probably backward-incompatible change though. so if not. i understand.", '"uh. i\'d rather extend the default config to accept pre-directory entries:``` json{    ""global"": { ""strict"": true }.    ""test/**"": { ""strict"": false }}```or something like that. but that\'d be another ticket."', "jshint-next was merged into the main repository - i can't find any related changes.reopen?", "medikoo i was thinking something along the lines of in the config.json file. having a property that took a regexp to define what files you were going to lint.  does this with his own custom brunch-jshint package and i've found it to be extremely useful.", "sirzach regexp is good for defining more abstract patterns (e.g. take only .js files) but it's not that handy for listing specific paths", "+1i was looking for this feature to be abled to build a svn pre-commit hook using 'svnlook cat'.now i will have to write all content to temporary files first.", 'why was this closed? is `let` support not in the plans anymore? and if so. why?', "i'm working on es6 features support but i don't want a ticket for every single feature.", 'awesome. thanks for the quick reply!', "i would love this as well as often when debugging i'll just throw in a return statement but then jshint (run automatically) complains", "build (another?) rhino bundle with debug:false and console shim. rhino doesn't have console api so console.\\* methods fail. the proposal is to build another bundle (jshint-rhino-lib) without the shebang but with debug:false and console api shim.", "here's a use of ! that jshint thinks is confusing. but seems to be the simplest way to go about the problem:```var foo;console.log(foo <= 7. !(foo > 7));// false true```i'd really like to be able to turn confusing ! checking off. but i didn't see  an option for it in the docs.", "don't skip directories when searching for .jshintrc.. instead of moving on to the parent directory when a .jshintrcfile was not found. the cli script was checking the'grandparent' directory. a test was added to demonstrate theissue / prevent regressions.references:    fixes gh-850", "i think there are other reasons to do this rather than multiple .jshintrc files for project (although that would be a nice side-benefit).  as a developer. when i put a .jshintrc file above a .js file in my project. i'm saying that i want that rc file to apply to that js file - where i'm running jshint from isn't really relevant to me. i just want those files checked correctly. without having to worry about the cwd. or more significantly. where my editor is running when it's doing linting. i can't stress how annoying it is to have vim throw a bunch of errors at me. just because i forgot to cd before opening a .js file. then i've got to close it. cd. and re-open it. makes all my nice fuzzyfinder fast open shortcuts kinda useless.if you're willing to reconsider the feature. i'd be happy to put together a patch for this. i did a bit of research. and while looking up a .jshintrc per file is a bit more work. the drawbacks could be minimized by memoizing the .jshintrc file lookup by target path. i think most of the work would come from re-working the config tests.tl;dr: lookup relative to linted file makes life easier. better represents developer intent. & shouldn't add significant overhead to the linting process.", '+1indeed. that demands rather patch for an editor than jshint. it probably should never land. and if such decision was made. it should definitely be an option that is off by default.', "var that = this;. we have the problem that jshint complains about:```line 1: var that = this;'that' is defined but never used```this is completely right ;-). but is there the possibility to disable this check for specific variable names?", "i'd like this too.", "nope. we don't have it. jshint treats all unused variables equally??i suggest writing a custom reporter if you want to skip some warnings but not others.", '"window.eval triggers error even with evil:true. on jshint.com with the code```window.eval(""x=1"");```and ""about eval"" disabled. jshint shows the error""expected an identifier and instead saw \'eval\' (a reserved word)."""']