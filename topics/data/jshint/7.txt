['from my post in gitter:since arguments object is used in only compose and pipe family of functions. i went ahead and added the necessary "fake" argument into function declarations... apparently this breaks the build since jshint doesn\'t like this unused argument :(apparently there is an option to silence this warning: jshint/jshint4ac15f6let me know if you like the pull request and i can fix this problem', "fine with me. i have no great love for jscs or jshint. so if we can use 1 tool. and reduce our conf-file count. then let's.", '(#2586) - add performance-bundle.js to jshintignore. forgot to do this when i moved it to the tests directory.', 'f678c186813bac3b24df61d41b6f47ef5e7a5de0', "oh. i didn't run `jshint lib test/tests examples lifecyclescripts`", 'update .npmignore.. remove the now removed .jshintrc and add .npmignore.', 'goalsmashers: which of the two ways do you prefer?', 'whitelisting is nicer so the `package.json` way seems better. could you merge both commits?', 'done.', 'cool. just to be sure. `package.json` is included by default. right?', '```c:\\users\\xmr\\appdata\\roaming\\npm\\node_modules\\clean-css>dir /bbinhistory.mdindex.jsliblicensenode_modulespackage.jsonreadme.md```', 'fair enough.', 'scalemanager + dom - window constraint updates. scalemanager.windowcontraints now allows specifing \'visual\' or \'layout\' asthe constraint. using the \'layout\' constraint should prevent a mobiledevice from trying to resize the game when zooming.including the the new changes the defaults have been changed to   windowcontraints = { right: \'layout\'. bottom: \'\' }this changes the current scaling behavior as seen in "game scaling" (as itwill only scale for the right edge) but also prevents such scaling fromgoing wonkers in some mobile environtments like the newer android browser.(automatic scroll-to-top. albeit configurable. enabled for non-desktop bydefault is not a fun situation here.)to obtain the current semantics on a desktop the bottom should be changedto \'layout\'; although this will result in different behavior depending onmobile device. to make the sizing also follow mobile zooming they shouldbe changed to \'visual\'.also added temp rectangle re-used for various internal calculations.---phaser.dom now also special-cases desktops to align the layout boundscorrectly (this may disagree with css breakpoints but it aligns the withactual css width). without applying a window height/width expansion asrequired on mobile browsers.(and the jshint error isn\'t mine..)', 'ty for the extra review justin/jon (3 names that start with j in the review btw) i addressed all review comments. jshint passes. i think one of the travis jobs is about to fail due to a flaky datastore test. lmk if you think i can merge anyway. trying to help techwriter get something to point to.', 'i don\'t know is this can ever happen. as the "bad or evil" licence is the original software licence for jslint.', 'interesting.. adding `/* jshint unused:true */` at the top of the file makes the problem go away. same if i put that setting in .jshintrc. docs say that unsued: true is default. so it feels wrong somehow.', "i'd also like to be able to disable the check for trailing unused function arguments.", "this isn't possible without removing all crockford code from jshint. it can definitely happen though.", "i need input from someone who understands legal. (i don't)", "i'm pretty sure goatslacker is correct. you could ask crockford to change his license :)", 'goatslacker where can i find a reference to all the code written by crockford part of this repository?', 'hellais you can run a diff against the first commit to jshint (which would have been where the fork started). to the current head', 'antonkovalyov i think a regular diff will not work either because the code structure has drastically changed. i am looking into a possible way of determining which portions of the code are from the original author.exploring possibilities such as simian or checkstyle', 'btw those are 195 lines of code in a project that has over 9000 lines of code.', "i may have no idea what's going on here. but i can't imagine that jshint rewrote 8800 lines of jslint", "i re-ran simian with a threshold of 2 (this means blocks of fewer similar lines will also be displayed) and i got 708 duplicate lines.dcramer what would you suggest doing regarding refactoring out crockford's code from jshint or getting the license changed?", "hellais i'd suggest talking to a lawyer as i think anything else is likely to be pointing a gun squarely at some feet.", 'the easy answer to this is that we would need to move away from the pratt parser to esprima.', 'douglascrockford why not put that last bit in license instead; "...this software may not be used in the investigation. torture. and murder of patriots who dare to resist tyrants." <- from a shared  form me!', 'douglascrockford have you actually ever tried suing somebody that has used your software for evil?i bet the nsa uses jshint for their javascript projects and i think they are doing quite an amount of evil. it seems like your license has not been very effective at stopping them from doing so though...', 'soxofaan what you said is correct. but i think you missed what orangedog was talking about. yes the jshint output is correct with the options and switches but the checkstyle reporter is not. in orangedog example he (and i for that matter) believe that the error in the xml output should not be there as he has not used the --show-non-errors option. it seems it should either not be present or be something other than a warning. maybe info?', ">  the easy answer to this is that we would need to move away from the pratt parser to esprima.at this point jshint covers more javascript (stable parts of es6. mozilla-specific extensions) and is more fail tolerant than esprima so the switch isn't going to happen in near future.> i bet the nsa uses jshint for their javascript projects:-)", 'hellais did you read his link?>  it is not effective at all. but it at least states my intention.haha', "anyway. i sent an email to douglascrockford asking for an explicit permission to remove that clause from jshint. if he grants one. i'll remove it. if he doesn't. debian people will have to install jshint through npm or do some other workaround.to be honest. i'm getting tired of these not-true-open-source talks. out of all things i need to do with jshint this issue is probably the least important one.", "that maybe indeed nice to have less messages for consecutive same errors. but that would mean adding code only for handling such a case. though. the goal of a static code analyzer being to spot out every mistake an user could do. so when integrated into an editor each semicolon shall be focused. i don't think jshint shall do such factorization of errors. in my opinion. that something that could be done in the reporter or simply by parsing the output.in the end i'd vote for closing this issue.", 'anton. there are other ways to work around this that will allow debian to carry a package containing jshint and without creating extra effort for you.  other developers may also volunteer to help do this work for your project.as an example. if you wanted to. you could request a google summer of code (gsoc0 student in 2014 and the student could refactor this code in a clean way.  debian and other big projects have plenty of experience with schemes like gsoc and as your project is good for all our other javascript you would have a very credible case for this.the first thing that needs to be cleared up is how much code really is common between jshint and jslint?  for example. when you did refactoring. did you copy and paste whole chunks of code from jslint into other source files?  or were the other source files developed independently without using cut-and-paste?  if you did use the cut-and-paste approach. then you need to include the douglascrockford "no evil" terms in the license text of all those other files too and they will all need to credit him as a contributor.if it is only jshint.js. then it may be possible for other people to re-write sections of the file.  as a bare minimum. you may want to avoid making any more changes to that file and do any new code in a separate file. so the new code won\'t be tainted by the "no evil" clause and it will be easier for some volunteer working on it in future as there will be less "no evil" code for them to refactor.the bottom line is that douglascrockford has to decide whether it is genuinely important to him to have his work recognised and have projects like debian and jshint propagate his well-founded concerns about coding style.  the alternative is that people simply act as if his project doesn\'t exist and eventually something will emerge to replace it entirely and his ideas fade away (it has certainly happened to bigger projects. just think about how quickly wordperfect or lotus 123 disappeared)', 'i second this. i switched to jshint specifically because i refused to rewrite 876 .js files when jslint made onevar mandatory.until es6 is available for production use. we need something as a stop gap', "i'm assuming he defines this options inside the gruntfile which is a javascript file.also for valid json he would need to quote the string jshint and options. i just spotted the real error:```'-w038': true;```the semicolon at this point is not allowed. this is a syntax error.", 'this would solve the #1 complaint about jshint-enforcement on the enyo js team.', "if you have a single json file with an extension of `.json` i completely agree with you that you should have double quotes. i don't think jshint claims to be a json validator or something similar.> jshint is a tool that helps to detect errors and potential problems in your javascript code.in javascript it is perfectly valid to use single quotes. as of this i think jshint handles this as expected.", ':+1: would be great to see this feature make its way in. it\'s the one thing jshint keeps bugging me about that i won\'t "fix" ;)', 'btw use a `.jshintignore` file', "thanks for the reply. it was very helpful!  i wonder if antonkovalyov has made any progress with the style module which was hinted at in that request?  is this src/style.js. or something entirely separate?  if the 'module' in question is src/style.js.  i would be more than willing to add this option once i get to know jshint and the expectations of the project a bit better.", "bug?. hi.when testing the jshint.com homepage. the following code triggers a console error```for(;0);a++ ```the error in the console is:uncaught typeerror: cannot read property 'identifier' of undefined", 'this would be very useful for a project i worked on where the customer facing app and admin facing app ended up sharing a .jshint file but used a different list of globals.']