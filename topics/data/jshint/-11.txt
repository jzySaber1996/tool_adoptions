['updated:- remove order tests- fix understandable errors tests- disable jshint noempty for empty block in case of css file', 'fixes jshint errors', "use .jshintignore. so we can just use .jshintignore. and then running jshint outside of npm (like say from editor integrators) gets it right too (tm).i briefly considered adding some generic symlink support along side your `directories` vs not (aka files. because like that's all there is right?) but decided not to.", "raynos can revert this if he really doesn't like it. ;)", 'ia tut kommitil chego-to i travis mne soobshchil. chto mol oshibki.oshibki iz jshint\'a.vot takie:pervaia `[l329:c24] w004: \'i\' is already defined.` v kode tipa takogo:```for (var i = 0; i < 10; i++) {    ...}...for (var i = 0; i < 10; i++) {    ...} ```vtoraia `[l531:c10] w083: don\'t make functions within a loop.` v kode vida:```for (var id in ids) {    (function(value) {        that.on(\'...\'. function() {            //  sdelat\' chto-to s value        });    })( ids[id] );}```obe "oshibki" mne kazhutsia strannymi.formal\'no da. v pervom primere `i` pereopredeliaetsia. potomu chto v js net blochnogo skoupa.no ia predpochitaiu pisat\' imenno tak -- tak poniatnee i logichnee.vtoroi primer voobshche neponiaten. eto zh klassicheskaia problema -- prikhoditsia v tsikle delat\' zamykanie.kak predpolagaetsia eto pisat\'? vynosit\' otdel\'no v imenovannuiu funktsiiu? neudobno.', "da. ia tozhe takie oshibki ignoriruiu.liosha. a travic jshint-om prokhoditsia po kodu?mozhet optsii dobavit'?", "ia tak ponimaiu. chto travis padaet priamo na jshint'e i nikakikh real'nykh testov ne zapuskaet.", "snachala jshint potom testyne schitaiu. chto na jshint mozhno zabit' i pust' pishet kto kak khochet", "optsiei k chemu? continious integration dlia togo i nuzhen. chtoby vse proveriat'rukami ty mozhesh' zapuskat' `grunt mocha` ili `grunt jshint`", "> optsiei k chemu? continious integration dlia togo i nuzhen. chtoby vse proveriat'ia imel vvidu optsii dlia jshint (v `.jshintrc`)", "edoroshenko poprav' code-style po jshint pliz", 'fixes to some jshint uncovered issues', 'thank you. merging.', 'ability to exclude files/folders ?. hi.i can\'t seem to find a way to exclude files/folders when running "fixmyjs"i have tried setting .jshintignore and .fixmyjsignore with no successany pointer?thanksjt', "i thought about adding it to jshint but i don't want to bring this baggage into jshint. so i ended up choosing to deprecate those options and take them out of .jshintrc. instead they'll be passed into fixmyjs as a parameter.the node.js package will use cli arguments instead.i've already implemented this. just have to ship it.", 'it uses `.jshintignore` can you please post a sample .jshintignore which fails for you?', 'thanks will check it out.', 'neither funcscope nor latedef triggered when both violated. run the following code over jshint:```function f() {    "use strict";    console.log(y);    for (var x = 0; x &lt; 10; ++x) {        var y = x * x;    }}```the variable y is used in line 3 before defined in line 5. and out of "scope" of the for loop as well.  somehow neither funcscope and latedef catch it. which is clearly incorrect.  if the use of y is moved to below the loop. jshint catches funcscope.the error is triggered on variable definition. so i think perhaps the problem is that the existing usages of variable are not passed into newly defined function.  i don\'t have the time to trace the code though. so i cannot be sure.', 'gozala jshint now parses the comma operator at some positions... not perfect yet. but maybe it helps a bit', 'closing in favor of jshint-next.', 'we will introduce this in jshint-next.', 'this sounds like a wishlist kind of ticket. goatslacke could you move it to jshint-next please?', "sorry. didn't see the question.because jshint has other option names than jslint. e.g.`/*jslint unparam: true. sub: true. cap: true. on: true. fragment: true*/`", "you're right.  the problem is with komodo's implementation of jshint.  komodo jshint is not honoring latedef set to false.  thanks!", "thanks for not closing the issue it for me but rather asking me to close it.now that you explain it. it makes sense - of course this does not involve jshint itself.not sure why i haven't found the documentation in the first place.", 'ripper234 to make it easier. attach your functions to a single global object (aka a namespace) and just list that one object as a global in your jshint config.  this is also just good practice to try and reduce the chance of naming collisions.', 'based on gh-483 i\'m going to assume you\'re using node-jshint and offer a solution that works for that.why not use a config file? you can set a `.jshintrc` file and specify which globals will be used in your project:```"predef": [  "mysingleton". "mvcframework4". "flowcontrolzjs"]```', "goatslacker - right. i'm using node-jshint. with your proposal. i'll have to declare all my functions this way. it's not practical. we're currently not using a namespace for our own functions. but rather defining them globally.", 'as a workaround. you can use `/*jshint undef: false*/` after `"use strict";`', 'i worked around by editing jshint.js as described aboth. since both are on by default anyway. when user sets the to false he usually does not mean "i only want to surpress this for the non strict mode parts". as you shouldn\'t have much non-strict code anyway.', 'goatslacker i think we have to switch the parser as fast as we can ;) (where style related and "functional" parts are clearly kept apart - and hopefully we find an easy way to separate all the tests from another. too)i also think we should emphasize the so true sentence from crockford: **it will definitely hurt your feelings** (its only purpose is to hurt your feelings)jslint and jshint are no parsers - they should warn if something is known as bad practice (at best with a quick example. why it is bad) - even if it\'s compilable..', 'wolfgangkluge - i\'ll append your statement with "ideally. it should be possible to turn off any specific warnings. using a global config file".it\'s ok that jshint/lint "hurt my feelings". but i should be able to control it.']