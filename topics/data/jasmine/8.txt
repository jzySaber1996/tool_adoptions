["i doubt the lib would work as is. so there'd be some code that would need writing. i wouldn't use this. if someone wants to actually submit a pr. i'd take a look.", "referenceerror: jasmine is not defined. ```at node_modules/frisby/lib/frisby.js:1117:1```which is```jasmine.matchers.prototype.tomatchorbenull = function(expected) {```it seems. if frisby depends on jasmin. it should `var jasmin = require('jasmin-node');` itself? or the documentation should indicate the need to issue some such statement prior to `var frisby = require('frisby');`?", 'will be good to have this after and before', 'mschroering the issue still persists. i guess it has to more with jasmine-node than frisby.', 'you can use the jasmine command line option --config name value and its accessible in  the code using the process.env.<name>', 'that definitely works. i would prefer a way to not have to wrap all of my frisby test in external jasmine wrappers. but your solution seems to work.thanks dguerrier', 'frisby.js is designed to be run with `jasmine-node`. which will ensure that jasmine is included.', 'protractor. after 20 clicks have a  async callback error. i need to wait until the item will be \'completed\' statusthere is my \'it\'it(" should be competed generated report". function(){        let refreshbutton = element(by.buttontext(\'refresh\'));        let queuedstatus = element.all(by.csscontainingtext(\'.ui-grid-cell-contents.ng-binding.ng-scope.ng-isolate-scope\'.\'queued\')).get(0);        let generatingstatus = element.all(by.csscontainingtext(\'.ui-grid-cell-contents.ng-binding.ng-scope.ng-isolate-scope\'.\'generating\')).get(0);        function waitgoodstatus(promise) {            refreshbutton.click();            browser.params.wait(element(by.css(\'.ui-grid\')));            promise.ispresent().then(function(result){                if (result){                    waitgoodstatus(promise);                }else {                    waitgoodstatus(generatingstatus);                }         }).catch(function(er){                    waitgoodstatus(generatingstatus);            }            )        }        waitgoodstatus(queuedstatus);    })it works. but after 20 clicks i have such error - error: timeout - async callback was not invoked within timeout specified by jasmine.default_timeout_interval.set defaulttimeoutinterval is not helpedany suggestions?', "thanks juliemr . but i've already specify jasmine.defaulttimeoutintervaland you can find it in my previous postjasminenodeopts: {        defaulttimeoutinterval: 30000.         print: function() {}    }it would be good if you give me a link where i can post  my issue", 'deps(update): move types/jasmine to devdependencies. - update outdated dependencies- move types/jasmine to devdependenciescloses #3792', 'cnishina any idea. when this will be released?', 'borntraegermarc today sometime', "this is actually how jasmine shows errors. i'm closing this issue.", 'test: from jasmine to jest', "wait for the dom to be ready. i am using some libraries that require the dom to be loaded and ready before the tests are run. is there any way to specify that in the template? or if you all know a better way. i'm open for ideas. typically in my jasmine runner file i just wrap my function in a $(function () {}) call from jquery.  any suggestions would be great. thanks!", "some libraries wihich depend on dom to be ready should be loaded as dependencies of your actual amd module. because they are just dependencies. you should control whatever dependencies that will be loaded and how to load them. it has nothing to with this template.if those libraries need to be loaded unitil dom ready. you have to explicitly contorl it since that's code logic.hope that does work for you.", "oy that's not fun. thanks for providing a detailed diagnosis; that's very helpful. any chance you could produce a fiddle showing the error so i can copy and paste it into a test case? (or a failing jasmine test case. but i know that's a lot to ask.)"]