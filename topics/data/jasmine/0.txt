['"testing done:- a bunch of jasmine tests- live article updates with ""serve"" workflow- round trip to aemmobile.adobe.com for android and ios- android only tested on emulator. not device"', 'its this branch. the pull request branch. what ever you push to it will be available for merging. sure take your time. look at the existing tests and the jasmine documentation.', "looks like a good start. but i think supporting paranoia might be needed. to keep the api consistent.also i think that sdepold might appreciate if you could move the tests to buster instead of jasmine (since we're gradually moving away from jasmine)", "janmeier - er yeah. there should have been some code to go with the test. now included! ... it's only for mysql because:- _postgres_ does not support defining a comment when defining a field (it requires a seperate `comment` query) .. i know  nothing about postgres and only a little more about sequelize - so it's beyond me to implement this for postgres- _sqlite_ does not support comments at all (although it does preserve comments in the actual sql ddl ... so that might be something to consider ... but i'm not sure whether sequelize and/or the underlying sqlite lib support inline sql comments in [raw] queries)with regard to 'moving' the tests to buster ... no. i have no idea what the buster syntax is and there are no tests currently for the mysql connector's dao-factory (or any other dao-factory for that matter) that i can use as a reference for rewriting the jasmine test ... sorry. if you can help point me in the right direction in this regard i might be persuaded to have a go at rewriting the test (to be honest though given the number of tests that need to be ported to buster it seems a better idea to tackle that in a seperate pr).", "i would need help with moving the tests ... i have no experience with buster and only manage to get by with jasmine because there are plenty of tests i could use as examples ... im hoping that having jasmine tests rather than buster ones would not be a reason to not merge.i will change the 'optimize' option to 'truncate'  - although i very much doubt that in general delete from is faster than truncate (but then again no doubt there are specific situations where that is the case).i will also have a go implementing a 'respect-the-paranoia' options at the daofactory (is that the right name for it?) level", 'paranoid related functionality now working. includes [jasmine] tests', "allow running of [jasmine] tests against mysql instance .... ... that is either not local or requires connection via a socket. the pr makes it possible to set the 'port' option to a socket path and have the jasmine tests work (i.e. the mysql 'port' and 'host' options in `spec-jasmine/config/config` are now honored)", 'the travis-ci failure is on a postgres buster-test. note that this pr only makes changes to mysql specific _jasmine_ tests ... i cannot for the life of me grok how my changes could affect the buster-tests at all.', 'well. travis just sometimes decides to have a fit. often with the migration tests. looks good. i say go ahead and merge mickhansen sdepold', '"mergeddunno if someone already bid you welcome aboard iamjochem . but if not. i\'ll go ahead and do so right now - ""welcome"" - nice to have another contributor on board. feel free to join us on irc. #sequelizejsfreenode"', "hi janmeier thanks ... and thanks. it a nice feeling to have pr merged :) even if it's a small one. i hope that i contribute something. i am by no means a js ninja and a bit of a nodejs noob at that but nothing ventured nothing gained hey!", 'fixes jasmine tests for abrcontroller and updates minified files', "running a single test. is there a way to make frisby run only a single test. i would like to run an isolated test when debugging a specific error. something like. ``` javascriptfrisby.create.only('foo') // followed by the chain and toss.```i'm not terribly familiar with the jasmine layer underneath. would this be possible with frisby/jasmine?thanks for this project. the json matchers in particular are well thought out and very handy!", 'as far as i know. there is no easy way to do this with the `jasmine-node` test runner and frisby.js. but it is something i too have always wanted.', 'is there anything in jasmine 2 that supports this? i will have to upgrade eventually anyways.', 'okay. are we going to have to switch test runners away from `jasmine-node` as well to make this work?', "vlucas no. `jasmine-node` works fine with `jasmine-only`. from frisby's pov an extra `jasmine-only` dependency needs to be added to `package.json` to support this feature. frisby could require `jasmine-only` within itself. so any test can use `describe.only` and `it.only` without manually requiring it in every test.the issue is frisby's dynamic `describe` and `it` declarations which need to be modified to conditionally use the `only` variants. my suggestion above was to do this via `toss('only')`", "right. that sounds like something that can be easily handled though. the dynamic creation of `describe` and `it` statements doesn't happen until the `toss` call. so yes - that would be the ideal place to put it.", 'i develop on osx with an editor and shell in full screen mode. whenever i invoke protractor osx moves my desktop away from my dev layout to the newly opened browser instance. i then have to cmd-tab back. by the 200th time this gets pretty old! admittedly this is more of a developer experience thing than a technical issue. but being able to have protractor just reuse the same browser all the time would help.', "there is a test in jasmine documentation exactly doing that.so it's a bug...", 'llafuente could you copy and paste and reference this? i did not see anything on the jasmine documentation page that shows this. i also agree that you should open an issue with jasmine if you believe this should work.', "hi all. juliemr is it possible to run a single test or group of tests (not complete file)  in protactor from command line ?i tried using --grep option . but it is not working . note : using  framework: 'jasmine2'", "sumittech17 hi. i don't know if that would help - i mark tests that i want to run in a file with - fdescribe or fit  - this skips all tests except marked. then you could run your protractor with  --specs mydir/mytestfile.js it works for me. but makes you keep eye on to not commit fit or fdescribe to repo.", '"xotabu4 this is working for me now .protractor --specs=\'tests/e2e/login.js\' --grep=""singlelogintest""however i am not able to add grep option in gruntfile now ."', 'u mean to increase defaulttimeoutinterval of jasminenodeopts', 'created a jasmine setup with grunt tasks for tests and coverage. pr follows.', 'add multisig. ### added- multisig functionality to governance.sol- rmmakeorders simple price deviation check- script for initialising and funding predefined accounts for tests- parity genesis config file for dev chain### changed- deploy scripts from web3 to parity.js- jasmine tests from web3 to parity.js- readme instructions to reflect latest deploy and testing steps### deprecated- web3 dependance in deploy scripts and jasmine tests### fixed- governance test bug', 'looks goodneeds setting file for parity node and ideally some updated instruction to readme.md on how to start test env w new parity dev node', 'nice', 'readded gas price checks to tests. ### added- doxity docs- added fallback function to governance.sol- added requirement for signature in setupfund- added solidity tests for version contract### changed- improved natspecs comments- parity devchain genesis file### fixed- gas price checks in jasmine tests- bugs in jasmine tests', 'looks good - just this above return statements - to have it visualised in doxity docs', 'pull in jasmine fixes and gitignore', '"fix to make test cases pass in grunt jasmine. i\'m not sure of the reason.seems that when running under grunt jasmine. the default locale will have problem.the 4 failed test cases can pass after putting in the necessary settings to default the locale to ""en""."', 'wyuenho will you like to have jshint to be run in the grunt task?', 'i took a look at the grunt-tasks branch.if the lib folder is removed. where will a normal user go and download the js and css which they like to use?', 'btw. can you move your travis-ci related changes to a separate branch and file a separate pr from there? thanks!', 'er any reason for seperating the travis-ci and grunt tasks changes? currently both of them are on the grunt-tasks branch which is different from the master branch ...', 'the same reason you make commit using different commit messages. enabling travis doesnt have much to do with fixing tests.sent from my iphoneon 24 jun. 2013. at 9:07 am. mallim notificationsgithub.com wrote:> er any reason for seperating the travis-ci and grunt tasks changes? currently both of them are on the grunt-tasks branch which is different from the master branch ...> > ??> reply to this email directly or view it on github.', "sorry about that...that's because i ran the grunt file...by the way. i couldn't run with jasmine (always i got a phatomjs ins't installed error..but it is!)...i'll reopen the push request. with only the file ok?", "initial implementation of directives; include implemented.. i've started work on the directives. i've got the first bit done (having the compiler recognize directives) and implemented include. i figure it's better to do this in pieces as #50 is a bit large.the implementation works nicely (at least in my testing) for placement in global as well as amd (it could work for standalone too but i can add that after that pr is merged i suppose).i attempted to follow your existing conventions around the code base when adding directives; let me know where the implementation could be improved. etc.---also... i couldn't figure out how to get jasmine to unit test the include directive as two templates need to be compiled and one rendered and your testing harness only allows for one and one. should i add more specs or do you have another idea?", 'thanks a lot for the initial implementation. i just returned from holidays and will try it within the next few days and have also a look on possible testing strategies for cases where multiple templates are involved.', "fyi. i didn't forget this. i'm just feeling sick and i'm not able to dig into this right now.", 'netzpirat take your time. hope you feel better soon.', "just extended the spec suite to setup globally placed partials. which makes integration tests for the `+include` directive possible. i didn't do it for the amd placement. mainly because i'm short on time and don't want to spend to much time on stuff i don't need personally. i've added you as contributor. so you can directly push to master if you want to contribute more time and features to haml-coffee. thanks a lot!", ':cake:', 'nami-doc i added you also as contributor. i try to follow an open commit bit policy on my repositories like jfirebaugh', 'not sure why but thanks i suppose :p', "nami-doc because you've made a pull request that was accepted.", '"ljieyao have you tried to remove `es6-promise` from`""types"": [      ""jasmine"".""es6-promise""    ]`?"', 'adds tokenizer for the dutch language.. adds a tokenizer adhering to the use of a single quote for the dutch language. (used in some plural forms. and also when shortening older words like des).i was unable to get jasmine running a test. but added a test for the tokeniser blindly. it should pass. as testing in a regular script works.will be adding more dutch language related work soon.', 'merged. tests ran fine. thanks for including them!', 'pfiller thanks for the merge clean-up; couldn??t see this pr when it was opened yesterday since github was all ddos-y yesterday. also thanks to lenniboy for the original jasmines! :heart_decoration:', 'use ava as test runner. **please check if the pr fulfills these requirements**- [x] tests for the changes have been added (for bug fixes / features)**what kind of change does this pr introduce?** (bug fix. feature. docs update. ...)- [ ] bugfix- [ ] feature- [ ] code style update (formatting. local variables)- [ ] refactoring (no functional changes. no api changes)- [x] build related changes- [ ] ci related changes- [ ] other... please describe:**what is the current behavior?** (you can also link to an open issue here)jasmine tests**what is the new behavior?**ava tests**does this pr introduce a breaking change?**- [ ] yes- [x] no', "i have some reasons right now to think that this might only be a problem if you use npm. i'm testing right now.", 'nevermind i tried this brew installed node and i still had the same errors about launching phantomjs. someone tested this on master and told me they had no problems though. so i would love to hear from others!', 'sorry been a busy week. i will look into this now.wavded can you supply the tests in the jasmine format please it makes it much easier for me to implementthanks', 'hi wavded. currently mockgoose does not support references. this one might take me a while as i will need to look up the api first.also can you write the tests in jasmine. that will help me look into these a bit quicker.thanks', 'for my dev process. i have been using `grunt jasmine-server` which i had aliased in to the `npm start` command. it looks like `jasmine-server` is no longer a task. though. is this gone? or is something just missing from the gruntfile. or configuration of the project?', "`options.host` tells phantom what server to connect to. to run the tests. it doesn't start a jasmine web server. i just tried setting that and phantom times out because there's no server to connect to.i would really like to keep the jasmine web server. i prefer this over command line test runners. it's easier for me to see and work with the browser. and it allows me to run the tests against any browser i need instead of being limited to phantom.", "agreed. it's a bit cumbersome... but we use the `jasmine:<task_name>:build` command to tell it to keep the _specrunner.html file around. and serve it up through a `connect` task to replicate the jasmine-server functionality.", "good catch! and thank you for the fiddle. it made a perfect jasmine spec for me :)i had to re-write the suggested fix. though. there were some edge cases that your fix didn't quite catch. this fix is in the dev branch", "cobbweb i would love to get a spec for that... that is what i was trying to do. but couldn't figure out how to test it properly.the intent of dom refresh was to say that this view is in the dom. and it is being re-rendered / refreshed. this is supposed to give us a way to update the dom with confidence... i'm seeing several people report issues around this. though. and i would really like to find a way to test this in the jasmine specs. properly", "it must be something weird with jasmine. ugh. the exit listener isn't even being called.", "domenic glad to get that back up and running. i just took over development on jasmine-node. sorry for the pain. my intention to never be backwards incompatible. if possible. if there's some things you guys would like/ideas you have to make what you're doing easier please drop an issue on the project. thanks.", 'tests fail when grunt-contrib-jasmine is upgraded. no idea why. this is a issue to take a look and fix though. when someone has time', 'fix for #52 - change contexts temp value according jasmine script sources. this should fix the issue when a wrong path to require.js lib is usedwhen jasmines outfile option is specified.', 'thanks for you attention and pr.because this template has no idea of where the location of spec runner is. which depends on exporting of `grunt-contrib-jasmine`. i have sent pr to request needed information by `grunt-contrib-jasmine`. we can proceed as long as that pr is accepted.', "yes. you're right. doing it this way would be a better approach!but when it's added into the `grunt-contrib-jasmine` task. we have to keep in mind to calculate the relative path to the `gruntfile.js` where the `.grunt`directory will be located.will the temporary `.grunt` directory always be in the same location as the `gruntfile.js`? so it's possible to simply use `__dirname` to calculate the correct relative location?", "`__dirname` doesn't work for that. it always returns `node_modules/grunt-template-jasmine-requirejs/src` which doesn't help.what we only need to calculate is that the relative path of `require.js` file to `spec_runner.html`.the location of `.grunt` folder doesn't matter i think.", "ok. thanks for the clarification. i've downgraded the host package and it's working again. i'll close this issue. as grunt-contrib-jasmine is causing the conflict", 'all source files. spec files. vendor files and so on come from host grunt task `grunt-contrib-jasmine`.ignore files feature should not be implemented by this template. send pr to host package.', 'fix jasmine problem. jasmine reporters broke and jasmine has yet to fix it. implemented workaround to fix tests.', 'snipe you should be good now.', 'removed guard in favor of grunt-contrib-watch. also improved watch tasks. this removes all gem dependencies.`grunt watch:scripts` watches for source changes and rebuilds dc.js. etc.`grunt watch:tests` runs the tests whenever test files are modified.`grunt watch:jasmine_runner` updates the jasmine_runner.html file whenever jasmine tests are modified.`grunt watch:reload` should be equivalent to guard livereload.', 'closing - we will be deprecating vows and moving to jasmine', "we also should figure out how to move these tests to jasmine. although i'd still like to keep them using jsdom rather than phantom so we'll have exact output.", 'working on it. seems like that branch was merged into the official grunt-contrib-jasmine.', "now merges cleanly and fixes grunt-contrib-jasmine. i'm also submitting a separate pull request with the grunt-contrib-jasmine fix so you don't have to review all of this before travis will pass for everyone else.", 'fixed grunt-contrib-jasmine to point to existing branch']