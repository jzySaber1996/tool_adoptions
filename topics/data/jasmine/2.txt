["just curious. what's the present eta on this?  i have a zepto-based project that i'm currently having to do some ugly hacks to get working with jasmine-jquery.  i'd love to see _official_ zepto support at some point! :smile:", 'i updated the jasmine spec for postgres and tried running it with "npm run test-jasmine" but i don\'t get any test results from jasmin. except for a warning "[...]possible eventemitter memory leak detected[...]".i commited the test update to my fork.', 'fix(jasmine): support "pending" `it` clauses with no test body', 'just ran into this issue today. would love to use it. any idea on the timeline for the next release cut?', 'after revert. the types/jasmine still report error. i will just close this one for now.', 'my main comment is :i think it\'s worth to describe side-effect of `_proxy` hack in readme. if user object contains `_proxy` property it will not get recursively proxified.maybe we could advertise it as a feature?rename it to `_dontproxify` so we will ~"set" it in a getter during recursive proxification. but users may set a real property to block proxification/observing on some level?i\'ll like to do another round of review once you are done with this.', 'tomalec your reviews are always on point. will fix these today for sure.', "tomalec could you look at this please? i'm desperate for work.", 'other than- `_isproxified` vs. `_dontproxify`- `jsonpatchproxy` vs.  `jsonobserver`i have no other comments.lgtm', "remove sinon and add few unit tests to increase test coverage. - following up on #140 and replacing sinon with jasmine's native spyon.- adding few unit tests to bump up test coverage.- few small clean up items:  renaming orientation to placement and removing private getwindowwidth function that is not used anywhere.", 'updating jshint and removing jasmine tests. removed jasmine testsamending jshint settingsalready setup on my local so not sure if these are all the steps...in irisjs root:`npm install --only=dev``npm install -g grunt-cli``grunt jshint`', "obiot please remove the plugin test from the grunt config. it's broken because there is a bug in phantomjs. see previous discussion in this ticket for details.i was asking you to try the test in a _browser_ ... not in broken phantomjs (grunt-contrib-jasmine)", 'require documentation for protractor with jasmine/cucumber. hi there!i wanted to create a testing framework with jasmine and cucumber. can you please let m know if you have any documentation link. that would really be a greate.thanks somesh', 'i can\'t run my test cases if i changed the framwork from "jasmine" to "jasmine2" in the conf filethis issue doesn\'t recreate in my local machine only when i run it on linux by jenkins.can you please help me to enlarge the screensize to maximum (or to simulate a widescreen) ? thanks.', 'xotabu4 thank you so much ... that worked for me !!!!', "it looks good! i found the `wascalled` in the jasmine-node source code. api is a bit diff.you should be able to merge pr's now. let me know if you can't.", "yes. parallelisation is a big plus for ava. do you know if the expectation syntax is compatible with jasmine/jest? would be great to share and reuse some expectation across projects. it's also helpful to use similar tools along the way.", "improve documentation around requestsmade() promise. i wanted to do a partial response assertion to a request. it took a little bit of digging but eventually realised that requestsmade() returns a promise.here's the initial behaviour i expected:``` javascriptexpect(require('protractor-http-mock').requestsmade()[0].data)  .toequal(jasmine.objectcontaining({      token: 'abc'    });```and the actual behaviour``` javascriptrequire('protractor-http-mock').requestsmade().then(function(requests){  expect(requests[0].data)    .toequal(jasmine.objectcontaining({      token: 'abc'    });});```the second attempt is the correct way. as provided by protractor-http-mock.. but this isn't clear in the documentation. if this is correct. i'll try and open a pr for it today.", 'update grunt-contrib-jasmine dependency. fixes #93', 'thanks arnaugm . i went ahead and did a full library update that was way overdue. thanks!', 'done! eddie .', "just to prevent anyone doing a bunch of work that we end up being unable to merge.  please keep us in the loop in terms of exactly what you would like to do.  i have a bit of a roadmap laid out in my head and i'd be happy to expand on it if you really are interested in undertaking this.  switching our source code to es6 is trivial. but there are lots of gotchas the moment you are done step 1 (build. jasmine. module loading. backwards compatibility. node. etc...)", "cool stuff.  hmm. it looks like the data table tests haven't been ported to jasmine yet.  i'll post back if i do that.i'd particularly want to see expected failure tests. since parsing template strings can get messy.", "i'm merging this.  i upgraded it to use jasmine.clock() as the other specs now do. and also to explicitly check the x domain of the chart before and after un-brushing.thanks matthull!", "'forceexit: true' prevents further grunt tasks from running. i assume 'forceexit: true' is meant to stop the script only if there is an exception. however. even when i get no errors and my grunt tasks seem to be running correctly. no further tasks are running after my 'jasmine_node' target. i'm just trying to run 'grunt-contrib-clean' after it. sounds like an async 'done()' not getting called somewhere. if i leave 'forceexit' as false. it runs as expected.", "shouldn't it only force exit if there is a fail of some kind - 'exitcode = 1'?", 'that is correct.would you like to make a pr for this?', "i'll take a look at it this weekend.", 'great!', 'guys. any updates on this issue?', 'yep. just did a pull request. sorry for taking so long.', "the functionality doesn't change for 'forceexit' option (just a bug fix). so the existing readme.md is fine as is. the root gruntfile's task 'example-task' does have a description on it in the 2nd parameter 'an example task to prove that jasmine_node only applies `forceexit` when there is an error'. i thought that would be sufficient.", 'fix merged in dbec1106b0f1a1f5b7dc074a28b5a6e7bf189ec1', 'working now. thanks a lot!']