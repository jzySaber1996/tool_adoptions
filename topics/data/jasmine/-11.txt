['juliemr are there any patterns for waiting. ex: in `specdone`?', 'for now i ended up using:``` jsafterall(function(done){    process.nexttick(done);});```', "please tell me how can i set default timeout for browser.wait function?i have in my conf.jsjasminenodeopts: {    defaulttimeoutinterval: 50000  }but it don't affect browser.wait function", "this is not possible with the plugin framework. the problem is that plugins are agnostic to the test framework being used. so they do not emit test results in a way specific to jasmine-reporters.you can get all test and plugin results in json format using `resultjsonoutputfile` in the config. i'd suggest doing that. and then processing it in any way you need.", 'tokunbo eddywashere the problem with that hack is that it looks like a noop. if i saw that in a code base i was working on without any surrounding context. i would rip it out.', 'the latest commit from this ticket seems to be on production. but the url goes to 404 now.', 'use a jasmine reporter.', 'oh. sorry. i was thinking that it would be straight forward to install a custom jasmine reporter. so no new feature was needed.  now i see that i was wrong.', 'yes i am using jasmine only step 1 is example i mentioned here. i am thinking is there any way protractor can extend functionality to identify the failure based on annotation like step instead of parsing stacktrace . then identify the line number then find corresponding step for that failure like number', "have you examined the generated specrunner? use `grunt jasmine:[your task name]:build` to retain your specrunner and post it here if necessary. that requireconfig is just json stringified and that doesn't look like it would break.", "specrunner ends up loading jasmine-helper.js before successfully loading all the scripts (specs). i encountered an issue where jasmine-helper.js gets loaded into dom before successfully loading all the specs files. as a result. no specs are found/ executed.**to reproduce:**include a dependency bigger in size in one of the spec file or source javascript file. in my case. i have a dependency on knockout.js (~40k in size) in my source file and as a result 9 out of 10 times jasmine doesn't find/execute any of the specs. **cause:**nested require calls don't guarantee any order in loading of dependencies. hence.  inner require (for scripts.start file in template) statement gets executed before all the dependencies in outer require call are successfully loaded into dom.**fix:**wrap the inner require call with requirejs:domready plugin to ensure that dom is in ready state!"]