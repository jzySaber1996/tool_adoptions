["shenst1 i can't get them to play nicely. as travisjeffery mentioned. there are a few differences. so until those are resolved/accounted for. they probably won't work together properly.", 'travisjeffery oh man. i just noticed this is a pr not an issue. i have not tested/run my code against your changes. i was running everything against the latest release. please ignore my concerns as they probably are accounted for already.', 'update jasmine-jquery.js. with this the tests will pass with jquery 2', 'the tests do not specify if the order of the elements in the jquery object matter in terms of two objects being equal. from experimenting it seems that that two objects with the same elements in a different order are considered equal. my concern is the implementation defers to the behaviour of the `is` function on the jquery object which also does not appear to define its behaviour in relation to the order of elements. and therefore could change and break tests relying on this behaviour.should a test be written to make this explicit?', "jasmine-jquery matchers don't working when jasmine-jquery is loaded using require. if you use the jasmine gem and then require(['jasmine-jquery']). the addmatchers function that is added to the list of beforefns (using beforeeach)  never gets called. and the matchers are not made available to the expectation object.", 'also getting this.', 'indeed. if i load jasmine-jquery via require.js. it works. sorry i did not think of doing that at first.', "fixed how jasmine gets loaded through jasmine gem. this still doesn't fix the problem. but it appropriately loads dependencies based on availability", 'that code would certainly not work. but this is closer: #175', 'yeah jasmine-jquery v2+ works with jasmine v2+ only', "closing this then. there's no issue with jasmine-jquery. you're using the wrong jasmine/jasmine-jquery combo.", "since jasmine-jquery v2 + jasmine v2 it's toequal. jasmine v2 doesn't support overriding built-in matchers", 'this issue turned out to be caused by the element sticking around since it was not managed by jasmine-jquery fixtures. for some reason i thought my testrunner was resetting the dom after each test but it was not and this has revealed some other issues as well.now i do `setfixtures(element);` and manually clean up other stuff before each run.', "bah inaccurate jasmine tests :/ nothing major. i'll probably end up re-writing jasmine before this pr actually gets submitted.", "i'll let you know once i reintegrate this with the new buster tests.. i think jasmine was the fuck up here.", 'would be upto doing a pr to fix the jasmine?', 'running tests in multiple files sequentially. assuming the following test files and their corresponding requests:```testa.spec.js -> request1->after(request2)testb.spec.js -> request3testc.spec.js -> request4```when i run `jasmine-node` in this directory. they are executed in the following order:```request1request3request4request2```which obviously is not what i want. since each "top level request" loads a fixture into the database. it is impossible to do any first-this-then-that kind of tests.i believe i ran into a similar issue with jasmine before. so i\'m assuming the problem isn\'t necessarily with frisby. but maybe you can give some advice as to how this can be solved?issue #13 references a similar problem. but as i understand it the proposed solution with \x7f`after` doesn\'t work for tests spread across multiple files.any ideas?', 'nicktomlin is there a link to the feature request you put in for this?', "protractor. jasmine : how to print current page url on console. my requirement is to print current page url on console.i tried with console.log('url is= '+driver.browser.getcurrenturl());getting below error on console **failed: driver is not defined**", 'i tried both ways . i get same errori installed protractor-jasmine-cuucmber npm both locally and globally', 'good idea!  why not throw it on to `err.message` on 120 of `lib/frameworks/jasmine.js`?', 'i also got ```calling function \'jasmine\'. function calls are not supported```obviously. it tried to "aot"-ify the spec files....', "update semver major npm modules. no code changes. but we did have to disable random test ordering in jasmine since cesium's unit tests unfortunately do not work when ran in a random order.i'll write up an issue to re-enable random test running (and fix broken tests).", "enable jasmine random test ordering and fix broken tests. #6383 upgraded jasmine which includes random testing ordering as the default.  this is desired because it creates more robust. standalone unit tests and make sure unit tests don't conflict with each other.  unfortunately. cesium's current unit tests have lots of this going on.  someone needs to re-enable the flag in `karma.conf.js` and fix any test failures exposed by repeatedly running `npm run test`. (this doesn't affect our ancient copy of jasmine that runs in the browser)", 'whoops. looks like there was some unexpected breakage (probably do to globby update). looking at it now.', 'looks good. thanks mramato!', 'hello. how can i change the fixture paths for jasmine-jquery? can i pass some params?', 'at the end of the day i created another helper and changed the paths there']