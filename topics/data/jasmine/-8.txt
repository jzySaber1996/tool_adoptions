['jasmine-jquery requires window.$ to be jquery. i work on an application that (for legacy reasons) uses both prototype & jquery.  window.$ is prototype.   i would like to still be able to use jasmine-jquery for tests.  jasmine-jquery should use jquery to refer to jquery. not $ (or be wrapped in a function that allows $ to be used only locally within that scope).', 'it seems like the changes in pull request #58 will address this. so if that could be merged in and released. it would be a huge help to me.', 'yeah. i have issues with the complexities introduced by that pr. i may take a crack at this soon with a simpler implementation.', 'duplicate file removed. dustexamples.. now all tests (old dust tests and jasmine) run using the same file.', 'i saw the pull request. i think that the code is good but i would like to understand how it could be useful. it would be a very good idea to add some jasmine test.', "> i would like to understand how it could be useful.did you see the example i added?``` jsdust.stream('template_name').pipe(response)```> it would be a very good idea to add some jasmine testjairodemorais i wrote the tests too. look at the diff.", 'kilianc .i saw the test that you created but you should add some jasmine test.', 'thanks for your inputs oleics. we want to have full support for node-js since we use this more in the future as well.i think jairodemorais mentioned jasmine. since we are trying to use one test suite i.e jasmine going forth and deprecate the otherwe will try to add it ourselves and a merge your request.', 'kilianc . the readme in the test folder has instructions for how to jasmine.', "feat: add a zone spec for fake async test zone.. this implementation is forked from the fake async from angular 2 and adds the following1) implements own scheduler queue that doesn't depend on the jasmine implementation of a scheduler queue.2) handles errors in timer/microtask callbacks better so that pending timers are removed properly on error (no need for a clearpendingtimers at the end of a test handling errors). the queue processing is stopped after the first error and can be restarted.3) throw an exception if a xmlhttprequest is used in a fakeasync test - useful for avoiding cases for ex. someone uses the online template compiler in a fakeasync test but forgot to use the template cache and ends up doing a xhr in the test.", 'the travis error seems to be legitimate.', 'looks good overall!', 'travis error - i need a better way to check whether the macro task is a xhr related call.', 'i don\'t know if this is a good solution but i noticed some of the requests on my angular app took a bit longer than 30000ms. so i changed in the config file " jasminenodeopts:{defaulttimeoutinterval: 60000} " to be 60000ms. now it works perfectly and i don\'t get timeout errors.', 'switch protractor to minijasminenode2', 'i signed it!', ">>> scene/cesium3dtileset resolves readypromise passes when ran alone or when all cesium3dtileset tests are ran. but it fails sometimes in ci and locally when all tests are ran.>>>lilleyse is this specific to this>> i haven't seen that one. does it timeout or just fail?timeout iirc.  actually. here is the one that fails intermittently in ci:```9) url and tileseturl set up correctly given directory without trailing slash     scene/cesium3dtileset     error: timeout - async callback was not invoked within timeout specified by jasmine.default_timeout_interval.```", "ugh. looks like the xhr loading doesn't work in the jasmine tests.  i guess they were falling through to cache-preloading?  that doesn't work in modern chrome.how does react server even work? [?]", 'should be able to change `"test": "node test/all.js"` in `package.json` to `"test": "jasmine-node spec"`. but. i don\'t know anything about travis. so i\'ll leave it up to you.', "yep. the listener instantiation is hardcoded. this is just a spike (non-tested. cow-boy-style code) to prove everything is ready for the pretty formatter.i'd like it to be rewritten following the normal bdd approach. with gherkin scenarios and jasmine specs. of course. all the code you wrote previously that is still relevant can be reused.i might get some time tonight to work on it but if you want to take back the control of this pull request. you're welcome!i'd like to close it as soon as possible though. it's been requested by many people. for quite a long time.", 'there are a lot of use cases for this. not only those mentioned.  jam has a separate config file from the main. and i have come to like that convention solely for separation of dependency configurations and shims and my main application config. pretty innocuous change providing upside for a bunch more use cases.', 'i agree on the "mainconfigfile" name. i\'ll try to merge later this evening.there is another consideration. however:i\'m not too happy about extracting some of the internals from r.js to be able to extract the config from the mainconfig file. we should instead either use r.js\'s api directly (the problem with that is that it is async. and then grunt-contrib-jasmine needs to be changed to support async templates). or we could extract the config ourselves with regex or esprima.', 'about the "mainconfigfile" option - this should not be inside "requireconfig" since "requireconfig" and the config from "mainconfig" should be merged. so "mainconfigfile" needs to be a sibling of requireconfig - and in that respect. "requireconfigfile" is probably a better name.', "igorlima - thanks for this pr.i do like the readability and have even thought that jasmine specs look better in coffeescript but it doesn't make things that much better. and right now we are not going to add coffeescript to the project. so closing.", 'default of jasmine-node option isverbose corrected. i switched from grunt-jasmine-node to grunt-jasmine-node-coverage and wondered why the verbose output of the test results did not show up anymore. to fix it i could set jasmine_node.options.isverbose to true in my grunt config but it took a while to find that out.your code still contains the logic that sets isverbose to true if not set in the grunt config. however. the default is not correctly passed to jasmine-node.', "now that i've merged this i notice that the reason is was the way it was before was because of an earlier merge request.  it seems there must be some disagreement on what this should be.", "'isverbose' does make sense. but 'verbose' maybe too. let me check..."]