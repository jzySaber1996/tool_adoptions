["add tohavebeentriggeredonandwith jasmine helper. jquery's `trigger` method allows us to pass extra parameter as an object or array in addition to an event name.this pr adds `tohavebeentriggeredonandwith` function that checks if a given event is triggered on expected jquery object with expected extra parameter.", 'do we want to create a separate npm module for: core. helpers. and grammar. this would effectively decouple peg.js grammar changes from core dust and helpers?', 'grammar was part of core. so i would keep them together. helpers are just extensions ..', 'i am going to add the jasmine-test', "buffer-overflow i will then wait if you don't mind until a small update with the npm/jasmine update before merging this :p", 'also excited to see jasmine come in. i was actually thinking about it recently. the addition of unit tests to the code base.', 'sjelin you are talking about jasmine but i use `chai.js`', 'suggestions on a test framework/runner for angularjs protractor test with api tests . hi i am writing testcases to test a website built in angularjs .i want to test frontend as well as api endpoints . i am using protractor to test the angularjs based frontend  and have given a  try on frisby which is a rest api testing framework built on node.js and jasmine. can protractor suggest me a system /test framework / runner which would help me to manage the testsuites (group wise or dependency wise ) and run both protractor + frisby tests using the same cli', 'here\'s my use case:- we run our ui tests in parallel- if one of the tests errors. it should leave the window in the state it was when the error occurred. and continue on testing in a new window- a developer can review the failures and look at the state of the browser window to debug any failed testsi\'m having trouble getting it to work exactly like i want.i got it to open a new window and continue running tests in it by using browser.forknewdriverinstance(). the only problem is that when protractor finishes running tests it closes all the windows. so there\'s no time to investigate. the other issue with this is that when running tests in parallel. they don\'t report any output until the whole process is finished. so i can\'t just "hang" the process until they are done.the other thing i tried is to call browser.pause() followed by process.exit(1). this successfully keeps the browser open after the process quits. but i can\'t run any more tests in the process after calling browser.pause(). so whatever tests followed an errored test will not get run.note that this is just for development machines. the build server would just take a screenshot of the current state and not try to keep the window open.', "forgot to mention i am not using selenium. but connecting directly to the chrome drivers.let me know if you need any further info!```var htmlreporter = require('protractor-html-screenshot-reporter');exports.config = {    capabilities: { 'browsername': 'chrome' }.    directconnect: true.    allscriptstimeout: 25000.    jasminenodeopts: { showcolors: true }.    onprepare: function () {        var params = browser.params;        jasmine.getenv().addreporter(new htmlreporter({            basedirectory: params.results_folder. takescreenshotsonlyforfailedspecs: true        }));        browser.driver.manage().window().maximize();        ... some more app-specific code to log-in. shouldn't affect protractor at all ...    }}```", "i believe it has something to do with the jasmine team but i'm not totally sure", "```    var jasminereporters = require('jasmine-reporters');    jasmine.getenv().addreporter(new jasminereporters.junitxmlreporter({        consolidateall: true.        savepath: 'testresults'.        fileprefix: 'reportxmloutput'    }));```", 'travis ci integration. i would like to add travis ci for run jasmine test.', "updated readme to install node dependencies properly. previously the readme suggested installing jasmine globally (frowned upon) and didn't cover installing dustjs-linkedin at all (which of course would in turn break tests). this is what package.json is for - no need to list the dependencies again in the readme. runing npm install in the project directory takes care of all things", 'thanks zzen', "oh. also - we're going to be changing the specs over to jsoverson's grunt-jasmine-runner soon. so you won't need ruby to run the specs.", 'thanks. i had write a jasmine test task name parse_test in gruntfile.js. maybe you can try it.', 'thanks for the reply reinseth. unfortunately this does not work for me as i\'m not planning on loading knockout via requirejs. i load it up front in order to register ko as a global namespace. hence i\'ll get the "ko is undefined" error when trying your approach. the real solution imo is to allow vendor scripts to be loaded in prior to executing your tests. independently from requirejs.', "hole in template for html. hi.there might be better ways to achieve what i want but here goes. i am using your template and it rocks. however. i would like to testing my backbone views using the html that the views are responsible for. i don't really want to duplicate the html code as i think there is value in testing the views with their html file dependencies. in order for me to get the views to attach to the dom when they are created i need to have the spec runner decorated with the required elements. i have modified the template supplied with the grunt task to have a hole i can (before each test) attach elements needed for the view under test.i dont like modifying the template as it now takes me somewhat off the upgrade path for the task.so my suggestion would be to have an option or something for a hole in the template where a user can attach html. there is the body tag but that gets smashed with jasmine elements and is no longer a sandbox for application html (if that makes sense).what do you think?", "awesome. that's the best way for all scenarios since it's order independent.whenever you put knockout reference before or after requirejs. it works either way.", 'yes. using the callback works! thanks a lot for your time and answers!', "closing browser while running tests  in angular runner. not sure if anybody else doing e2e testing using angular runner is running into this issue.i have couple of tests written using jasmine syntax. when i run them one by one. tests work fine and pass but when i run them together. they inconsistently fail. in each test( controls seem to have older values). i use browser.navigate() method in before each block. the same tests when written and run in codedui work fine. the only difference being that in codedui i can close  the browser window after running each test separately. not able to find the same functionality in angular/jasmine. tried reload method but doesn't help either.anybody has any idea. i can provide more details if needed.", 'you need to create new branches for each pr:```git checkout -b is-array-perf-improvment mastergit commit -am"refact(angular.js): use isarray if available"git push -u origin is-array-perf-improvementgit checkout -b grunt-jasmine-node-fix mastergit commit -am"chore(npm): grunt-contrib-jasmine-node changed name"git push -u origin grunt-jasmine-node-fix```', 'chore(npm): grunt-contrib-jasmine-node changed name', 'jtangelder - nice one.  we need that cla', 'i just signed. my real name is jorik tangelder. thanks for helping me out pete!', 'magic!  thanks', 'landed as dd7cb15', 'chore(npm): grunt-jasmine-node travis build. #4380', 'thanks jtangelder - i did the additional fix myself. landed as dd7cb15bcf4767e20f4f620b33cb1fd35d8857d7 and c317a7b51ac5b9cf76f399427e7e71fe4f793818']